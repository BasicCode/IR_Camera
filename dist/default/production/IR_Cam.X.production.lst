

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jan 31 15:32:41 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F24J50 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   108                           RPOR0 equ 0EC6h ;# 
   109  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   110                           RPOR1 equ 0EC7h ;# 
   111  0000                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   112                           RPOR2 equ 0EC8h ;# 
   113  0000                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   114                           RPOR3 equ 0EC9h ;# 
   115  0000                     # 82 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   116                           RPOR4 equ 0ECAh ;# 
   117  0000                     # 89 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   118                           RPOR5 equ 0ECBh ;# 
   119  0000                     # 96 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   120                           RPOR6 equ 0ECCh ;# 
   121  0000                     # 103 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   122                           RPOR7 equ 0ECDh ;# 
   123  0000                     # 110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   124                           RPOR8 equ 0ECEh ;# 
   125  0000                     # 117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   126                           RPOR9 equ 0ECFh ;# 
   127  0000                     # 124 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   128                           RPOR10 equ 0ED0h ;# 
   129  0000                     # 131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   130                           RPOR11 equ 0ED1h ;# 
   131  0000                     # 138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   132                           RPOR12 equ 0ED2h ;# 
   133  0000                     # 145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   134                           RPOR13 equ 0ED3h ;# 
   135  0000                     # 152 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   136                           RPOR17 equ 0ED7h ;# 
   137  0000                     # 159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   138                           RPOR18 equ 0ED8h ;# 
   139  0000                     # 166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   140                           RPINR1 equ 0EE7h ;# 
   141  0000                     # 173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   142                           RPINR2 equ 0EE8h ;# 
   143  0000                     # 180 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   144                           RPINR3 equ 0EE9h ;# 
   145  0000                     # 187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   146                           RPINR4 equ 0EEAh ;# 
   147  0000                     # 194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   148                           RPINR6 equ 0EECh ;# 
   149  0000                     # 201 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   150                           RPINR7 equ 0EEDh ;# 
   151  0000                     # 208 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   152                           RPINR8 equ 0EEEh ;# 
   153  0000                     # 215 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   154                           RPINR12 equ 0EF2h ;# 
   155  0000                     # 222 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   156                           RPINR13 equ 0EF3h ;# 
   157  0000                     # 229 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   158                           RPINR16 equ 0EF6h ;# 
   159  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   160                           RPINR17 equ 0EF7h ;# 
   161  0000                     # 243 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   162                           RPINR21 equ 0EFBh ;# 
   163  0000                     # 250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   164                           RPINR22 equ 0EFCh ;# 
   165  0000                     # 257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   166                           RPINR23 equ 0EFDh ;# 
   167  0000                     # 264 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   168                           RPINR24 equ 0EFEh ;# 
   169  0000                     # 271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   170                           PPSCON equ 0EFFh ;# 
   171  0000                     # 291 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   172                           UEP0 equ 0F26h ;# 
   173  0000                     # 399 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   174                           UEP1 equ 0F27h ;# 
   175  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   176                           UEP2 equ 0F28h ;# 
   177  0000                     # 615 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   178                           UEP3 equ 0F29h ;# 
   179  0000                     # 723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   180                           UEP4 equ 0F2Ah ;# 
   181  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   182                           UEP5 equ 0F2Bh ;# 
   183  0000                     # 939 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   184                           UEP6 equ 0F2Ch ;# 
   185  0000                     # 1047 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   186                           UEP7 equ 0F2Dh ;# 
   187  0000                     # 1155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   188                           UEP8 equ 0F2Eh ;# 
   189  0000                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   190                           UEP9 equ 0F2Fh ;# 
   191  0000                     # 1307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   192                           UEP10 equ 0F30h ;# 
   193  0000                     # 1383 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   194                           UEP11 equ 0F31h ;# 
   195  0000                     # 1459 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   196                           UEP12 equ 0F32h ;# 
   197  0000                     # 1535 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   198                           UEP13 equ 0F33h ;# 
   199  0000                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   200                           UEP14 equ 0F34h ;# 
   201  0000                     # 1687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   202                           UEP15 equ 0F35h ;# 
   203  0000                     # 1763 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   204                           UIE equ 0F36h ;# 
   205  0000                     # 1819 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   206                           UEIE equ 0F37h ;# 
   207  0000                     # 1870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   208                           UADDR equ 0F38h ;# 
   209  0000                     # 1934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   210                           UCFG equ 0F39h ;# 
   211  0000                     # 2005 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   212                           PADCFG1 equ 0F3Ch ;# 
   213  0000                     # 2037 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   214                           REFOCON equ 0F3Dh ;# 
   215  0000                     # 2102 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   216                           RTCCAL equ 0F3Eh ;# 
   217  0000                     # 2172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   218                           RTCCFG equ 0F3Fh ;# 
   219  0000                     # 2229 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   220                           ODCON3 equ 0F40h ;# 
   221  0000                     # 2255 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   222                           ODCON2 equ 0F41h ;# 
   223  0000                     # 2281 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   224                           ODCON1 equ 0F42h ;# 
   225  0000                     # 2307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   226                           ANCON0 equ 0F48h ;# 
   227  0000                     # 2351 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   228                           ANCON1 equ 0F49h ;# 
   229  0000                     # 2423 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   230                           DSWAKEL equ 0F4Ah ;# 
   231  0000                     # 2475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   232                           DSWAKEH equ 0F4Bh ;# 
   233  0000                     # 2495 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   234                           DSCONL equ 0F4Ch ;# 
   235  0000                     # 2527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   236                           DSCONH equ 0F4Dh ;# 
   237  0000                     # 2560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   238                           DSGPR0 equ 0F4Eh ;# 
   239  0000                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   240                           DSGPR1 equ 0F4Fh ;# 
   241  0000                     # 2600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   242                           TCLKCON equ 0F52h ;# 
   243  0000                     # 2633 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   244                           CVRCON equ 0F53h ;# 
   245  0000                     # 2712 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   246                           UFRM equ 0F60h ;# 
   247  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   248                           UFRML equ 0F60h ;# 
   249  0000                     # 2797 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   250                           UFRMH equ 0F61h ;# 
   251  0000                     # 2837 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   252                           UIR equ 0F62h ;# 
   253  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   254                           UEIR equ 0F63h ;# 
   255  0000                     # 2944 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   256                           USTAT equ 0F64h ;# 
   257  0000                     # 3004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   258                           UCON equ 0F65h ;# 
   259  0000                     # 3055 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   260                           DMABCH equ 0F66h ;# 
   261  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   262                           DMABCL equ 0F67h ;# 
   263  0000                     # 3095 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   264                           RXADDRH equ 0F68h ;# 
   265  0000                     # 3115 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   266                           RXADDRL equ 0F69h ;# 
   267  0000                     # 3135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   268                           TXADDRH equ 0F6Ah ;# 
   269  0000                     # 3155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   270                           TXADDRL equ 0F6Bh ;# 
   271  0000                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   272                           CMSTAT equ 0F70h ;# 
   273  0000                     # 3180 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   274                           CMSTATUS equ 0F70h ;# 
   275  0000                     # 3225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   276                           SSP2CON2 equ 0F71h ;# 
   277  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   278                           SSP2CON1 equ 0F72h ;# 
   279  0000                     # 3523 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   280                           SSP2STAT equ 0F73h ;# 
   281  0000                     # 3825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   282                           SSP2ADD equ 0F74h ;# 
   283  0000                     # 3830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   284                           SSP2MSK equ 0F74h ;# 
   285  0000                     # 4063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   286                           SSP2BUF equ 0F75h ;# 
   287  0000                     # 4083 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   288                           T4CON equ 0F76h ;# 
   289  0000                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   290                           PR4 equ 0F77h ;# 
   291  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   292                           TMR4 equ 0F78h ;# 
   293  0000                     # 4194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   294                           T3CON equ 0F79h ;# 
   295  0000                     # 4296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   296                           TMR3 equ 0F7Ah ;# 
   297  0000                     # 4303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   298                           TMR3L equ 0F7Ah ;# 
   299  0000                     # 4323 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   300                           TMR3H equ 0F7Bh ;# 
   301  0000                     # 4343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   302                           BAUDCON2 equ 0F7Ch ;# 
   303  0000                     # 4466 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   304                           SPBRGH2 equ 0F7Dh ;# 
   305  0000                     # 4486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   306                           BAUDCON1 equ 0F7Eh ;# 
   307  0000                     # 4491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   308                           BAUDCON equ 0F7Eh ;# 
   309  0000                     # 4495 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   310                           BAUDCTL equ 0F7Eh ;# 
   311  0000                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   312                           SPBRGH1 equ 0F7Fh ;# 
   313  0000                     # 4998 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   314                           SPBRGH equ 0F7Fh ;# 
   315  0000                     # 5031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   316                           PORTA equ 0F80h ;# 
   317  0000                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   318                           PORTB equ 0F81h ;# 
   319  0000                     # 5536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   320                           PORTC equ 0F82h ;# 
   321  0000                     # 5761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   322                           HLVDCON equ 0F85h ;# 
   323  0000                     # 5831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   324                           DMACON2 equ 0F86h ;# 
   325  0000                     # 5907 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   326                           DMACON1 equ 0F88h ;# 
   327  0000                     # 5969 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   328                           LATA equ 0F89h ;# 
   329  0000                     # 6071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   330                           LATB equ 0F8Ah ;# 
   331  0000                     # 6183 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   332                           LATC equ 0F8Bh ;# 
   333  0000                     # 6285 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   334                           ALRMVALL equ 0F8Eh ;# 
   335  0000                     # 6305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   336                           ALRMVALH equ 0F8Fh ;# 
   337  0000                     # 6325 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   338                           ALRMRPT equ 0F90h ;# 
   339  0000                     # 6395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   340                           ALRMCFG equ 0F91h ;# 
   341  0000                     # 6471 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   342                           TRISA equ 0F92h ;# 
   343  0000                     # 6528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   344                           TRISB equ 0F93h ;# 
   345  0000                     # 6590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   346                           TRISC equ 0F94h ;# 
   347  0000                     # 6647 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   348                           T3GCON equ 0F97h ;# 
   349  0000                     # 6727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   350                           RTCVALL equ 0F98h ;# 
   351  0000                     # 6747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   352                           RTCVALH equ 0F99h ;# 
   353  0000                     # 6817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   354                           T1GCON equ 0F9Ah ;# 
   355  0000                     # 6897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   356                           OSCTUNE equ 0F9Bh ;# 
   357  0000                     # 6967 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   358                           RCSTA2 equ 0F9Ch ;# 
   359  0000                     # 7103 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   360                           PIE1 equ 0F9Dh ;# 
   361  0000                     # 7180 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   362                           PIR1 equ 0F9Eh ;# 
   363  0000                     # 7257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   364                           IPR1 equ 0F9Fh ;# 
   365  0000                     # 7334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   366                           PIE2 equ 0FA0h ;# 
   367  0000                     # 7414 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   368                           PIR2 equ 0FA1h ;# 
   369  0000                     # 7494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   370                           IPR2 equ 0FA2h ;# 
   371  0000                     # 7574 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   372                           PIE3 equ 0FA3h ;# 
   373  0000                     # 7684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   374                           PIR3 equ 0FA4h ;# 
   375  0000                     # 7762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   376                           IPR3 equ 0FA5h ;# 
   377  0000                     # 7840 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   378                           EECON1 equ 0FA6h ;# 
   379  0000                     # 7885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   380                           EECON2 equ 0FA7h ;# 
   381  0000                     # 7905 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   382                           TXSTA2 equ 0FA8h ;# 
   383  0000                     # 8032 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   384                           TXREG2 equ 0FA9h ;# 
   385  0000                     # 8052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   386                           RCREG2 equ 0FAAh ;# 
   387  0000                     # 8072 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   388                           SPBRG2 equ 0FABh ;# 
   389  0000                     # 8092 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   390                           RCSTA1 equ 0FACh ;# 
   391  0000                     # 8097 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   392                           RCSTA equ 0FACh ;# 
   393  0000                     # 8430 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   394                           TXSTA1 equ 0FADh ;# 
   395  0000                     # 8435 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   396                           TXSTA equ 0FADh ;# 
   397  0000                     # 8718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   398                           TXREG1 equ 0FAEh ;# 
   399  0000                     # 8723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   400                           TXREG equ 0FAEh ;# 
   401  0000                     # 8756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   402                           RCREG1 equ 0FAFh ;# 
   403  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   404                           RCREG equ 0FAFh ;# 
   405  0000                     # 8794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   406                           SPBRG1 equ 0FB0h ;# 
   407  0000                     # 8799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   408                           SPBRG equ 0FB0h ;# 
   409  0000                     # 8832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   410                           CTMUICON equ 0FB1h ;# 
   411  0000                     # 8908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   412                           CTMUCONL equ 0FB2h ;# 
   413  0000                     # 8986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   414                           CTMUCONH equ 0FB3h ;# 
   415  0000                     # 9043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   416                           CCP2CON equ 0FB4h ;# 
   417  0000                     # 9048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   418                           ECCP2CON equ 0FB4h ;# 
   419  0000                     # 9235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   420                           CCPR2 equ 0FB5h ;# 
   421  0000                     # 9242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   422                           CCPR2L equ 0FB5h ;# 
   423  0000                     # 9262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   424                           CCPR2H equ 0FB6h ;# 
   425  0000                     # 9282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   426                           ECCP2DEL equ 0FB7h ;# 
   427  0000                     # 9287 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   428                           PWM2CON equ 0FB7h ;# 
   429  0000                     # 9420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   430                           ECCP2AS equ 0FB8h ;# 
   431  0000                     # 9502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   432                           PSTR2CON equ 0FB9h ;# 
   433  0000                     # 9744 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   434                           CCP1CON equ 0FBAh ;# 
   435  0000                     # 9749 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   436                           ECCP1CON equ 0FBAh ;# 
   437  0000                     # 9936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   438                           CCPR1 equ 0FBBh ;# 
   439  0000                     # 9943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   440                           CCPR1L equ 0FBBh ;# 
   441  0000                     # 9963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   442                           CCPR1H equ 0FBCh ;# 
   443  0000                     # 9983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   444                           ECCP1DEL equ 0FBDh ;# 
   445  0000                     # 9988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   446                           PWM1CON equ 0FBDh ;# 
   447  0000                     # 10121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   448                           ECCP1AS equ 0FBEh ;# 
   449  0000                     # 10203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   450                           PSTR1CON equ 0FBFh ;# 
   451  0000                     # 10260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   452                           WDTCON equ 0FC0h ;# 
   453  0000                     # 10325 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   454                           ADCON1 equ 0FC1h ;# 
   455  0000                     # 10422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   456                           ADCON0 equ 0FC2h ;# 
   457  0000                     # 10566 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   458                           ADRES equ 0FC3h ;# 
   459  0000                     # 10573 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   460                           ADRESL equ 0FC3h ;# 
   461  0000                     # 10593 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   462                           ADRESH equ 0FC4h ;# 
   463  0000                     # 10613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   464                           SSP1CON2 equ 0FC5h ;# 
   465  0000                     # 10618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   466                           SSPCON2 equ 0FC5h ;# 
   467  0000                     # 10967 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   468                           SSP1CON1 equ 0FC6h ;# 
   469  0000                     # 10972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   470                           SSPCON1 equ 0FC6h ;# 
   471  0000                     # 11205 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   472                           SSP1STAT equ 0FC7h ;# 
   473  0000                     # 11210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   474                           SSPSTAT equ 0FC7h ;# 
   475  0000                     # 12179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   476                           SSP1ADD equ 0FC8h ;# 
   477  0000                     # 12184 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   478                           SSPADD equ 0FC8h ;# 
   479  0000                     # 12188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   480                           SSP1MSK equ 0FC8h ;# 
   481  0000                     # 12533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   482                           SSP1BUF equ 0FC9h ;# 
   483  0000                     # 12538 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   484                           SSPBUF equ 0FC9h ;# 
   485  0000                     # 12571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   486                           T2CON equ 0FCAh ;# 
   487  0000                     # 12642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   488                           PR2 equ 0FCBh ;# 
   489  0000                     # 12647 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   490                           MEMCON equ 0FCBh ;# 
   491  0000                     # 12768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   492                           TMR2 equ 0FCCh ;# 
   493  0000                     # 12788 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   494                           T1CON equ 0FCDh ;# 
   495  0000                     # 12926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   496                           TMR1 equ 0FCEh ;# 
   497  0000                     # 12933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   498                           TMR1L equ 0FCEh ;# 
   499  0000                     # 12953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   500                           TMR1H equ 0FCFh ;# 
   501  0000                     # 12973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   502                           RCON equ 0FD0h ;# 
   503  0000                     # 13121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   504                           CM2CON equ 0FD1h ;# 
   505  0000                     # 13126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   506                           CM2CON1 equ 0FD1h ;# 
   507  0000                     # 13373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   508                           CM1CON equ 0FD2h ;# 
   509  0000                     # 13378 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   510                           CM1CON1 equ 0FD2h ;# 
   511  0000                     # 13653 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   512                           OSCCON equ 0FD3h ;# 
   513  0000                     # 13725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   514                           T0CON equ 0FD5h ;# 
   515  0000                     # 13795 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   516                           TMR0 equ 0FD6h ;# 
   517  0000                     # 13802 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   518                           TMR0L equ 0FD6h ;# 
   519  0000                     # 13822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   520                           TMR0H equ 0FD7h ;# 
   521  0000                     # 13842 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   522                           STATUS equ 0FD8h ;# 
   523  0000                     # 13913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   524                           FSR2 equ 0FD9h ;# 
   525  0000                     # 13920 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   526                           FSR2L equ 0FD9h ;# 
   527  0000                     # 13940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   528                           FSR2H equ 0FDAh ;# 
   529  0000                     # 13947 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   530                           PLUSW2 equ 0FDBh ;# 
   531  0000                     # 13967 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   532                           PREINC2 equ 0FDCh ;# 
   533  0000                     # 13987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   534                           POSTDEC2 equ 0FDDh ;# 
   535  0000                     # 14007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   536                           POSTINC2 equ 0FDEh ;# 
   537  0000                     # 14027 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   538                           INDF2 equ 0FDFh ;# 
   539  0000                     # 14047 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   540                           BSR equ 0FE0h ;# 
   541  0000                     # 14054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   542                           FSR1 equ 0FE1h ;# 
   543  0000                     # 14061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   544                           FSR1L equ 0FE1h ;# 
   545  0000                     # 14081 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   546                           FSR1H equ 0FE2h ;# 
   547  0000                     # 14088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   548                           PLUSW1 equ 0FE3h ;# 
   549  0000                     # 14108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   550                           PREINC1 equ 0FE4h ;# 
   551  0000                     # 14128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   552                           POSTDEC1 equ 0FE5h ;# 
   553  0000                     # 14148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   554                           POSTINC1 equ 0FE6h ;# 
   555  0000                     # 14168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   556                           INDF1 equ 0FE7h ;# 
   557  0000                     # 14188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   558                           WREG equ 0FE8h ;# 
   559  0000                     # 14208 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   560                           FSR0 equ 0FE9h ;# 
   561  0000                     # 14215 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   562                           FSR0L equ 0FE9h ;# 
   563  0000                     # 14235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   564                           FSR0H equ 0FEAh ;# 
   565  0000                     # 14242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   566                           PLUSW0 equ 0FEBh ;# 
   567  0000                     # 14262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   568                           PREINC0 equ 0FECh ;# 
   569  0000                     # 14282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   570                           POSTDEC0 equ 0FEDh ;# 
   571  0000                     # 14302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   572                           POSTINC0 equ 0FEEh ;# 
   573  0000                     # 14322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   574                           INDF0 equ 0FEFh ;# 
   575  0000                     # 14342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   576                           INTCON3 equ 0FF0h ;# 
   577  0000                     # 14454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   578                           INTCON2 equ 0FF1h ;# 
   579  0000                     # 14547 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   580                           INTCON equ 0FF2h ;# 
   581  0000                     # 14664 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   582                           PROD equ 0FF3h ;# 
   583  0000                     # 14671 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   584                           PRODL equ 0FF3h ;# 
   585  0000                     # 14691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   586                           PRODH equ 0FF4h ;# 
   587  0000                     # 14711 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   588                           TABLAT equ 0FF5h ;# 
   589  0000                     # 14733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   590                           TBLPTR equ 0FF6h ;# 
   591  0000                     # 14740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   592                           TBLPTRL equ 0FF6h ;# 
   593  0000                     # 14760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   594                           TBLPTRH equ 0FF7h ;# 
   595  0000                     # 14780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   596                           TBLPTRU equ 0FF8h ;# 
   597  0000                     # 14789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   598                           PCLAT equ 0FF9h ;# 
   599  0000                     # 14796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   600                           PC equ 0FF9h ;# 
   601  0000                     # 14803 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   602                           PCL equ 0FF9h ;# 
   603  0000                     # 14823 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   604                           PCLATH equ 0FFAh ;# 
   605  0000                     # 14843 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   606                           PCLATU equ 0FFBh ;# 
   607  0000                     # 14850 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   608                           STKPTR equ 0FFCh ;# 
   609  0000                     # 14924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   610                           TOS equ 0FFDh ;# 
   611  0000                     # 14931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   612                           TOSL equ 0FFDh ;# 
   613  0000                     # 14951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   614                           TOSH equ 0FFEh ;# 
   615  0000                     # 14971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   616                           TOSU equ 0FFFh ;# 
   617  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   618                           RPOR0 equ 0EC6h ;# 
   619  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   620                           RPOR1 equ 0EC7h ;# 
   621  0000                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   622                           RPOR2 equ 0EC8h ;# 
   623  0000                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   624                           RPOR3 equ 0EC9h ;# 
   625  0000                     # 82 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   626                           RPOR4 equ 0ECAh ;# 
   627  0000                     # 89 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   628                           RPOR5 equ 0ECBh ;# 
   629  0000                     # 96 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   630                           RPOR6 equ 0ECCh ;# 
   631  0000                     # 103 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   632                           RPOR7 equ 0ECDh ;# 
   633  0000                     # 110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   634                           RPOR8 equ 0ECEh ;# 
   635  0000                     # 117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   636                           RPOR9 equ 0ECFh ;# 
   637  0000                     # 124 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   638                           RPOR10 equ 0ED0h ;# 
   639  0000                     # 131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   640                           RPOR11 equ 0ED1h ;# 
   641  0000                     # 138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   642                           RPOR12 equ 0ED2h ;# 
   643  0000                     # 145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   644                           RPOR13 equ 0ED3h ;# 
   645  0000                     # 152 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   646                           RPOR17 equ 0ED7h ;# 
   647  0000                     # 159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   648                           RPOR18 equ 0ED8h ;# 
   649  0000                     # 166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   650                           RPINR1 equ 0EE7h ;# 
   651  0000                     # 173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   652                           RPINR2 equ 0EE8h ;# 
   653  0000                     # 180 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   654                           RPINR3 equ 0EE9h ;# 
   655  0000                     # 187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   656                           RPINR4 equ 0EEAh ;# 
   657  0000                     # 194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   658                           RPINR6 equ 0EECh ;# 
   659  0000                     # 201 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   660                           RPINR7 equ 0EEDh ;# 
   661  0000                     # 208 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   662                           RPINR8 equ 0EEEh ;# 
   663  0000                     # 215 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   664                           RPINR12 equ 0EF2h ;# 
   665  0000                     # 222 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   666                           RPINR13 equ 0EF3h ;# 
   667  0000                     # 229 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   668                           RPINR16 equ 0EF6h ;# 
   669  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   670                           RPINR17 equ 0EF7h ;# 
   671  0000                     # 243 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   672                           RPINR21 equ 0EFBh ;# 
   673  0000                     # 250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   674                           RPINR22 equ 0EFCh ;# 
   675  0000                     # 257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   676                           RPINR23 equ 0EFDh ;# 
   677  0000                     # 264 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   678                           RPINR24 equ 0EFEh ;# 
   679  0000                     # 271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   680                           PPSCON equ 0EFFh ;# 
   681  0000                     # 291 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   682                           UEP0 equ 0F26h ;# 
   683  0000                     # 399 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   684                           UEP1 equ 0F27h ;# 
   685  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   686                           UEP2 equ 0F28h ;# 
   687  0000                     # 615 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   688                           UEP3 equ 0F29h ;# 
   689  0000                     # 723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   690                           UEP4 equ 0F2Ah ;# 
   691  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   692                           UEP5 equ 0F2Bh ;# 
   693  0000                     # 939 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   694                           UEP6 equ 0F2Ch ;# 
   695  0000                     # 1047 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   696                           UEP7 equ 0F2Dh ;# 
   697  0000                     # 1155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   698                           UEP8 equ 0F2Eh ;# 
   699  0000                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   700                           UEP9 equ 0F2Fh ;# 
   701  0000                     # 1307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   702                           UEP10 equ 0F30h ;# 
   703  0000                     # 1383 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   704                           UEP11 equ 0F31h ;# 
   705  0000                     # 1459 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   706                           UEP12 equ 0F32h ;# 
   707  0000                     # 1535 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   708                           UEP13 equ 0F33h ;# 
   709  0000                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   710                           UEP14 equ 0F34h ;# 
   711  0000                     # 1687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   712                           UEP15 equ 0F35h ;# 
   713  0000                     # 1763 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   714                           UIE equ 0F36h ;# 
   715  0000                     # 1819 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   716                           UEIE equ 0F37h ;# 
   717  0000                     # 1870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   718                           UADDR equ 0F38h ;# 
   719  0000                     # 1934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   720                           UCFG equ 0F39h ;# 
   721  0000                     # 2005 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   722                           PADCFG1 equ 0F3Ch ;# 
   723  0000                     # 2037 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   724                           REFOCON equ 0F3Dh ;# 
   725  0000                     # 2102 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   726                           RTCCAL equ 0F3Eh ;# 
   727  0000                     # 2172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   728                           RTCCFG equ 0F3Fh ;# 
   729  0000                     # 2229 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   730                           ODCON3 equ 0F40h ;# 
   731  0000                     # 2255 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   732                           ODCON2 equ 0F41h ;# 
   733  0000                     # 2281 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   734                           ODCON1 equ 0F42h ;# 
   735  0000                     # 2307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   736                           ANCON0 equ 0F48h ;# 
   737  0000                     # 2351 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   738                           ANCON1 equ 0F49h ;# 
   739  0000                     # 2423 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   740                           DSWAKEL equ 0F4Ah ;# 
   741  0000                     # 2475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   742                           DSWAKEH equ 0F4Bh ;# 
   743  0000                     # 2495 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   744                           DSCONL equ 0F4Ch ;# 
   745  0000                     # 2527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   746                           DSCONH equ 0F4Dh ;# 
   747  0000                     # 2560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   748                           DSGPR0 equ 0F4Eh ;# 
   749  0000                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   750                           DSGPR1 equ 0F4Fh ;# 
   751  0000                     # 2600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   752                           TCLKCON equ 0F52h ;# 
   753  0000                     # 2633 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   754                           CVRCON equ 0F53h ;# 
   755  0000                     # 2712 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   756                           UFRM equ 0F60h ;# 
   757  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   758                           UFRML equ 0F60h ;# 
   759  0000                     # 2797 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   760                           UFRMH equ 0F61h ;# 
   761  0000                     # 2837 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   762                           UIR equ 0F62h ;# 
   763  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   764                           UEIR equ 0F63h ;# 
   765  0000                     # 2944 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   766                           USTAT equ 0F64h ;# 
   767  0000                     # 3004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   768                           UCON equ 0F65h ;# 
   769  0000                     # 3055 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   770                           DMABCH equ 0F66h ;# 
   771  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   772                           DMABCL equ 0F67h ;# 
   773  0000                     # 3095 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   774                           RXADDRH equ 0F68h ;# 
   775  0000                     # 3115 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   776                           RXADDRL equ 0F69h ;# 
   777  0000                     # 3135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   778                           TXADDRH equ 0F6Ah ;# 
   779  0000                     # 3155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   780                           TXADDRL equ 0F6Bh ;# 
   781  0000                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   782                           CMSTAT equ 0F70h ;# 
   783  0000                     # 3180 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   784                           CMSTATUS equ 0F70h ;# 
   785  0000                     # 3225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   786                           SSP2CON2 equ 0F71h ;# 
   787  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   788                           SSP2CON1 equ 0F72h ;# 
   789  0000                     # 3523 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   790                           SSP2STAT equ 0F73h ;# 
   791  0000                     # 3825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   792                           SSP2ADD equ 0F74h ;# 
   793  0000                     # 3830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   794                           SSP2MSK equ 0F74h ;# 
   795  0000                     # 4063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   796                           SSP2BUF equ 0F75h ;# 
   797  0000                     # 4083 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   798                           T4CON equ 0F76h ;# 
   799  0000                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   800                           PR4 equ 0F77h ;# 
   801  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   802                           TMR4 equ 0F78h ;# 
   803  0000                     # 4194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   804                           T3CON equ 0F79h ;# 
   805  0000                     # 4296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   806                           TMR3 equ 0F7Ah ;# 
   807  0000                     # 4303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   808                           TMR3L equ 0F7Ah ;# 
   809  0000                     # 4323 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   810                           TMR3H equ 0F7Bh ;# 
   811  0000                     # 4343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   812                           BAUDCON2 equ 0F7Ch ;# 
   813  0000                     # 4466 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   814                           SPBRGH2 equ 0F7Dh ;# 
   815  0000                     # 4486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   816                           BAUDCON1 equ 0F7Eh ;# 
   817  0000                     # 4491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   818                           BAUDCON equ 0F7Eh ;# 
   819  0000                     # 4495 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   820                           BAUDCTL equ 0F7Eh ;# 
   821  0000                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   822                           SPBRGH1 equ 0F7Fh ;# 
   823  0000                     # 4998 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   824                           SPBRGH equ 0F7Fh ;# 
   825  0000                     # 5031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   826                           PORTA equ 0F80h ;# 
   827  0000                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   828                           PORTB equ 0F81h ;# 
   829  0000                     # 5536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   830                           PORTC equ 0F82h ;# 
   831  0000                     # 5761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   832                           HLVDCON equ 0F85h ;# 
   833  0000                     # 5831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   834                           DMACON2 equ 0F86h ;# 
   835  0000                     # 5907 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   836                           DMACON1 equ 0F88h ;# 
   837  0000                     # 5969 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   838                           LATA equ 0F89h ;# 
   839  0000                     # 6071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   840                           LATB equ 0F8Ah ;# 
   841  0000                     # 6183 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   842                           LATC equ 0F8Bh ;# 
   843  0000                     # 6285 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   844                           ALRMVALL equ 0F8Eh ;# 
   845  0000                     # 6305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   846                           ALRMVALH equ 0F8Fh ;# 
   847  0000                     # 6325 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   848                           ALRMRPT equ 0F90h ;# 
   849  0000                     # 6395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   850                           ALRMCFG equ 0F91h ;# 
   851  0000                     # 6471 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   852                           TRISA equ 0F92h ;# 
   853  0000                     # 6528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   854                           TRISB equ 0F93h ;# 
   855  0000                     # 6590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   856                           TRISC equ 0F94h ;# 
   857  0000                     # 6647 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   858                           T3GCON equ 0F97h ;# 
   859  0000                     # 6727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   860                           RTCVALL equ 0F98h ;# 
   861  0000                     # 6747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   862                           RTCVALH equ 0F99h ;# 
   863  0000                     # 6817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   864                           T1GCON equ 0F9Ah ;# 
   865  0000                     # 6897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   866                           OSCTUNE equ 0F9Bh ;# 
   867  0000                     # 6967 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   868                           RCSTA2 equ 0F9Ch ;# 
   869  0000                     # 7103 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   870                           PIE1 equ 0F9Dh ;# 
   871  0000                     # 7180 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   872                           PIR1 equ 0F9Eh ;# 
   873  0000                     # 7257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   874                           IPR1 equ 0F9Fh ;# 
   875  0000                     # 7334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   876                           PIE2 equ 0FA0h ;# 
   877  0000                     # 7414 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   878                           PIR2 equ 0FA1h ;# 
   879  0000                     # 7494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   880                           IPR2 equ 0FA2h ;# 
   881  0000                     # 7574 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   882                           PIE3 equ 0FA3h ;# 
   883  0000                     # 7684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   884                           PIR3 equ 0FA4h ;# 
   885  0000                     # 7762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   886                           IPR3 equ 0FA5h ;# 
   887  0000                     # 7840 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   888                           EECON1 equ 0FA6h ;# 
   889  0000                     # 7885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   890                           EECON2 equ 0FA7h ;# 
   891  0000                     # 7905 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   892                           TXSTA2 equ 0FA8h ;# 
   893  0000                     # 8032 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   894                           TXREG2 equ 0FA9h ;# 
   895  0000                     # 8052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   896                           RCREG2 equ 0FAAh ;# 
   897  0000                     # 8072 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   898                           SPBRG2 equ 0FABh ;# 
   899  0000                     # 8092 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   900                           RCSTA1 equ 0FACh ;# 
   901  0000                     # 8097 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   902                           RCSTA equ 0FACh ;# 
   903  0000                     # 8430 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   904                           TXSTA1 equ 0FADh ;# 
   905  0000                     # 8435 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   906                           TXSTA equ 0FADh ;# 
   907  0000                     # 8718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   908                           TXREG1 equ 0FAEh ;# 
   909  0000                     # 8723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   910                           TXREG equ 0FAEh ;# 
   911  0000                     # 8756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   912                           RCREG1 equ 0FAFh ;# 
   913  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   914                           RCREG equ 0FAFh ;# 
   915  0000                     # 8794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   916                           SPBRG1 equ 0FB0h ;# 
   917  0000                     # 8799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   918                           SPBRG equ 0FB0h ;# 
   919  0000                     # 8832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   920                           CTMUICON equ 0FB1h ;# 
   921  0000                     # 8908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   922                           CTMUCONL equ 0FB2h ;# 
   923  0000                     # 8986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   924                           CTMUCONH equ 0FB3h ;# 
   925  0000                     # 9043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   926                           CCP2CON equ 0FB4h ;# 
   927  0000                     # 9048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   928                           ECCP2CON equ 0FB4h ;# 
   929  0000                     # 9235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   930                           CCPR2 equ 0FB5h ;# 
   931  0000                     # 9242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   932                           CCPR2L equ 0FB5h ;# 
   933  0000                     # 9262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   934                           CCPR2H equ 0FB6h ;# 
   935  0000                     # 9282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   936                           ECCP2DEL equ 0FB7h ;# 
   937  0000                     # 9287 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   938                           PWM2CON equ 0FB7h ;# 
   939  0000                     # 9420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   940                           ECCP2AS equ 0FB8h ;# 
   941  0000                     # 9502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   942                           PSTR2CON equ 0FB9h ;# 
   943  0000                     # 9744 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   944                           CCP1CON equ 0FBAh ;# 
   945  0000                     # 9749 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   946                           ECCP1CON equ 0FBAh ;# 
   947  0000                     # 9936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   948                           CCPR1 equ 0FBBh ;# 
   949  0000                     # 9943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   950                           CCPR1L equ 0FBBh ;# 
   951  0000                     # 9963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   952                           CCPR1H equ 0FBCh ;# 
   953  0000                     # 9983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   954                           ECCP1DEL equ 0FBDh ;# 
   955  0000                     # 9988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   956                           PWM1CON equ 0FBDh ;# 
   957  0000                     # 10121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   958                           ECCP1AS equ 0FBEh ;# 
   959  0000                     # 10203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   960                           PSTR1CON equ 0FBFh ;# 
   961  0000                     # 10260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   962                           WDTCON equ 0FC0h ;# 
   963  0000                     # 10325 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   964                           ADCON1 equ 0FC1h ;# 
   965  0000                     # 10422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   966                           ADCON0 equ 0FC2h ;# 
   967  0000                     # 10566 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   968                           ADRES equ 0FC3h ;# 
   969  0000                     # 10573 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   970                           ADRESL equ 0FC3h ;# 
   971  0000                     # 10593 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   972                           ADRESH equ 0FC4h ;# 
   973  0000                     # 10613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   974                           SSP1CON2 equ 0FC5h ;# 
   975  0000                     # 10618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   976                           SSPCON2 equ 0FC5h ;# 
   977  0000                     # 10967 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   978                           SSP1CON1 equ 0FC6h ;# 
   979  0000                     # 10972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   980                           SSPCON1 equ 0FC6h ;# 
   981  0000                     # 11205 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   982                           SSP1STAT equ 0FC7h ;# 
   983  0000                     # 11210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   984                           SSPSTAT equ 0FC7h ;# 
   985  0000                     # 12179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   986                           SSP1ADD equ 0FC8h ;# 
   987  0000                     # 12184 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   988                           SSPADD equ 0FC8h ;# 
   989  0000                     # 12188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   990                           SSP1MSK equ 0FC8h ;# 
   991  0000                     # 12533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   992                           SSP1BUF equ 0FC9h ;# 
   993  0000                     # 12538 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   994                           SSPBUF equ 0FC9h ;# 
   995  0000                     # 12571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   996                           T2CON equ 0FCAh ;# 
   997  0000                     # 12642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
   998                           PR2 equ 0FCBh ;# 
   999  0000                     # 12647 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1000                           MEMCON equ 0FCBh ;# 
  1001  0000                     # 12768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1002                           TMR2 equ 0FCCh ;# 
  1003  0000                     # 12788 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1004                           T1CON equ 0FCDh ;# 
  1005  0000                     # 12926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1006                           TMR1 equ 0FCEh ;# 
  1007  0000                     # 12933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1008                           TMR1L equ 0FCEh ;# 
  1009  0000                     # 12953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1010                           TMR1H equ 0FCFh ;# 
  1011  0000                     # 12973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1012                           RCON equ 0FD0h ;# 
  1013  0000                     # 13121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1014                           CM2CON equ 0FD1h ;# 
  1015  0000                     # 13126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1016                           CM2CON1 equ 0FD1h ;# 
  1017  0000                     # 13373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1018                           CM1CON equ 0FD2h ;# 
  1019  0000                     # 13378 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1020                           CM1CON1 equ 0FD2h ;# 
  1021  0000                     # 13653 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1022                           OSCCON equ 0FD3h ;# 
  1023  0000                     # 13725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1024                           T0CON equ 0FD5h ;# 
  1025  0000                     # 13795 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1026                           TMR0 equ 0FD6h ;# 
  1027  0000                     # 13802 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1028                           TMR0L equ 0FD6h ;# 
  1029  0000                     # 13822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1030                           TMR0H equ 0FD7h ;# 
  1031  0000                     # 13842 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1032                           STATUS equ 0FD8h ;# 
  1033  0000                     # 13913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1034                           FSR2 equ 0FD9h ;# 
  1035  0000                     # 13920 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1036                           FSR2L equ 0FD9h ;# 
  1037  0000                     # 13940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1038                           FSR2H equ 0FDAh ;# 
  1039  0000                     # 13947 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1040                           PLUSW2 equ 0FDBh ;# 
  1041  0000                     # 13967 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1042                           PREINC2 equ 0FDCh ;# 
  1043  0000                     # 13987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1044                           POSTDEC2 equ 0FDDh ;# 
  1045  0000                     # 14007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1046                           POSTINC2 equ 0FDEh ;# 
  1047  0000                     # 14027 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1048                           INDF2 equ 0FDFh ;# 
  1049  0000                     # 14047 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1050                           BSR equ 0FE0h ;# 
  1051  0000                     # 14054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1052                           FSR1 equ 0FE1h ;# 
  1053  0000                     # 14061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1054                           FSR1L equ 0FE1h ;# 
  1055  0000                     # 14081 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1056                           FSR1H equ 0FE2h ;# 
  1057  0000                     # 14088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1058                           PLUSW1 equ 0FE3h ;# 
  1059  0000                     # 14108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1060                           PREINC1 equ 0FE4h ;# 
  1061  0000                     # 14128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1062                           POSTDEC1 equ 0FE5h ;# 
  1063  0000                     # 14148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1064                           POSTINC1 equ 0FE6h ;# 
  1065  0000                     # 14168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1066                           INDF1 equ 0FE7h ;# 
  1067  0000                     # 14188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1068                           WREG equ 0FE8h ;# 
  1069  0000                     # 14208 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1070                           FSR0 equ 0FE9h ;# 
  1071  0000                     # 14215 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1072                           FSR0L equ 0FE9h ;# 
  1073  0000                     # 14235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1074                           FSR0H equ 0FEAh ;# 
  1075  0000                     # 14242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1076                           PLUSW0 equ 0FEBh ;# 
  1077  0000                     # 14262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1078                           PREINC0 equ 0FECh ;# 
  1079  0000                     # 14282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1080                           POSTDEC0 equ 0FEDh ;# 
  1081  0000                     # 14302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1082                           POSTINC0 equ 0FEEh ;# 
  1083  0000                     # 14322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1084                           INDF0 equ 0FEFh ;# 
  1085  0000                     # 14342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1086                           INTCON3 equ 0FF0h ;# 
  1087  0000                     # 14454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1088                           INTCON2 equ 0FF1h ;# 
  1089  0000                     # 14547 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1090                           INTCON equ 0FF2h ;# 
  1091  0000                     # 14664 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1092                           PROD equ 0FF3h ;# 
  1093  0000                     # 14671 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1094                           PRODL equ 0FF3h ;# 
  1095  0000                     # 14691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1096                           PRODH equ 0FF4h ;# 
  1097  0000                     # 14711 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1098                           TABLAT equ 0FF5h ;# 
  1099  0000                     # 14733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1100                           TBLPTR equ 0FF6h ;# 
  1101  0000                     # 14740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1102                           TBLPTRL equ 0FF6h ;# 
  1103  0000                     # 14760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1104                           TBLPTRH equ 0FF7h ;# 
  1105  0000                     # 14780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1106                           TBLPTRU equ 0FF8h ;# 
  1107  0000                     # 14789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1108                           PCLAT equ 0FF9h ;# 
  1109  0000                     # 14796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1110                           PC equ 0FF9h ;# 
  1111  0000                     # 14803 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1112                           PCL equ 0FF9h ;# 
  1113  0000                     # 14823 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1114                           PCLATH equ 0FFAh ;# 
  1115  0000                     # 14843 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1116                           PCLATU equ 0FFBh ;# 
  1117  0000                     # 14850 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1118                           STKPTR equ 0FFCh ;# 
  1119  0000                     # 14924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1120                           TOS equ 0FFDh ;# 
  1121  0000                     # 14931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1122                           TOSL equ 0FFDh ;# 
  1123  0000                     # 14951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1124                           TOSH equ 0FFEh ;# 
  1125  0000                     # 14971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1126                           TOSU equ 0FFFh ;# 
  1127  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1128                           RPOR0 equ 0EC6h ;# 
  1129  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1130                           RPOR1 equ 0EC7h ;# 
  1131  0000                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1132                           RPOR2 equ 0EC8h ;# 
  1133  0000                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1134                           RPOR3 equ 0EC9h ;# 
  1135  0000                     # 82 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1136                           RPOR4 equ 0ECAh ;# 
  1137  0000                     # 89 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1138                           RPOR5 equ 0ECBh ;# 
  1139  0000                     # 96 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1140                           RPOR6 equ 0ECCh ;# 
  1141  0000                     # 103 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1142                           RPOR7 equ 0ECDh ;# 
  1143  0000                     # 110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1144                           RPOR8 equ 0ECEh ;# 
  1145  0000                     # 117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1146                           RPOR9 equ 0ECFh ;# 
  1147  0000                     # 124 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1148                           RPOR10 equ 0ED0h ;# 
  1149  0000                     # 131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1150                           RPOR11 equ 0ED1h ;# 
  1151  0000                     # 138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1152                           RPOR12 equ 0ED2h ;# 
  1153  0000                     # 145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1154                           RPOR13 equ 0ED3h ;# 
  1155  0000                     # 152 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1156                           RPOR17 equ 0ED7h ;# 
  1157  0000                     # 159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1158                           RPOR18 equ 0ED8h ;# 
  1159  0000                     # 166 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1160                           RPINR1 equ 0EE7h ;# 
  1161  0000                     # 173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1162                           RPINR2 equ 0EE8h ;# 
  1163  0000                     # 180 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1164                           RPINR3 equ 0EE9h ;# 
  1165  0000                     # 187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1166                           RPINR4 equ 0EEAh ;# 
  1167  0000                     # 194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1168                           RPINR6 equ 0EECh ;# 
  1169  0000                     # 201 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1170                           RPINR7 equ 0EEDh ;# 
  1171  0000                     # 208 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1172                           RPINR8 equ 0EEEh ;# 
  1173  0000                     # 215 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1174                           RPINR12 equ 0EF2h ;# 
  1175  0000                     # 222 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1176                           RPINR13 equ 0EF3h ;# 
  1177  0000                     # 229 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1178                           RPINR16 equ 0EF6h ;# 
  1179  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1180                           RPINR17 equ 0EF7h ;# 
  1181  0000                     # 243 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1182                           RPINR21 equ 0EFBh ;# 
  1183  0000                     # 250 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1184                           RPINR22 equ 0EFCh ;# 
  1185  0000                     # 257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1186                           RPINR23 equ 0EFDh ;# 
  1187  0000                     # 264 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1188                           RPINR24 equ 0EFEh ;# 
  1189  0000                     # 271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1190                           PPSCON equ 0EFFh ;# 
  1191  0000                     # 291 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1192                           UEP0 equ 0F26h ;# 
  1193  0000                     # 399 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1194                           UEP1 equ 0F27h ;# 
  1195  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1196                           UEP2 equ 0F28h ;# 
  1197  0000                     # 615 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1198                           UEP3 equ 0F29h ;# 
  1199  0000                     # 723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1200                           UEP4 equ 0F2Ah ;# 
  1201  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1202                           UEP5 equ 0F2Bh ;# 
  1203  0000                     # 939 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1204                           UEP6 equ 0F2Ch ;# 
  1205  0000                     # 1047 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1206                           UEP7 equ 0F2Dh ;# 
  1207  0000                     # 1155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1208                           UEP8 equ 0F2Eh ;# 
  1209  0000                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1210                           UEP9 equ 0F2Fh ;# 
  1211  0000                     # 1307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1212                           UEP10 equ 0F30h ;# 
  1213  0000                     # 1383 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1214                           UEP11 equ 0F31h ;# 
  1215  0000                     # 1459 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1216                           UEP12 equ 0F32h ;# 
  1217  0000                     # 1535 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1218                           UEP13 equ 0F33h ;# 
  1219  0000                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1220                           UEP14 equ 0F34h ;# 
  1221  0000                     # 1687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1222                           UEP15 equ 0F35h ;# 
  1223  0000                     # 1763 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1224                           UIE equ 0F36h ;# 
  1225  0000                     # 1819 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1226                           UEIE equ 0F37h ;# 
  1227  0000                     # 1870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1228                           UADDR equ 0F38h ;# 
  1229  0000                     # 1934 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1230                           UCFG equ 0F39h ;# 
  1231  0000                     # 2005 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1232                           PADCFG1 equ 0F3Ch ;# 
  1233  0000                     # 2037 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1234                           REFOCON equ 0F3Dh ;# 
  1235  0000                     # 2102 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1236                           RTCCAL equ 0F3Eh ;# 
  1237  0000                     # 2172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1238                           RTCCFG equ 0F3Fh ;# 
  1239  0000                     # 2229 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1240                           ODCON3 equ 0F40h ;# 
  1241  0000                     # 2255 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1242                           ODCON2 equ 0F41h ;# 
  1243  0000                     # 2281 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1244                           ODCON1 equ 0F42h ;# 
  1245  0000                     # 2307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1246                           ANCON0 equ 0F48h ;# 
  1247  0000                     # 2351 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1248                           ANCON1 equ 0F49h ;# 
  1249  0000                     # 2423 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1250                           DSWAKEL equ 0F4Ah ;# 
  1251  0000                     # 2475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1252                           DSWAKEH equ 0F4Bh ;# 
  1253  0000                     # 2495 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1254                           DSCONL equ 0F4Ch ;# 
  1255  0000                     # 2527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1256                           DSCONH equ 0F4Dh ;# 
  1257  0000                     # 2560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1258                           DSGPR0 equ 0F4Eh ;# 
  1259  0000                     # 2580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1260                           DSGPR1 equ 0F4Fh ;# 
  1261  0000                     # 2600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1262                           TCLKCON equ 0F52h ;# 
  1263  0000                     # 2633 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1264                           CVRCON equ 0F53h ;# 
  1265  0000                     # 2712 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1266                           UFRM equ 0F60h ;# 
  1267  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1268                           UFRML equ 0F60h ;# 
  1269  0000                     # 2797 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1270                           UFRMH equ 0F61h ;# 
  1271  0000                     # 2837 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1272                           UIR equ 0F62h ;# 
  1273  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1274                           UEIR equ 0F63h ;# 
  1275  0000                     # 2944 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1276                           USTAT equ 0F64h ;# 
  1277  0000                     # 3004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1278                           UCON equ 0F65h ;# 
  1279  0000                     # 3055 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1280                           DMABCH equ 0F66h ;# 
  1281  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1282                           DMABCL equ 0F67h ;# 
  1283  0000                     # 3095 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1284                           RXADDRH equ 0F68h ;# 
  1285  0000                     # 3115 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1286                           RXADDRL equ 0F69h ;# 
  1287  0000                     # 3135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1288                           TXADDRH equ 0F6Ah ;# 
  1289  0000                     # 3155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1290                           TXADDRL equ 0F6Bh ;# 
  1291  0000                     # 3175 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1292                           CMSTAT equ 0F70h ;# 
  1293  0000                     # 3180 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1294                           CMSTATUS equ 0F70h ;# 
  1295  0000                     # 3225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1296                           SSP2CON2 equ 0F71h ;# 
  1297  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1298                           SSP2CON1 equ 0F72h ;# 
  1299  0000                     # 3523 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1300                           SSP2STAT equ 0F73h ;# 
  1301  0000                     # 3825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1302                           SSP2ADD equ 0F74h ;# 
  1303  0000                     # 3830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1304                           SSP2MSK equ 0F74h ;# 
  1305  0000                     # 4063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1306                           SSP2BUF equ 0F75h ;# 
  1307  0000                     # 4083 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1308                           T4CON equ 0F76h ;# 
  1309  0000                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1310                           PR4 equ 0F77h ;# 
  1311  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1312                           TMR4 equ 0F78h ;# 
  1313  0000                     # 4194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1314                           T3CON equ 0F79h ;# 
  1315  0000                     # 4296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1316                           TMR3 equ 0F7Ah ;# 
  1317  0000                     # 4303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1318                           TMR3L equ 0F7Ah ;# 
  1319  0000                     # 4323 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1320                           TMR3H equ 0F7Bh ;# 
  1321  0000                     # 4343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1322                           BAUDCON2 equ 0F7Ch ;# 
  1323  0000                     # 4466 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1324                           SPBRGH2 equ 0F7Dh ;# 
  1325  0000                     # 4486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1326                           BAUDCON1 equ 0F7Eh ;# 
  1327  0000                     # 4491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1328                           BAUDCON equ 0F7Eh ;# 
  1329  0000                     # 4495 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1330                           BAUDCTL equ 0F7Eh ;# 
  1331  0000                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1332                           SPBRGH1 equ 0F7Fh ;# 
  1333  0000                     # 4998 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1334                           SPBRGH equ 0F7Fh ;# 
  1335  0000                     # 5031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1336                           PORTA equ 0F80h ;# 
  1337  0000                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1338                           PORTB equ 0F81h ;# 
  1339  0000                     # 5536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1340                           PORTC equ 0F82h ;# 
  1341  0000                     # 5761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1342                           HLVDCON equ 0F85h ;# 
  1343  0000                     # 5831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1344                           DMACON2 equ 0F86h ;# 
  1345  0000                     # 5907 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1346                           DMACON1 equ 0F88h ;# 
  1347  0000                     # 5969 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1348                           LATA equ 0F89h ;# 
  1349  0000                     # 6071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1350                           LATB equ 0F8Ah ;# 
  1351  0000                     # 6183 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1352                           LATC equ 0F8Bh ;# 
  1353  0000                     # 6285 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1354                           ALRMVALL equ 0F8Eh ;# 
  1355  0000                     # 6305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1356                           ALRMVALH equ 0F8Fh ;# 
  1357  0000                     # 6325 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1358                           ALRMRPT equ 0F90h ;# 
  1359  0000                     # 6395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1360                           ALRMCFG equ 0F91h ;# 
  1361  0000                     # 6471 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1362                           TRISA equ 0F92h ;# 
  1363  0000                     # 6528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1364                           TRISB equ 0F93h ;# 
  1365  0000                     # 6590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1366                           TRISC equ 0F94h ;# 
  1367  0000                     # 6647 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1368                           T3GCON equ 0F97h ;# 
  1369  0000                     # 6727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1370                           RTCVALL equ 0F98h ;# 
  1371  0000                     # 6747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1372                           RTCVALH equ 0F99h ;# 
  1373  0000                     # 6817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1374                           T1GCON equ 0F9Ah ;# 
  1375  0000                     # 6897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1376                           OSCTUNE equ 0F9Bh ;# 
  1377  0000                     # 6967 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1378                           RCSTA2 equ 0F9Ch ;# 
  1379  0000                     # 7103 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1380                           PIE1 equ 0F9Dh ;# 
  1381  0000                     # 7180 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1382                           PIR1 equ 0F9Eh ;# 
  1383  0000                     # 7257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1384                           IPR1 equ 0F9Fh ;# 
  1385  0000                     # 7334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1386                           PIE2 equ 0FA0h ;# 
  1387  0000                     # 7414 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1388                           PIR2 equ 0FA1h ;# 
  1389  0000                     # 7494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1390                           IPR2 equ 0FA2h ;# 
  1391  0000                     # 7574 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1392                           PIE3 equ 0FA3h ;# 
  1393  0000                     # 7684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1394                           PIR3 equ 0FA4h ;# 
  1395  0000                     # 7762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1396                           IPR3 equ 0FA5h ;# 
  1397  0000                     # 7840 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1398                           EECON1 equ 0FA6h ;# 
  1399  0000                     # 7885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1400                           EECON2 equ 0FA7h ;# 
  1401  0000                     # 7905 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1402                           TXSTA2 equ 0FA8h ;# 
  1403  0000                     # 8032 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1404                           TXREG2 equ 0FA9h ;# 
  1405  0000                     # 8052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1406                           RCREG2 equ 0FAAh ;# 
  1407  0000                     # 8072 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1408                           SPBRG2 equ 0FABh ;# 
  1409  0000                     # 8092 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1410                           RCSTA1 equ 0FACh ;# 
  1411  0000                     # 8097 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1412                           RCSTA equ 0FACh ;# 
  1413  0000                     # 8430 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1414                           TXSTA1 equ 0FADh ;# 
  1415  0000                     # 8435 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1416                           TXSTA equ 0FADh ;# 
  1417  0000                     # 8718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1418                           TXREG1 equ 0FAEh ;# 
  1419  0000                     # 8723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1420                           TXREG equ 0FAEh ;# 
  1421  0000                     # 8756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1422                           RCREG1 equ 0FAFh ;# 
  1423  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1424                           RCREG equ 0FAFh ;# 
  1425  0000                     # 8794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1426                           SPBRG1 equ 0FB0h ;# 
  1427  0000                     # 8799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1428                           SPBRG equ 0FB0h ;# 
  1429  0000                     # 8832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1430                           CTMUICON equ 0FB1h ;# 
  1431  0000                     # 8908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1432                           CTMUCONL equ 0FB2h ;# 
  1433  0000                     # 8986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1434                           CTMUCONH equ 0FB3h ;# 
  1435  0000                     # 9043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1436                           CCP2CON equ 0FB4h ;# 
  1437  0000                     # 9048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1438                           ECCP2CON equ 0FB4h ;# 
  1439  0000                     # 9235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1440                           CCPR2 equ 0FB5h ;# 
  1441  0000                     # 9242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1442                           CCPR2L equ 0FB5h ;# 
  1443  0000                     # 9262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1444                           CCPR2H equ 0FB6h ;# 
  1445  0000                     # 9282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1446                           ECCP2DEL equ 0FB7h ;# 
  1447  0000                     # 9287 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1448                           PWM2CON equ 0FB7h ;# 
  1449  0000                     # 9420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1450                           ECCP2AS equ 0FB8h ;# 
  1451  0000                     # 9502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1452                           PSTR2CON equ 0FB9h ;# 
  1453  0000                     # 9744 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1454                           CCP1CON equ 0FBAh ;# 
  1455  0000                     # 9749 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1456                           ECCP1CON equ 0FBAh ;# 
  1457  0000                     # 9936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1458                           CCPR1 equ 0FBBh ;# 
  1459  0000                     # 9943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1460                           CCPR1L equ 0FBBh ;# 
  1461  0000                     # 9963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1462                           CCPR1H equ 0FBCh ;# 
  1463  0000                     # 9983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1464                           ECCP1DEL equ 0FBDh ;# 
  1465  0000                     # 9988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1466                           PWM1CON equ 0FBDh ;# 
  1467  0000                     # 10121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1468                           ECCP1AS equ 0FBEh ;# 
  1469  0000                     # 10203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1470                           PSTR1CON equ 0FBFh ;# 
  1471  0000                     # 10260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1472                           WDTCON equ 0FC0h ;# 
  1473  0000                     # 10325 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1474                           ADCON1 equ 0FC1h ;# 
  1475  0000                     # 10422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1476                           ADCON0 equ 0FC2h ;# 
  1477  0000                     # 10566 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1478                           ADRES equ 0FC3h ;# 
  1479  0000                     # 10573 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1480                           ADRESL equ 0FC3h ;# 
  1481  0000                     # 10593 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1482                           ADRESH equ 0FC4h ;# 
  1483  0000                     # 10613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1484                           SSP1CON2 equ 0FC5h ;# 
  1485  0000                     # 10618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1486                           SSPCON2 equ 0FC5h ;# 
  1487  0000                     # 10967 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1488                           SSP1CON1 equ 0FC6h ;# 
  1489  0000                     # 10972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1490                           SSPCON1 equ 0FC6h ;# 
  1491  0000                     # 11205 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1492                           SSP1STAT equ 0FC7h ;# 
  1493  0000                     # 11210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1494                           SSPSTAT equ 0FC7h ;# 
  1495  0000                     # 12179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1496                           SSP1ADD equ 0FC8h ;# 
  1497  0000                     # 12184 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1498                           SSPADD equ 0FC8h ;# 
  1499  0000                     # 12188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1500                           SSP1MSK equ 0FC8h ;# 
  1501  0000                     # 12533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1502                           SSP1BUF equ 0FC9h ;# 
  1503  0000                     # 12538 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1504                           SSPBUF equ 0FC9h ;# 
  1505  0000                     # 12571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1506                           T2CON equ 0FCAh ;# 
  1507  0000                     # 12642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1508                           PR2 equ 0FCBh ;# 
  1509  0000                     # 12647 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1510                           MEMCON equ 0FCBh ;# 
  1511  0000                     # 12768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1512                           TMR2 equ 0FCCh ;# 
  1513  0000                     # 12788 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1514                           T1CON equ 0FCDh ;# 
  1515  0000                     # 12926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1516                           TMR1 equ 0FCEh ;# 
  1517  0000                     # 12933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1518                           TMR1L equ 0FCEh ;# 
  1519  0000                     # 12953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1520                           TMR1H equ 0FCFh ;# 
  1521  0000                     # 12973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1522                           RCON equ 0FD0h ;# 
  1523  0000                     # 13121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1524                           CM2CON equ 0FD1h ;# 
  1525  0000                     # 13126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1526                           CM2CON1 equ 0FD1h ;# 
  1527  0000                     # 13373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1528                           CM1CON equ 0FD2h ;# 
  1529  0000                     # 13378 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1530                           CM1CON1 equ 0FD2h ;# 
  1531  0000                     # 13653 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1532                           OSCCON equ 0FD3h ;# 
  1533  0000                     # 13725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1534                           T0CON equ 0FD5h ;# 
  1535  0000                     # 13795 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1536                           TMR0 equ 0FD6h ;# 
  1537  0000                     # 13802 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1538                           TMR0L equ 0FD6h ;# 
  1539  0000                     # 13822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1540                           TMR0H equ 0FD7h ;# 
  1541  0000                     # 13842 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1542                           STATUS equ 0FD8h ;# 
  1543  0000                     # 13913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1544                           FSR2 equ 0FD9h ;# 
  1545  0000                     # 13920 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1546                           FSR2L equ 0FD9h ;# 
  1547  0000                     # 13940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1548                           FSR2H equ 0FDAh ;# 
  1549  0000                     # 13947 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1550                           PLUSW2 equ 0FDBh ;# 
  1551  0000                     # 13967 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1552                           PREINC2 equ 0FDCh ;# 
  1553  0000                     # 13987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1554                           POSTDEC2 equ 0FDDh ;# 
  1555  0000                     # 14007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1556                           POSTINC2 equ 0FDEh ;# 
  1557  0000                     # 14027 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1558                           INDF2 equ 0FDFh ;# 
  1559  0000                     # 14047 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1560                           BSR equ 0FE0h ;# 
  1561  0000                     # 14054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1562                           FSR1 equ 0FE1h ;# 
  1563  0000                     # 14061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1564                           FSR1L equ 0FE1h ;# 
  1565  0000                     # 14081 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1566                           FSR1H equ 0FE2h ;# 
  1567  0000                     # 14088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1568                           PLUSW1 equ 0FE3h ;# 
  1569  0000                     # 14108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1570                           PREINC1 equ 0FE4h ;# 
  1571  0000                     # 14128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1572                           POSTDEC1 equ 0FE5h ;# 
  1573  0000                     # 14148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1574                           POSTINC1 equ 0FE6h ;# 
  1575  0000                     # 14168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1576                           INDF1 equ 0FE7h ;# 
  1577  0000                     # 14188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1578                           WREG equ 0FE8h ;# 
  1579  0000                     # 14208 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1580                           FSR0 equ 0FE9h ;# 
  1581  0000                     # 14215 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1582                           FSR0L equ 0FE9h ;# 
  1583  0000                     # 14235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1584                           FSR0H equ 0FEAh ;# 
  1585  0000                     # 14242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1586                           PLUSW0 equ 0FEBh ;# 
  1587  0000                     # 14262 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1588                           PREINC0 equ 0FECh ;# 
  1589  0000                     # 14282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1590                           POSTDEC0 equ 0FEDh ;# 
  1591  0000                     # 14302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1592                           POSTINC0 equ 0FEEh ;# 
  1593  0000                     # 14322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1594                           INDF0 equ 0FEFh ;# 
  1595  0000                     # 14342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1596                           INTCON3 equ 0FF0h ;# 
  1597  0000                     # 14454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1598                           INTCON2 equ 0FF1h ;# 
  1599  0000                     # 14547 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1600                           INTCON equ 0FF2h ;# 
  1601  0000                     # 14664 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1602                           PROD equ 0FF3h ;# 
  1603  0000                     # 14671 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1604                           PRODL equ 0FF3h ;# 
  1605  0000                     # 14691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1606                           PRODH equ 0FF4h ;# 
  1607  0000                     # 14711 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1608                           TABLAT equ 0FF5h ;# 
  1609  0000                     # 14733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1610                           TBLPTR equ 0FF6h ;# 
  1611  0000                     # 14740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1612                           TBLPTRL equ 0FF6h ;# 
  1613  0000                     # 14760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1614                           TBLPTRH equ 0FF7h ;# 
  1615  0000                     # 14780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1616                           TBLPTRU equ 0FF8h ;# 
  1617  0000                     # 14789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1618                           PCLAT equ 0FF9h ;# 
  1619  0000                     # 14796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1620                           PC equ 0FF9h ;# 
  1621  0000                     # 14803 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1622                           PCL equ 0FF9h ;# 
  1623  0000                     # 14823 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1624                           PCLATH equ 0FFAh ;# 
  1625  0000                     # 14843 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1626                           PCLATU equ 0FFBh ;# 
  1627  0000                     # 14850 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1628                           STKPTR equ 0FFCh ;# 
  1629  0000                     # 14924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1630                           TOS equ 0FFDh ;# 
  1631  0000                     # 14931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1632                           TOSL equ 0FFDh ;# 
  1633  0000                     # 14951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1634                           TOSH equ 0FFEh ;# 
  1635  0000                     # 14971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f24j50.h"
  1636                           TOSU equ 0FFFh ;# 
  1637  0000                     	FNCALL	_main,_AMGInit
  1638                           	FNCALL	_main,_calculateInterpolatedPixels
  1639                           	FNCALL	_main,_delay_ms
  1640                           	FNCALL	_main,_drawBuffersToDisplay
  1641                           	FNCALL	_main,_fill_rectangle
  1642                           	FNCALL	_main,_getIRData
  1643                           	FNCALL	_main,_initADC
  1644                           	FNCALL	_main,_initI2C
  1645                           	FNCALL	_main,_initSPI
  1646                           	FNCALL	_main,_lcd_init
  1647                           	FNCALL	_lcd_init,_delay_ms
  1648                           	FNCALL	_lcd_init,_lcd_init_command_list
  1649                           	FNCALL	_lcd_init_command_list,_delay_ms
  1650                           	FNCALL	_lcd_init_command_list,_lcd_write_command
  1651                           	FNCALL	_lcd_init_command_list,_lcd_write_data
  1652                           	FNCALL	_delay_ms,___lmul
  1653                           	FNCALL	_getIRData,_i2c_receive_data
  1654                           	FNCALL	_i2c_receive_data,_i2c_master_wait
  1655                           	FNCALL	_i2c_receive_data,_i2c_send_request
  1656                           	FNCALL	_i2c_send_request,_i2c_master_wait
  1657                           	FNCALL	_drawBuffersToDisplay,___wmul
  1658                           	FNCALL	_drawBuffersToDisplay,_dataToColour
  1659                           	FNCALL	_drawBuffersToDisplay,_drawOverlay
  1660                           	FNCALL	_drawBuffersToDisplay,_fill_rectangle
  1661                           	FNCALL	_drawOverlay,___awdiv
  1662                           	FNCALL	_drawOverlay,___ftdiv
  1663                           	FNCALL	_drawOverlay,___lwtoft
  1664                           	FNCALL	_drawOverlay,___wmul
  1665                           	FNCALL	_drawOverlay,_convertDataToString
  1666                           	FNCALL	_drawOverlay,_draw_h_line
  1667                           	FNCALL	_drawOverlay,_draw_string
  1668                           	FNCALL	_drawOverlay,_draw_v_line
  1669                           	FNCALL	_draw_v_line,_draw_pixel
  1670                           	FNCALL	_draw_string,___wmul
  1671                           	FNCALL	_draw_string,_draw_char
  1672                           	FNCALL	_draw_char,___wmul
  1673                           	FNCALL	_draw_char,_draw_pixel
  1674                           	FNCALL	_draw_char,_fill_rectangle
  1675                           	FNCALL	_fill_rectangle,_set_draw_window
  1676                           	FNCALL	_fill_rectangle,_spi_write
  1677                           	FNCALL	_draw_h_line,_draw_pixel
  1678                           	FNCALL	_draw_pixel,_lcd_write_data
  1679                           	FNCALL	_draw_pixel,_set_draw_window
  1680                           	FNCALL	_set_draw_window,_lcd_write_command
  1681                           	FNCALL	_set_draw_window,_lcd_write_data
  1682                           	FNCALL	_lcd_write_data,_spi_write
  1683                           	FNCALL	_lcd_write_command,_spi_write
  1684                           	FNCALL	_convertDataToString,___awdiv
  1685                           	FNCALL	___lwtoft,___ftpack
  1686                           	FNCALL	___ftdiv,___ftpack
  1687                           	FNCALL	_dataToColour,_get_colour
  1688                           	FNCALL	_calculateInterpolatedPixels,___awdiv
  1689                           	FNCALL	_AMGInit,_i2c_send_data
  1690                           	FNCALL	_i2c_send_data,_i2c_master_wait
  1691                           	FNROOT	_main
  1692                           	global	_Font
  1693                           psect	mediumconst,class=MEDIUMCONST,space=0,reloc=2,noexec
  1694                           global __pmediumconst
  1695                           __pmediumconst:
  1696  003E02                     	db	0
  1697  003E02  00                 	file	"ST7735.h"
  1698                           	line	16
  1699                           _Font:
  1700  003E03                     	db	low(0)
  1701  003E03  00                 	db	low(0)
  1702  003E04  00                 	db	low(0)
  1703  003E05  00                 	db	low(0)
  1704  003E06  00                 	db	low(0)
  1705  003E07  00                 	db	low(0)
  1706  003E08  00                 	db	low(0)
  1707  003E09  00                 	db	low(05Fh)
  1708  003E0A  5F                 	db	low(0)
  1709  003E0B  00                 	db	low(0)
  1710  003E0C  00                 	db	low(0)
  1711  003E0D  00                 	db	low(07h)
  1712  003E0E  07                 	db	low(0)
  1713  003E0F  00                 	db	low(07h)
  1714  003E10  07                 	db	low(0)
  1715  003E11  00                 	db	low(014h)
  1716  003E12  14                 	db	low(07Fh)
  1717  003E13  7F                 	db	low(014h)
  1718  003E14  14                 	db	low(07Fh)
  1719  003E15  7F                 	db	low(014h)
  1720  003E16  14                 	db	low(024h)
  1721  003E17  24                 	db	low(02Ah)
  1722  003E18  2A                 	db	low(07Fh)
  1723  003E19  7F                 	db	low(02Ah)
  1724  003E1A  2A                 	db	low(012h)
  1725  003E1B  12                 	db	low(023h)
  1726  003E1C  23                 	db	low(013h)
  1727  003E1D  13                 	db	low(08h)
  1728  003E1E  08                 	db	low(064h)
  1729  003E1F  64                 	db	low(062h)
  1730  003E20  62                 	db	low(036h)
  1731  003E21  36                 	db	low(049h)
  1732  003E22  49                 	db	low(056h)
  1733  003E23  56                 	db	low(020h)
  1734  003E24  20                 	db	low(050h)
  1735  003E25  50                 	db	low(0)
  1736  003E26  00                 	db	low(08h)
  1737  003E27  08                 	db	low(07h)
  1738  003E28  07                 	db	low(03h)
  1739  003E29  03                 	db	low(0)
  1740  003E2A  00                 	db	low(0)
  1741  003E2B  00                 	db	low(01Ch)
  1742  003E2C  1C                 	db	low(022h)
  1743  003E2D  22                 	db	low(041h)
  1744  003E2E  41                 	db	low(0)
  1745  003E2F  00                 	db	low(0)
  1746  003E30  00                 	db	low(041h)
  1747  003E31  41                 	db	low(022h)
  1748  003E32  22                 	db	low(01Ch)
  1749  003E33  1C                 	db	low(0)
  1750  003E34  00                 	db	low(02Ah)
  1751  003E35  2A                 	db	low(01Ch)
  1752  003E36  1C                 	db	low(07Fh)
  1753  003E37  7F                 	db	low(01Ch)
  1754  003E38  1C                 	db	low(02Ah)
  1755  003E39  2A                 	db	low(08h)
  1756  003E3A  08                 	db	low(08h)
  1757  003E3B  08                 	db	low(03Eh)
  1758  003E3C  3E                 	db	low(08h)
  1759  003E3D  08                 	db	low(08h)
  1760  003E3E  08                 	db	low(0)
  1761  003E3F  00                 	db	low(080h)
  1762  003E40  80                 	db	low(070h)
  1763  003E41  70                 	db	low(030h)
  1764  003E42  30                 	db	low(0)
  1765  003E43  00                 	db	low(08h)
  1766  003E44  08                 	db	low(08h)
  1767  003E45  08                 	db	low(08h)
  1768  003E46  08                 	db	low(08h)
  1769  003E47  08                 	db	low(08h)
  1770  003E48  08                 	db	low(0)
  1771  003E49  00                 	db	low(0)
  1772  003E4A  00                 	db	low(060h)
  1773  003E4B  60                 	db	low(060h)
  1774  003E4C  60                 	db	low(0)
  1775  003E4D  00                 	db	low(020h)
  1776  003E4E  20                 	db	low(010h)
  1777  003E4F  10                 	db	low(08h)
  1778  003E50  08                 	db	low(04h)
  1779  003E51  04                 	db	low(02h)
  1780  003E52  02                 	db	low(03Eh)
  1781  003E53  3E                 	db	low(051h)
  1782  003E54  51                 	db	low(049h)
  1783  003E55  49                 	db	low(045h)
  1784  003E56  45                 	db	low(03Eh)
  1785  003E57  3E                 	db	low(0)
  1786  003E58  00                 	db	low(042h)
  1787  003E59  42                 	db	low(07Fh)
  1788  003E5A  7F                 	db	low(040h)
  1789  003E5B  40                 	db	low(0)
  1790  003E5C  00                 	db	low(072h)
  1791  003E5D  72                 	db	low(049h)
  1792  003E5E  49                 	db	low(049h)
  1793  003E5F  49                 	db	low(049h)
  1794  003E60  49                 	db	low(046h)
  1795  003E61  46                 	db	low(021h)
  1796  003E62  21                 	db	low(041h)
  1797  003E63  41                 	db	low(049h)
  1798  003E64  49                 	db	low(04Dh)
  1799  003E65  4D                 	db	low(033h)
  1800  003E66  33                 	db	low(018h)
  1801  003E67  18                 	db	low(014h)
  1802  003E68  14                 	db	low(012h)
  1803  003E69  12                 	db	low(07Fh)
  1804  003E6A  7F                 	db	low(010h)
  1805  003E6B  10                 	db	low(027h)
  1806  003E6C  27                 	db	low(045h)
  1807  003E6D  45                 	db	low(045h)
  1808  003E6E  45                 	db	low(045h)
  1809  003E6F  45                 	db	low(039h)
  1810  003E70  39                 	db	low(03Ch)
  1811  003E71  3C                 	db	low(04Ah)
  1812  003E72  4A                 	db	low(049h)
  1813  003E73  49                 	db	low(049h)
  1814  003E74  49                 	db	low(031h)
  1815  003E75  31                 	db	low(041h)
  1816  003E76  41                 	db	low(021h)
  1817  003E77  21                 	db	low(011h)
  1818  003E78  11                 	db	low(09h)
  1819  003E79  09                 	db	low(07h)
  1820  003E7A  07                 	db	low(036h)
  1821  003E7B  36                 	db	low(049h)
  1822  003E7C  49                 	db	low(049h)
  1823  003E7D  49                 	db	low(049h)
  1824  003E7E  49                 	db	low(036h)
  1825  003E7F  36                 	db	low(046h)
  1826  003E80  46                 	db	low(049h)
  1827  003E81  49                 	db	low(049h)
  1828  003E82  49                 	db	low(029h)
  1829  003E83  29                 	db	low(01Eh)
  1830  003E84  1E                 	db	low(0)
  1831  003E85  00                 	db	low(0)
  1832  003E86  00                 	db	low(014h)
  1833  003E87  14                 	db	low(0)
  1834  003E88  00                 	db	low(0)
  1835  003E89  00                 	db	low(0)
  1836  003E8A  00                 	db	low(040h)
  1837  003E8B  40                 	db	low(034h)
  1838  003E8C  34                 	db	low(0)
  1839  003E8D  00                 	db	low(0)
  1840  003E8E  00                 	db	low(0)
  1841  003E8F  00                 	db	low(08h)
  1842  003E90  08                 	db	low(014h)
  1843  003E91  14                 	db	low(022h)
  1844  003E92  22                 	db	low(041h)
  1845  003E93  41                 	db	low(014h)
  1846  003E94  14                 	db	low(014h)
  1847  003E95  14                 	db	low(014h)
  1848  003E96  14                 	db	low(014h)
  1849  003E97  14                 	db	low(014h)
  1850  003E98  14                 	db	low(0)
  1851  003E99  00                 	db	low(041h)
  1852  003E9A  41                 	db	low(022h)
  1853  003E9B  22                 	db	low(014h)
  1854  003E9C  14                 	db	low(08h)
  1855  003E9D  08                 	db	low(02h)
  1856  003E9E  02                 	db	low(01h)
  1857  003E9F  01                 	db	low(059h)
  1858  003EA0  59                 	db	low(09h)
  1859  003EA1  09                 	db	low(06h)
  1860  003EA2  06                 	db	low(03Eh)
  1861  003EA3  3E                 	db	low(041h)
  1862  003EA4  41                 	db	low(05Dh)
  1863  003EA5  5D                 	db	low(059h)
  1864  003EA6  59                 	db	low(04Eh)
  1865  003EA7  4E                 	db	low(07Ch)
  1866  003EA8  7C                 	db	low(012h)
  1867  003EA9  12                 	db	low(011h)
  1868  003EAA  11                 	db	low(012h)
  1869  003EAB  12                 	db	low(07Ch)
  1870  003EAC  7C                 	db	low(07Fh)
  1871  003EAD  7F                 	db	low(049h)
  1872  003EAE  49                 	db	low(049h)
  1873  003EAF  49                 	db	low(049h)
  1874  003EB0  49                 	db	low(036h)
  1875  003EB1  36                 	db	low(03Eh)
  1876  003EB2  3E                 	db	low(041h)
  1877  003EB3  41                 	db	low(041h)
  1878  003EB4  41                 	db	low(041h)
  1879  003EB5  41                 	db	low(022h)
  1880  003EB6  22                 	db	low(07Fh)
  1881  003EB7  7F                 	db	low(041h)
  1882  003EB8  41                 	db	low(041h)
  1883  003EB9  41                 	db	low(041h)
  1884  003EBA  41                 	db	low(03Eh)
  1885  003EBB  3E                 	db	low(07Fh)
  1886  003EBC  7F                 	db	low(049h)
  1887  003EBD  49                 	db	low(049h)
  1888  003EBE  49                 	db	low(049h)
  1889  003EBF  49                 	db	low(041h)
  1890  003EC0  41                 	db	low(07Fh)
  1891  003EC1  7F                 	db	low(09h)
  1892  003EC2  09                 	db	low(09h)
  1893  003EC3  09                 	db	low(09h)
  1894  003EC4  09                 	db	low(01h)
  1895  003EC5  01                 	db	low(03Eh)
  1896  003EC6  3E                 	db	low(041h)
  1897  003EC7  41                 	db	low(041h)
  1898  003EC8  41                 	db	low(051h)
  1899  003EC9  51                 	db	low(073h)
  1900  003ECA  73                 	db	low(07Fh)
  1901  003ECB  7F                 	db	low(08h)
  1902  003ECC  08                 	db	low(08h)
  1903  003ECD  08                 	db	low(08h)
  1904  003ECE  08                 	db	low(07Fh)
  1905  003ECF  7F                 	db	low(0)
  1906  003ED0  00                 	db	low(041h)
  1907  003ED1  41                 	db	low(07Fh)
  1908  003ED2  7F                 	db	low(041h)
  1909  003ED3  41                 	db	low(0)
  1910  003ED4  00                 	db	low(020h)
  1911  003ED5  20                 	db	low(040h)
  1912  003ED6  40                 	db	low(041h)
  1913  003ED7  41                 	db	low(03Fh)
  1914  003ED8  3F                 	db	low(01h)
  1915  003ED9  01                 	db	low(07Fh)
  1916  003EDA  7F                 	db	low(08h)
  1917  003EDB  08                 	db	low(014h)
  1918  003EDC  14                 	db	low(022h)
  1919  003EDD  22                 	db	low(041h)
  1920  003EDE  41                 	db	low(07Fh)
  1921  003EDF  7F                 	db	low(040h)
  1922  003EE0  40                 	db	low(040h)
  1923  003EE1  40                 	db	low(040h)
  1924  003EE2  40                 	db	low(040h)
  1925  003EE3  40                 	db	low(07Fh)
  1926  003EE4  7F                 	db	low(02h)
  1927  003EE5  02                 	db	low(01Ch)
  1928  003EE6  1C                 	db	low(02h)
  1929  003EE7  02                 	db	low(07Fh)
  1930  003EE8  7F                 	db	low(07Fh)
  1931  003EE9  7F                 	db	low(04h)
  1932  003EEA  04                 	db	low(08h)
  1933  003EEB  08                 	db	low(010h)
  1934  003EEC  10                 	db	low(07Fh)
  1935  003EED  7F                 	db	low(03Eh)
  1936  003EEE  3E                 	db	low(041h)
  1937  003EEF  41                 	db	low(041h)
  1938  003EF0  41                 	db	low(041h)
  1939  003EF1  41                 	db	low(03Eh)
  1940  003EF2  3E                 	db	low(07Fh)
  1941  003EF3  7F                 	db	low(09h)
  1942  003EF4  09                 	db	low(09h)
  1943  003EF5  09                 	db	low(09h)
  1944  003EF6  09                 	db	low(06h)
  1945  003EF7  06                 	db	low(03Eh)
  1946  003EF8  3E                 	db	low(041h)
  1947  003EF9  41                 	db	low(051h)
  1948  003EFA  51                 	db	low(021h)
  1949  003EFB  21                 	db	low(05Eh)
  1950  003EFC  5E                 	db	low(07Fh)
  1951  003EFD  7F                 	db	low(09h)
  1952  003EFE  09                 	db	low(019h)
  1953  003EFF  19                 	db	low(029h)
  1954  003F00  29                 	db	low(046h)
  1955  003F01  46                 	global __end_of_Font
  1956                           __end_of_Font:
  1957  003F02                     	global	_Font2
  1958                           psect	mediumconst
  1959                           	file	"ST7735.h"
  1960                           	line	69
  1961                           _Font2:
  1962  003F02                     	db	low(026h)
  1963  003F02  26                 	db	low(049h)
  1964  003F03  49                 	db	low(049h)
  1965  003F04  49                 	db	low(049h)
  1966  003F05  49                 	db	low(032h)
  1967  003F06  32                 	db	low(03h)
  1968  003F07  03                 	db	low(01h)
  1969  003F08  01                 	db	low(07Fh)
  1970  003F09  7F                 	db	low(01h)
  1971  003F0A  01                 	db	low(03h)
  1972  003F0B  03                 	db	low(03Fh)
  1973  003F0C  3F                 	db	low(040h)
  1974  003F0D  40                 	db	low(040h)
  1975  003F0E  40                 	db	low(040h)
  1976  003F0F  40                 	db	low(03Fh)
  1977  003F10  3F                 	db	low(01Fh)
  1978  003F11  1F                 	db	low(020h)
  1979  003F12  20                 	db	low(040h)
  1980  003F13  40                 	db	low(020h)
  1981  003F14  20                 	db	low(01Fh)
  1982  003F15  1F                 	db	low(03Fh)
  1983  003F16  3F                 	db	low(040h)
  1984  003F17  40                 	db	low(038h)
  1985  003F18  38                 	db	low(040h)
  1986  003F19  40                 	db	low(03Fh)
  1987  003F1A  3F                 	db	low(063h)
  1988  003F1B  63                 	db	low(014h)
  1989  003F1C  14                 	db	low(08h)
  1990  003F1D  08                 	db	low(014h)
  1991  003F1E  14                 	db	low(063h)
  1992  003F1F  63                 	db	low(03h)
  1993  003F20  03                 	db	low(04h)
  1994  003F21  04                 	db	low(078h)
  1995  003F22  78                 	db	low(04h)
  1996  003F23  04                 	db	low(03h)
  1997  003F24  03                 	db	low(061h)
  1998  003F25  61                 	db	low(059h)
  1999  003F26  59                 	db	low(049h)
  2000  003F27  49                 	db	low(04Dh)
  2001  003F28  4D                 	db	low(043h)
  2002  003F29  43                 	db	low(0)
  2003  003F2A  00                 	db	low(07Fh)
  2004  003F2B  7F                 	db	low(041h)
  2005  003F2C  41                 	db	low(041h)
  2006  003F2D  41                 	db	low(041h)
  2007  003F2E  41                 	db	low(02h)
  2008  003F2F  02                 	db	low(04h)
  2009  003F30  04                 	db	low(08h)
  2010  003F31  08                 	db	low(010h)
  2011  003F32  10                 	db	low(020h)
  2012  003F33  20                 	db	low(0)
  2013  003F34  00                 	db	low(041h)
  2014  003F35  41                 	db	low(041h)
  2015  003F36  41                 	db	low(041h)
  2016  003F37  41                 	db	low(07Fh)
  2017  003F38  7F                 	db	low(04h)
  2018  003F39  04                 	db	low(02h)
  2019  003F3A  02                 	db	low(01h)
  2020  003F3B  01                 	db	low(02h)
  2021  003F3C  02                 	db	low(04h)
  2022  003F3D  04                 	db	low(040h)
  2023  003F3E  40                 	db	low(040h)
  2024  003F3F  40                 	db	low(040h)
  2025  003F40  40                 	db	low(040h)
  2026  003F41  40                 	db	low(040h)
  2027  003F42  40                 	db	low(0)
  2028  003F43  00                 	db	low(03h)
  2029  003F44  03                 	db	low(07h)
  2030  003F45  07                 	db	low(08h)
  2031  003F46  08                 	db	low(0)
  2032  003F47  00                 	db	low(020h)
  2033  003F48  20                 	db	low(054h)
  2034  003F49  54                 	db	low(054h)
  2035  003F4A  54                 	db	low(078h)
  2036  003F4B  78                 	db	low(040h)
  2037  003F4C  40                 	db	low(07Fh)
  2038  003F4D  7F                 	db	low(028h)
  2039  003F4E  28                 	db	low(044h)
  2040  003F4F  44                 	db	low(044h)
  2041  003F50  44                 	db	low(038h)
  2042  003F51  38                 	db	low(038h)
  2043  003F52  38                 	db	low(044h)
  2044  003F53  44                 	db	low(044h)
  2045  003F54  44                 	db	low(044h)
  2046  003F55  44                 	db	low(028h)
  2047  003F56  28                 	db	low(038h)
  2048  003F57  38                 	db	low(044h)
  2049  003F58  44                 	db	low(044h)
  2050  003F59  44                 	db	low(028h)
  2051  003F5A  28                 	db	low(07Fh)
  2052  003F5B  7F                 	db	low(038h)
  2053  003F5C  38                 	db	low(054h)
  2054  003F5D  54                 	db	low(054h)
  2055  003F5E  54                 	db	low(054h)
  2056  003F5F  54                 	db	low(018h)
  2057  003F60  18                 	db	low(0)
  2058  003F61  00                 	db	low(08h)
  2059  003F62  08                 	db	low(07Eh)
  2060  003F63  7E                 	db	low(09h)
  2061  003F64  09                 	db	low(02h)
  2062  003F65  02                 	db	low(018h)
  2063  003F66  18                 	db	low(0A4h)
  2064  003F67  A4                 	db	low(0A4h)
  2065  003F68  A4                 	db	low(09Ch)
  2066  003F69  9C                 	db	low(078h)
  2067  003F6A  78                 	db	low(07Fh)
  2068  003F6B  7F                 	db	low(08h)
  2069  003F6C  08                 	db	low(04h)
  2070  003F6D  04                 	db	low(04h)
  2071  003F6E  04                 	db	low(078h)
  2072  003F6F  78                 	db	low(0)
  2073  003F70  00                 	db	low(044h)
  2074  003F71  44                 	db	low(07Dh)
  2075  003F72  7D                 	db	low(040h)
  2076  003F73  40                 	db	low(0)
  2077  003F74  00                 	db	low(020h)
  2078  003F75  20                 	db	low(040h)
  2079  003F76  40                 	db	low(040h)
  2080  003F77  40                 	db	low(03Dh)
  2081  003F78  3D                 	db	low(0)
  2082  003F79  00                 	db	low(07Fh)
  2083  003F7A  7F                 	db	low(010h)
  2084  003F7B  10                 	db	low(028h)
  2085  003F7C  28                 	db	low(044h)
  2086  003F7D  44                 	db	low(0)
  2087  003F7E  00                 	db	low(0)
  2088  003F7F  00                 	db	low(041h)
  2089  003F80  41                 	db	low(07Fh)
  2090  003F81  7F                 	db	low(040h)
  2091  003F82  40                 	db	low(0)
  2092  003F83  00                 	db	low(07Ch)
  2093  003F84  7C                 	db	low(04h)
  2094  003F85  04                 	db	low(078h)
  2095  003F86  78                 	db	low(04h)
  2096  003F87  04                 	db	low(078h)
  2097  003F88  78                 	db	low(07Ch)
  2098  003F89  7C                 	db	low(08h)
  2099  003F8A  08                 	db	low(04h)
  2100  003F8B  04                 	db	low(04h)
  2101  003F8C  04                 	db	low(078h)
  2102  003F8D  78                 	db	low(038h)
  2103  003F8E  38                 	db	low(044h)
  2104  003F8F  44                 	db	low(044h)
  2105  003F90  44                 	db	low(044h)
  2106  003F91  44                 	db	low(038h)
  2107  003F92  38                 	db	low(0FCh)
  2108  003F93  FC                 	db	low(018h)
  2109  003F94  18                 	db	low(024h)
  2110  003F95  24                 	db	low(024h)
  2111  003F96  24                 	db	low(018h)
  2112  003F97  18                 	db	low(018h)
  2113  003F98  18                 	db	low(024h)
  2114  003F99  24                 	db	low(024h)
  2115  003F9A  24                 	db	low(018h)
  2116  003F9B  18                 	db	low(0FCh)
  2117  003F9C  FC                 	db	low(07Ch)
  2118  003F9D  7C                 	db	low(08h)
  2119  003F9E  08                 	db	low(04h)
  2120  003F9F  04                 	db	low(04h)
  2121  003FA0  04                 	db	low(08h)
  2122  003FA1  08                 	db	low(048h)
  2123  003FA2  48                 	db	low(054h)
  2124  003FA3  54                 	db	low(054h)
  2125  003FA4  54                 	db	low(054h)
  2126  003FA5  54                 	db	low(024h)
  2127  003FA6  24                 	db	low(04h)
  2128  003FA7  04                 	db	low(04h)
  2129  003FA8  04                 	db	low(03Fh)
  2130  003FA9  3F                 	db	low(044h)
  2131  003FAA  44                 	db	low(024h)
  2132  003FAB  24                 	db	low(03Ch)
  2133  003FAC  3C                 	db	low(040h)
  2134  003FAD  40                 	db	low(040h)
  2135  003FAE  40                 	db	low(020h)
  2136  003FAF  20                 	db	low(07Ch)
  2137  003FB0  7C                 	db	low(01Ch)
  2138  003FB1  1C                 	db	low(020h)
  2139  003FB2  20                 	db	low(040h)
  2140  003FB3  40                 	db	low(020h)
  2141  003FB4  20                 	db	low(01Ch)
  2142  003FB5  1C                 	db	low(03Ch)
  2143  003FB6  3C                 	db	low(040h)
  2144  003FB7  40                 	db	low(030h)
  2145  003FB8  30                 	db	low(040h)
  2146  003FB9  40                 	db	low(03Ch)
  2147  003FBA  3C                 	db	low(044h)
  2148  003FBB  44                 	db	low(028h)
  2149  003FBC  28                 	db	low(010h)
  2150  003FBD  10                 	db	low(028h)
  2151  003FBE  28                 	db	low(044h)
  2152  003FBF  44                 	db	low(04Ch)
  2153  003FC0  4C                 	db	low(090h)
  2154  003FC1  90                 	db	low(090h)
  2155  003FC2  90                 	db	low(090h)
  2156  003FC3  90                 	db	low(07Ch)
  2157  003FC4  7C                 	db	low(044h)
  2158  003FC5  44                 	db	low(064h)
  2159  003FC6  64                 	db	low(054h)
  2160  003FC7  54                 	db	low(04Ch)
  2161  003FC8  4C                 	db	low(044h)
  2162  003FC9  44                 	db	low(0)
  2163  003FCA  00                 	db	low(08h)
  2164  003FCB  08                 	db	low(036h)
  2165  003FCC  36                 	db	low(041h)
  2166  003FCD  41                 	db	low(0)
  2167  003FCE  00                 	db	low(0)
  2168  003FCF  00                 	db	low(0)
  2169  003FD0  00                 	db	low(077h)
  2170  003FD1  77                 	db	low(0)
  2171  003FD2  00                 	db	low(0)
  2172  003FD3  00                 	db	low(0)
  2173  003FD4  00                 	db	low(041h)
  2174  003FD5  41                 	db	low(036h)
  2175  003FD6  36                 	db	low(08h)
  2176  003FD7  08                 	db	low(0)
  2177  003FD8  00                 	db	low(02h)
  2178  003FD9  02                 	db	low(01h)
  2179  003FDA  01                 	db	low(02h)
  2180  003FDB  02                 	db	low(04h)
  2181  003FDC  04                 	db	low(02h)
  2182  003FDD  02                 	global __end_of_Font2
  2183                           __end_of_Font2:
  2184  003FDE                     psect	mediumconst
  2185                           	file	"main.c"
  2186                           	line	40
  2187                           	global	_colour_list
  2188                           _colour_list:
  2189  003FDE                     	dw	(0FFAAh)&0ffffh
  2190  003FDE  FFAA               	dw	(0F0F0h)&0ffffh
  2191  003FE0  F0F0               	dw	(0F0Fh)&0ffffh
  2192  003FE2  0F0F               	dw	(0F900h)&0ffffh
  2193  003FE4  F900               	dw	(09Fh)&0ffffh
  2194  003FE6  009F               	dw	(0990h)&0ffffh
  2195  003FE8  0990               	dw	(0F00Fh)&0ffffh
  2196  003FEA  F00F               	global __end_of_colour_list
  2197                           __end_of_colour_list:
  2198  003FEC                     	global	_cursor_colour
  2199                           psect	mediumconst
  2200                           	file	"main.c"
  2201                           	line	49
  2202                           _cursor_colour:
  2203  003FEC                     	dw	(0FFFFh)&0ffffh
  2204  003FEC  FFFF               	global __end_of_cursor_colour
  2205                           __end_of_cursor_colour:
  2206  003FEE                     	global	_box_size
  2207                           psect	mediumconst
  2208                           	file	"main.c"
  2209                           	line	43
  2210                           _box_size:
  2211  003FEE                     	dw	(06h)&0ffffh
  2212  003FEE  0006               	global __end_of_box_size
  2213                           __end_of_box_size:
  2214  003FF0                     psect	mediumconst
  2215                           	file	"main.c"
  2216                           	line	41
  2217                           	global	_num_colours
  2218                           _num_colours:
  2219  003FF0                     	dw	(07h)&0ffffh
  2220  003FF0  0007               	global __end_of_num_colours
  2221                           __end_of_num_colours:
  2222  003FF2                     	global	_BG_COLOUR
  2223                           psect	mediumconst
  2224                           	file	"main.c"
  2225                           	line	39
  2226                           _BG_COLOUR:
  2227  003FF2                     	dw	(0)&0ffffh
  2228  003FF2  0000               	global __end_of_BG_COLOUR
  2229                           __end_of_BG_COLOUR:
  2230  003FF4                     	global	_start_pixel_reg
  2231                           psect	mediumconst
  2232                           	file	"main.c"
  2233                           	line	47
  2234                           _start_pixel_reg:
  2235  003FF4                     	db	low(080h)
  2236  003FF4  80                 	global __end_of_start_pixel_reg
  2237                           __end_of_start_pixel_reg:
  2238  003FF5                     	global	_addr
  2239                           psect	mediumconst
  2240                           	file	"main.c"
  2241                           	line	45
  2242                           _addr:
  2243  003FF5                     	db	low(0D3h)
  2244  003FF5  D3                 	global __end_of_addr
  2245                           __end_of_addr:
  2246  003FF6                     	global	_Font
  2247                           	global	_Font2
  2248                           	global	_cursor_colour
  2249                           	global	_box_size
  2250                           	global	_BG_COLOUR
  2251                           	global	_start_pixel_reg
  2252                           	global	_addr
  2253                           	global	_min_pixel
  2254                           	global	_max_pixel
  2255                           	global	_y_interpolated_pixels
  2256                           	global	_ir_buffer
  2257                           	global	_xy_interpolated_pixels
  2258                           	global	_x_interpolated_pixels
  2259                           	global	_RPOR1
  2260                           _RPOR1	set	0xEC7
  2261  0000                     	global	_RPOR0
  2262                           _RPOR0	set	0xEC6
  2263  0000                     	global	_IOLOCK
  2264                           _IOLOCK	set	0x77F8
  2265  0000                     	global	_SSP1STAT
  2266                           _SSP1STAT	set	0xFC7
  2267  0000                     	global	_SSP1BUF
  2268                           _SSP1BUF	set	0xFC9
  2269  0000                     	global	_SSP2STAT
  2270                           _SSP2STAT	set	0xF73
  2271  0000                     	global	_SSP2BUF
  2272                           _SSP2BUF	set	0xF75
  2273  0000                     	global	_OSCCON
  2274                           _OSCCON	set	0xFD3
  2275  0000                     	global	_OSCTUNE
  2276                           _OSCTUNE	set	0xF9B
  2277  0000                     	global	_ADRESL
  2278                           _ADRESL	set	0xFC3
  2279  0000                     	global	_ADRESH
  2280                           _ADRESH	set	0xFC4
  2281  0000                     	global	_ADCON1
  2282                           _ADCON1	set	0xFC1
  2283  0000                     	global	_ADCON0
  2284                           _ADCON0	set	0xFC2
  2285  0000                     	global	_SSP1ADD
  2286                           _SSP1ADD	set	0xFC8
  2287  0000                     	global	_SSP1CON2
  2288                           _SSP1CON2	set	0xFC5
  2289  0000                     	global	_SSP1CON1
  2290                           _SSP1CON1	set	0xFC6
  2291  0000                     	global	_EECON2
  2292                           _EECON2	set	0xFA7
  2293  0000                     	global	_SSP2CON1
  2294                           _SSP2CON1	set	0xF72
  2295  0000                     	global	_RCEN
  2296                           _RCEN	set	0x7E2B
  2297  0000                     	global	_RC1
  2298                           _RC1	set	0x7C11
  2299  0000                     	global	_RC0
  2300                           _RC0	set	0x7C10
  2301  0000                     	global	_RC2
  2302                           _RC2	set	0x7C12
  2303  0000                     	global	_RC6
  2304                           _RC6	set	0x7C16
  2305  0000                     	global	_RC4
  2306                           _RC4	set	0x7C14
  2307  0000                     	global	_TRISB4
  2308                           _TRISB4	set	0x7C9C
  2309  0000                     	global	_TRISB5
  2310                           _TRISB5	set	0x7C9D
  2311  0000                     	global	_TRISA1
  2312                           _TRISA1	set	0x7C91
  2313  0000                     	global	_TRISA0
  2314                           _TRISA0	set	0x7C90
  2315  0000                     	global	_TRISC0
  2316                           _TRISC0	set	0x7CA0
  2317  0000                     	global	_TRISC1
  2318                           _TRISC1	set	0x7CA1
  2319  0000                     	global	_TRISC2
  2320                           _TRISC2	set	0x7CA2
  2321  0000                     ; #config settings
  2322                           global __CFG_WDTEN$OFF
  2323                           __CFG_WDTEN$OFF equ 0x0
  2324  0000                     global __CFG_PLLDIV$4
  2325                           __CFG_PLLDIV$4 equ 0x0
  2326  0000                     global __CFG_STVREN$ON
  2327                           __CFG_STVREN$ON equ 0x0
  2328  0000                     global __CFG_XINST$OFF
  2329                           __CFG_XINST$OFF equ 0x0
  2330  0000                     global __CFG_CPUDIV$OSC1
  2331                           __CFG_CPUDIV$OSC1 equ 0x0
  2332  0000                     global __CFG_OSC$INTOSCPLL
  2333                           __CFG_OSC$INTOSCPLL equ 0x0
  2334  0000                     	file	"C:\Users\tommy\AppData\Local\Temp\s8d0."
  2335                           	line	#
  2336                           psect	cinit,class=CODE,delta=1,reloc=2
  2337                           global __pcinit
  2338                           __pcinit:
  2339  002148                     global start_initialization
  2340                           start_initialization:
  2341  002148                     
  2342                           global __initialization
  2343                           __initialization:
  2344  002148                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
  2345                           global __pbssBANK0
  2346                           __pbssBANK0:
  2347  00007A                     	global	_min_pixel
  2348                           _min_pixel:
  2349  00007A                            ds      6
  2350  00007A                     	global	_max_pixel
  2351                           _max_pixel:
  2352  000080                            ds      6
  2353  000080                     psect	bssBANK1,class=BANK1,space=1,noexec,lowdata
  2354                           global __pbssBANK1
  2355                           __pbssBANK1:
  2356  000100                     	global	_y_interpolated_pixels
  2357                           _y_interpolated_pixels:
  2358  000100                            ds      128
  2359  000100                     	global	_ir_buffer
  2360                           _ir_buffer:
  2361  000180                            ds      128
  2362  000180                     psect	bssBANK2,class=BANK2,space=1,noexec,lowdata
  2363                           global __pbssBANK2
  2364                           __pbssBANK2:
  2365  000200                     	global	_xy_interpolated_pixels
  2366                           _xy_interpolated_pixels:
  2367  000200                            ds      128
  2368  000200                     	global	_x_interpolated_pixels
  2369                           _x_interpolated_pixels:
  2370  000280                            ds      128
  2371  000280                     	file	"C:\Users\tommy\AppData\Local\Temp\s8d0."
  2372                           	line	#
  2373                           psect	cinit
  2374                           ; Clear objects allocated to BANK2 (256 bytes)
  2375                           	global __pbssBANK2
  2376                           lfsr	0,__pbssBANK2
  2377  002148  EE02  F000         lfsr	1,256
  2378  00214C  EE11 F000          clear_0:
  2379  002150                     clrf	postinc0,c
  2380  002150  6AEE               movf	postdec1,w
  2381  002152  50E5               movf	fsr1l,w
  2382  002154  50E1               bnz	clear_0
  2383  002156  E1FC               movf	fsr1h,w
  2384  002158  50E2               bnz	clear_0
  2385  00215A  E1FA               ; Clear objects allocated to BANK1 (256 bytes)
  2386                           	global __pbssBANK1
  2387                           lfsr	0,__pbssBANK1
  2388  00215C  EE01  F000         lfsr	1,256
  2389  002160  EE11 F000          clear_1:
  2390  002164                     clrf	postinc0,c
  2391  002164  6AEE               movf	postdec1,w
  2392  002166  50E5               movf	fsr1l,w
  2393  002168  50E1               bnz	clear_1
  2394  00216A  E1FC               movf	fsr1h,w
  2395  00216C  50E2               bnz	clear_1
  2396  00216E  E1FA               ; Clear objects allocated to BANK0 (12 bytes)
  2397                           	global __pbssBANK0
  2398                           lfsr	0,__pbssBANK0
  2399  002170  EE00  F07A         movlw	12
  2400  002174  0E0C               clear_2:
  2401  002176                     clrf	postinc0,c
  2402  002176  6AEE               decf	wreg
  2403  002178  06E8               bnz	clear_2
  2404  00217A  E1FD               psect cinit,class=CODE,delta=1
  2405                           global end_of_initialization,__end_of__initialization
  2406                           
  2407                           ;End of C runtime variable initialization code
  2408                           
  2409                           end_of_initialization:
  2410  00217C                     __end_of__initialization:
  2411  00217C                     	GLOBAL	__Lmediumconst
  2412                           	movlw	low highword(__Lmediumconst)
  2413  00217C  0E00               	movwf	tblptru
  2414  00217E  6EF8               movlb 0
  2415  002180  0100               goto _main	;jump to C main() function
  2416  002182  EF31  F014         psect	cstackBANK0,class=BANK0,space=1,noexec
  2417                           global __pcstackBANK0
  2418                           __pcstackBANK0:
  2419  000060                     ?_drawBuffersToDisplay:	; 1 bytes @ 0x0
  2420  000060                     	global	drawBuffersToDisplay@main_buffer
  2421                           drawBuffersToDisplay@main_buffer:	; 2 bytes @ 0x0
  2422  000060                     	ds   2
  2423  000060                     	global	drawBuffersToDisplay@horizontal_buffer
  2424                           drawBuffersToDisplay@horizontal_buffer:	; 2 bytes @ 0x2
  2425  000062                     	ds   2
  2426  000062                     	global	drawBuffersToDisplay@vertical_buffer
  2427                           drawBuffersToDisplay@vertical_buffer:	; 2 bytes @ 0x4
  2428  000064                     	ds   2
  2429  000064                     	global	drawBuffersToDisplay@diagonal_buffer
  2430                           drawBuffersToDisplay@diagonal_buffer:	; 2 bytes @ 0x6
  2431  000066                     	ds   2
  2432  000066                     	global	drawBuffersToDisplay@h_pixel
  2433                           drawBuffersToDisplay@h_pixel:	; 2 bytes @ 0x8
  2434  000068                     	ds   2
  2435  000068                     	global	drawBuffersToDisplay@v_pixel
  2436                           drawBuffersToDisplay@v_pixel:	; 2 bytes @ 0xA
  2437  00006A                     	ds   2
  2438  00006A                     	global	drawBuffersToDisplay@d_pixel
  2439                           drawBuffersToDisplay@d_pixel:	; 2 bytes @ 0xC
  2440  00006C                     	ds   2
  2441  00006C                     	global	drawBuffersToDisplay@temperature_range
  2442                           drawBuffersToDisplay@temperature_range:	; 2 bytes @ 0xE
  2443  00006E                     	ds   2
  2444  00006E                     	global	drawBuffersToDisplay@data
  2445                           drawBuffersToDisplay@data:	; 2 bytes @ 0x10
  2446  000070                     	ds   2
  2447  000070                     	global	drawBuffersToDisplay@h
  2448                           drawBuffersToDisplay@h:	; 2 bytes @ 0x12
  2449  000072                     	ds   2
  2450  000072                     	global	drawBuffersToDisplay@v
  2451                           drawBuffersToDisplay@v:	; 2 bytes @ 0x14
  2452  000074                     	ds   2
  2453  000074                     	global	drawBuffersToDisplay@x
  2454                           drawBuffersToDisplay@x:	; 2 bytes @ 0x16
  2455  000076                     	ds   2
  2456  000076                     	global	drawBuffersToDisplay@y
  2457                           drawBuffersToDisplay@y:	; 2 bytes @ 0x18
  2458  000078                     	ds   2
  2459  000078                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  2460                           global __pcstackCOMRAM
  2461                           __pcstackCOMRAM:
  2462  000001                     ?_lcd_init:	; 1 bytes @ 0x0
  2463  000001                     ?_AMGInit:	; 1 bytes @ 0x0
  2464  000001                     ?_lcd_init_command_list:	; 1 bytes @ 0x0
  2465  000001                     ?_i2c_master_wait:	; 1 bytes @ 0x0
  2466  000001                     ??_i2c_master_wait:	; 1 bytes @ 0x0
  2467  000001                     ?_initSPI:	; 1 bytes @ 0x0
  2468  000001                     ??_initSPI:	; 1 bytes @ 0x0
  2469  000001                     ?_initI2C:	; 1 bytes @ 0x0
  2470  000001                     ??_initI2C:	; 1 bytes @ 0x0
  2471  000001                     ?_initADC:	; 1 bytes @ 0x0
  2472  000001                     ??_initADC:	; 1 bytes @ 0x0
  2473  000001                     ?_main:	; 1 bytes @ 0x0
  2474  000001                     ?_spi_write:	; 1 bytes @ 0x0
  2475  000001                     ??_spi_write:	; 1 bytes @ 0x0
  2476  000001                     ?_lcd_write_data:	; 1 bytes @ 0x0
  2477  000001                     ?_lcd_write_command:	; 1 bytes @ 0x0
  2478  000001                     	global	?_get_colour
  2479                           ?_get_colour:	; 2 bytes @ 0x0
  2480  000001                     	global	?___wmul
  2481                           ?___wmul:	; 2 bytes @ 0x0
  2482  000001                     	global	?___awdiv
  2483                           ?___awdiv:	; 2 bytes @ 0x0
  2484  000001                     	global	?___ftpack
  2485                           ?___ftpack:	; 3 bytes @ 0x0
  2486  000001                     	global	?___lmul
  2487                           ?___lmul:	; 4 bytes @ 0x0
  2488  000001                     	global	get_colour@green
  2489                           get_colour@green:	; 1 bytes @ 0x0
  2490  000001                     	global	___wmul@multiplier
  2491                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2492  000001                     	global	___awdiv@dividend
  2493                           ___awdiv@dividend:	; 2 bytes @ 0x0
  2494  000001                     	global	___ftpack@arg
  2495                           ___ftpack@arg:	; 3 bytes @ 0x0
  2496  000001                     	global	___lmul@multiplier
  2497                           ___lmul@multiplier:	; 4 bytes @ 0x0
  2498  000001                     	ds   1
  2499  000001                     ?_i2c_send_data:	; 1 bytes @ 0x1
  2500  000002                     ?_i2c_send_request:	; 1 bytes @ 0x1
  2501  000002                     	global	get_colour@blue
  2502                           get_colour@blue:	; 1 bytes @ 0x1
  2503  000002                     	global	i2c_send_data@reg
  2504                           i2c_send_data@reg:	; 1 bytes @ 0x1
  2505  000002                     	global	i2c_send_request@reg
  2506                           i2c_send_request@reg:	; 1 bytes @ 0x1
  2507  000002                     	ds   1
  2508  000002                     ??_get_colour:	; 1 bytes @ 0x2
  2509  000003                     ??_i2c_send_request:	; 1 bytes @ 0x2
  2510  000003                     	global	spi_write@data
  2511                           spi_write@data:	; 1 bytes @ 0x2
  2512  000003                     	global	i2c_send_data@data
  2513                           i2c_send_data@data:	; 1 bytes @ 0x2
  2514  000003                     	global	i2c_send_request@address
  2515                           i2c_send_request@address:	; 1 bytes @ 0x2
  2516  000003                     	global	___wmul@multiplicand
  2517                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2518  000003                     	global	___awdiv@divisor
  2519                           ___awdiv@divisor:	; 2 bytes @ 0x2
  2520  000003                     	ds   1
  2521  000003                     ?_i2c_receive_data:	; 1 bytes @ 0x3
  2522  000004                     ??_i2c_send_data:	; 1 bytes @ 0x3
  2523  000004                     	global	i2c_send_data@address
  2524                           i2c_send_data@address:	; 1 bytes @ 0x3
  2525  000004                     	global	i2c_receive_data@reg
  2526                           i2c_receive_data@reg:	; 1 bytes @ 0x3
  2527  000004                     	global	___ftpack@exp
  2528                           ___ftpack@exp:	; 1 bytes @ 0x3
  2529  000004                     	global	spi_write@i
  2530                           spi_write@i:	; 2 bytes @ 0x3
  2531  000004                     	ds   1
  2532  000004                     ??_i2c_receive_data:	; 1 bytes @ 0x4
  2533  000005                     ??_AMGInit:	; 1 bytes @ 0x4
  2534  000005                     ??___wmul:	; 1 bytes @ 0x4
  2535  000005                     ??___awdiv:	; 1 bytes @ 0x4
  2536  000005                     	global	___awdiv@counter
  2537                           ___awdiv@counter:	; 1 bytes @ 0x4
  2538  000005                     	global	___ftpack@sign
  2539                           ___ftpack@sign:	; 1 bytes @ 0x4
  2540  000005                     	global	___wmul@product
  2541                           ___wmul@product:	; 2 bytes @ 0x4
  2542  000005                     	global	___lmul@multiplicand
  2543                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  2544  000005                     	ds   1
  2545  000005                     ??___ftpack:	; 1 bytes @ 0x5
  2546  000006                     ??_lcd_write_data:	; 1 bytes @ 0x5
  2547  000006                     ??_lcd_write_command:	; 1 bytes @ 0x5
  2548  000006                     	global	lcd_write_data@data
  2549                           lcd_write_data@data:	; 1 bytes @ 0x5
  2550  000006                     	global	lcd_write_command@data
  2551                           lcd_write_command@data:	; 1 bytes @ 0x5
  2552  000006                     	global	___awdiv@sign
  2553                           ___awdiv@sign:	; 1 bytes @ 0x5
  2554  000006                     	ds   1
  2555  000006                     ?_set_draw_window:	; 1 bytes @ 0x6
  2556  000007                     	global	set_draw_window@y1
  2557                           set_draw_window@y1:	; 1 bytes @ 0x6
  2558  000007                     	global	i2c_receive_data@data
  2559                           i2c_receive_data@data:	; 1 bytes @ 0x6
  2560  000007                     	global	___awdiv@quotient
  2561                           ___awdiv@quotient:	; 2 bytes @ 0x6
  2562  000007                     	ds   1
  2563  000007                     	global	set_draw_window@x2
  2564                           set_draw_window@x2:	; 1 bytes @ 0x7
  2565  000008                     	global	i2c_receive_data@address
  2566                           i2c_receive_data@address:	; 1 bytes @ 0x7
  2567  000008                     	ds   1
  2568  000008                     ?_convertDataToString:	; 1 bytes @ 0x8
  2569  000009                     ?_getIRData:	; 1 bytes @ 0x8
  2570  000009                     ?_calculateInterpolatedPixels:	; 1 bytes @ 0x8
  2571  000009                     ??___lmul:	; 1 bytes @ 0x8
  2572  000009                     	global	?___lwtoft
  2573                           ?___lwtoft:	; 3 bytes @ 0x8
  2574  000009                     	global	set_draw_window@y2
  2575                           set_draw_window@y2:	; 1 bytes @ 0x8
  2576  000009                     	global	convertDataToString@buff
  2577                           convertDataToString@buff:	; 2 bytes @ 0x8
  2578  000009                     	global	getIRData@buffer
  2579                           getIRData@buffer:	; 2 bytes @ 0x8
  2580  000009                     	global	calculateInterpolatedPixels@main_buffer
  2581                           calculateInterpolatedPixels@main_buffer:	; 2 bytes @ 0x8
  2582  000009                     	global	get_colour@colour
  2583                           get_colour@colour:	; 2 bytes @ 0x8
  2584  000009                     	global	___lwtoft@c
  2585                           ___lwtoft@c:	; 2 bytes @ 0x8
  2586  000009                     	global	___lmul@product
  2587                           ___lmul@product:	; 4 bytes @ 0x8
  2588  000009                     	ds   1
  2589  000009                     ??_set_draw_window:	; 1 bytes @ 0x9
  2590  00000A                     	global	set_draw_window@x1
  2591                           set_draw_window@x1:	; 1 bytes @ 0x9
  2592  00000A                     	ds   1
  2593  00000A                     ??_getIRData:	; 1 bytes @ 0xA
  2594  00000B                     ?_draw_pixel:	; 1 bytes @ 0xA
  2595  00000B                     	global	draw_pixel@y
  2596                           draw_pixel@y:	; 1 bytes @ 0xA
  2597  00000B                     	global	get_colour@red
  2598                           get_colour@red:	; 1 bytes @ 0xA
  2599  00000B                     	global	convertDataToString@data
  2600                           convertDataToString@data:	; 2 bytes @ 0xA
  2601  00000B                     	global	calculateInterpolatedPixels@y_interpolated_buffer
  2602                           calculateInterpolatedPixels@y_interpolated_buffer:	; 2 bytes @ 0xA
  2603  00000B                     	ds   1
  2604  00000B                     ??___lwtoft:	; 1 bytes @ 0xB
  2605  00000C                     	global	?_dataToColour
  2606                           ?_dataToColour:	; 2 bytes @ 0xB
  2607  00000C                     	global	?___ftdiv
  2608                           ?___ftdiv:	; 3 bytes @ 0xB
  2609  00000C                     	global	dataToColour@data
  2610                           dataToColour@data:	; 2 bytes @ 0xB
  2611  00000C                     	global	draw_pixel@colour
  2612                           draw_pixel@colour:	; 2 bytes @ 0xB
  2613  00000C                     	global	___ftdiv@f1
  2614                           ___ftdiv@f1:	; 3 bytes @ 0xB
  2615  00000C                     	ds   1
  2616  00000C                     ?_delay_ms:	; 1 bytes @ 0xC
  2617  00000D                     ??_convertDataToString:	; 1 bytes @ 0xC
  2618  00000D                     	global	calculateInterpolatedPixels@x_interpolated_buffer
  2619                           calculateInterpolatedPixels@x_interpolated_buffer:	; 2 bytes @ 0xC
  2620  00000D                     	global	delay_ms@millis
  2621                           delay_ms@millis:	; 4 bytes @ 0xC
  2622  00000D                     	ds   1
  2623  00000D                     ??_draw_pixel:	; 1 bytes @ 0xD
  2624  00000E                     	global	draw_pixel@x
  2625                           draw_pixel@x:	; 1 bytes @ 0xD
  2626  00000E                     	global	dataToColour@temperature_range
  2627                           dataToColour@temperature_range:	; 2 bytes @ 0xD
  2628  00000E                     	ds   1
  2629  00000E                     ?_draw_h_line:	; 1 bytes @ 0xE
  2630  00000F                     ?_draw_v_line:	; 1 bytes @ 0xE
  2631  00000F                     	global	draw_h_line@y1
  2632                           draw_h_line@y1:	; 1 bytes @ 0xE
  2633  00000F                     	global	draw_v_line@y1
  2634                           draw_v_line@y1:	; 1 bytes @ 0xE
  2635  00000F                     	global	convertDataToString@units
  2636                           convertDataToString@units:	; 2 bytes @ 0xE
  2637  00000F                     	global	getIRData@data
  2638                           getIRData@data:	; 2 bytes @ 0xE
  2639  00000F                     	global	calculateInterpolatedPixels@xy_interpolated_buffer
  2640                           calculateInterpolatedPixels@xy_interpolated_buffer:	; 2 bytes @ 0xE
  2641  00000F                     	global	___ftdiv@f2
  2642                           ___ftdiv@f2:	; 3 bytes @ 0xE
  2643  00000F                     	ds   1
  2644  00000F                     ??_dataToColour:	; 1 bytes @ 0xF
  2645  000010                     	global	draw_h_line@x2
  2646                           draw_h_line@x2:	; 1 bytes @ 0xF
  2647  000010                     	global	draw_v_line@x2
  2648                           draw_v_line@x2:	; 1 bytes @ 0xF
  2649  000010                     	ds   1
  2650  000010                     ??_delay_ms:	; 1 bytes @ 0x10
  2651  000011                     ??_calculateInterpolatedPixels:	; 1 bytes @ 0x10
  2652  000011                     	global	getIRData@dataL
  2653                           getIRData@dataL:	; 1 bytes @ 0x10
  2654  000011                     	global	draw_h_line@y2
  2655                           draw_h_line@y2:	; 1 bytes @ 0x10
  2656  000011                     	global	draw_v_line@y2
  2657                           draw_v_line@y2:	; 1 bytes @ 0x10
  2658  000011                     	global	convertDataToString@tens
  2659                           convertDataToString@tens:	; 2 bytes @ 0x10
  2660  000011                     	global	delay_ms@cycles
  2661                           delay_ms@cycles:	; 4 bytes @ 0x10
  2662  000011                     	ds   1
  2663  000011                     ??___ftdiv:	; 1 bytes @ 0x11
  2664  000012                     	global	dataToColour@blue
  2665                           dataToColour@blue:	; 1 bytes @ 0x11
  2666  000012                     	global	getIRData@dataH
  2667                           getIRData@dataH:	; 1 bytes @ 0x11
  2668  000012                     	global	draw_h_line@colour
  2669                           draw_h_line@colour:	; 2 bytes @ 0x11
  2670  000012                     	global	draw_v_line@colour
  2671                           draw_v_line@colour:	; 2 bytes @ 0x11
  2672  000012                     	ds   1
  2673  000012                     	global	dataToColour@red
  2674                           dataToColour@red:	; 1 bytes @ 0x12
  2675  000013                     	global	getIRData@this_pixel
  2676                           getIRData@this_pixel:	; 2 bytes @ 0x12
  2677  000013                     	ds   1
  2678  000013                     ??_draw_h_line:	; 1 bytes @ 0x13
  2679  000014                     ??_draw_v_line:	; 1 bytes @ 0x13
  2680  000014                     	global	dataToColour@green
  2681                           dataToColour@green:	; 1 bytes @ 0x13
  2682  000014                     	ds   1
  2683  000014                     ??_lcd_init:	; 1 bytes @ 0x14
  2684  000015                     ??_lcd_init_command_list:	; 1 bytes @ 0x14
  2685  000015                     	global	___ftdiv@cntr
  2686                           ___ftdiv@cntr:	; 1 bytes @ 0x14
  2687  000015                     	global	dataToColour@colour_temp
  2688                           dataToColour@colour_temp:	; 2 bytes @ 0x14
  2689  000015                     	global	getIRData@x
  2690                           getIRData@x:	; 2 bytes @ 0x14
  2691  000015                     	ds   1
  2692  000015                     	global	___ftdiv@f3
  2693                           ___ftdiv@f3:	; 3 bytes @ 0x15
  2694  000016                     	ds   1
  2695  000016                     ?_fill_rectangle:	; 1 bytes @ 0x16
  2696  000017                     	global	draw_h_line@x1
  2697                           draw_h_line@x1:	; 1 bytes @ 0x16
  2698  000017                     	global	draw_v_line@x1
  2699                           draw_v_line@x1:	; 1 bytes @ 0x16
  2700  000017                     	global	getIRData@y
  2701                           getIRData@y:	; 2 bytes @ 0x16
  2702  000017                     	global	fill_rectangle@x1
  2703                           fill_rectangle@x1:	; 2 bytes @ 0x16
  2704  000017                     	ds   1
  2705  000017                     	global	draw_h_line@x
  2706                           draw_h_line@x:	; 2 bytes @ 0x17
  2707  000018                     	global	draw_v_line@y
  2708                           draw_v_line@y:	; 2 bytes @ 0x17
  2709  000018                     	ds   1
  2710  000018                     	global	___ftdiv@exp
  2711                           ___ftdiv@exp:	; 1 bytes @ 0x18
  2712  000019                     	global	fill_rectangle@y1
  2713                           fill_rectangle@y1:	; 2 bytes @ 0x18
  2714  000019                     	ds   1
  2715  000019                     	global	___ftdiv@sign
  2716                           ___ftdiv@sign:	; 1 bytes @ 0x19
  2717  00001A                     	ds   1
  2718  00001A                     	global	fill_rectangle@x2
  2719                           fill_rectangle@x2:	; 2 bytes @ 0x1A
  2720  00001B                     	ds   2
  2721  00001B                     	global	calculateInterpolatedPixels@x
  2722                           calculateInterpolatedPixels@x:	; 2 bytes @ 0x1C
  2723  00001D                     	global	fill_rectangle@y2
  2724                           fill_rectangle@y2:	; 2 bytes @ 0x1C
  2725  00001D                     	ds   2
  2726  00001D                     	global	calculateInterpolatedPixels@y
  2727                           calculateInterpolatedPixels@y:	; 2 bytes @ 0x1E
  2728  00001F                     	global	fill_rectangle@colour
  2729                           fill_rectangle@colour:	; 2 bytes @ 0x1E
  2730  00001F                     	ds   2
  2731  00001F                     ??_fill_rectangle:	; 1 bytes @ 0x20
  2732  000021                     	ds   2
  2733  000021                     	global	fill_rectangle@colour_high
  2734                           fill_rectangle@colour_high:	; 1 bytes @ 0x22
  2735  000023                     	ds   1
  2736  000023                     	global	fill_rectangle@colour_low
  2737                           fill_rectangle@colour_low:	; 1 bytes @ 0x23
  2738  000024                     	ds   1
  2739  000024                     	global	fill_rectangle@y
  2740                           fill_rectangle@y:	; 2 bytes @ 0x24
  2741  000025                     	ds   2
  2742  000025                     	global	fill_rectangle@x
  2743                           fill_rectangle@x:	; 2 bytes @ 0x26
  2744  000027                     	ds   2
  2745  000027                     ?_draw_char:	; 1 bytes @ 0x28
  2746  000029                     	global	draw_char@y
  2747                           draw_char@y:	; 1 bytes @ 0x28
  2748  000029                     	ds   1
  2749  000029                     	global	draw_char@c
  2750                           draw_char@c:	; 1 bytes @ 0x29
  2751  00002A                     	ds   1
  2752  00002A                     	global	draw_char@colour
  2753                           draw_char@colour:	; 2 bytes @ 0x2A
  2754  00002B                     	ds   2
  2755  00002B                     	global	draw_char@size
  2756                           draw_char@size:	; 1 bytes @ 0x2C
  2757  00002D                     	ds   1
  2758  00002D                     ??_draw_char:	; 1 bytes @ 0x2D
  2759  00002E                     	ds   4
  2760  00002E                     	global	draw_char@line
  2761                           draw_char@line:	; 1 bytes @ 0x31
  2762  000032                     	ds   1
  2763  000032                     	global	draw_char@x
  2764                           draw_char@x:	; 1 bytes @ 0x32
  2765  000033                     	ds   1
  2766  000033                     	global	draw_char@j
  2767                           draw_char@j:	; 1 bytes @ 0x33
  2768  000034                     	ds   1
  2769  000034                     	global	draw_char@i
  2770                           draw_char@i:	; 1 bytes @ 0x34
  2771  000035                     	ds   1
  2772  000035                     ?_draw_string:	; 1 bytes @ 0x35
  2773  000036                     	global	draw_string@y
  2774                           draw_string@y:	; 1 bytes @ 0x35
  2775  000036                     	ds   1
  2776  000036                     	global	draw_string@colour
  2777                           draw_string@colour:	; 2 bytes @ 0x36
  2778  000037                     	ds   2
  2779  000037                     	global	draw_string@size
  2780                           draw_string@size:	; 1 bytes @ 0x38
  2781  000039                     	ds   1
  2782  000039                     	global	draw_string@str
  2783                           draw_string@str:	; 2 bytes @ 0x39
  2784  00003A                     	ds   2
  2785  00003A                     ??_draw_string:	; 1 bytes @ 0x3B
  2786  00003C                     	global	draw_string@char_width
  2787                           draw_string@char_width:	; 2 bytes @ 0x3B
  2788  00003C                     	ds   2
  2789  00003C                     	global	draw_string@char_pos
  2790                           draw_string@char_pos:	; 2 bytes @ 0x3D
  2791  00003E                     	ds   2
  2792  00003E                     	global	draw_string@x
  2793                           draw_string@x:	; 1 bytes @ 0x3F
  2794  000040                     	ds   1
  2795  000040                     	global	draw_string@counter
  2796                           draw_string@counter:	; 2 bytes @ 0x40
  2797  000041                     	ds   2
  2798  000041                     ?_drawOverlay:	; 1 bytes @ 0x42
  2799  000043                     	global	drawOverlay@x
  2800                           drawOverlay@x:	; 2 bytes @ 0x42
  2801  000043                     	ds   2
  2802  000043                     	global	drawOverlay@y
  2803                           drawOverlay@y:	; 2 bytes @ 0x44
  2804  000045                     	ds   2
  2805  000045                     	global	drawOverlay@data
  2806                           drawOverlay@data:	; 2 bytes @ 0x46
  2807  000047                     	ds   2
  2808  000047                     ??_drawOverlay:	; 1 bytes @ 0x48
  2809  000049                     	ds   3
  2810  000049                     	global	drawOverlay@batt_voltage
  2811                           drawOverlay@batt_voltage:	; 3 bytes @ 0x4B
  2812  00004C                     	ds   3
  2813  00004C                     	global	drawOverlay@temperature_buffer
  2814                           drawOverlay@temperature_buffer:	; 6 bytes @ 0x4E
  2815  00004F                     	ds   6
  2816  00004F                     	global	drawOverlay@ADC_reading
  2817                           drawOverlay@ADC_reading:	; 2 bytes @ 0x54
  2818  000055                     	ds   2
  2819  000055                     	global	drawOverlay@h_pos
  2820                           drawOverlay@h_pos:	; 2 bytes @ 0x56
  2821  000057                     	ds   2
  2822  000057                     	global	drawOverlay@v_pos
  2823                           drawOverlay@v_pos:	; 2 bytes @ 0x58
  2824  000059                     	ds   2
  2825  000059                     ??_drawBuffersToDisplay:	; 1 bytes @ 0x5A
  2826  00005B                     	ds   4
  2827  00005B                     ??_main:	; 1 bytes @ 0x5E
  2828  00005F                     ;!
  2829                           ;!Data Sizes:
  2830                           ;!    Strings     0
  2831                           ;!    Constant    499
  2832                           ;!    Data        0
  2833                           ;!    BSS         524
  2834                           ;!    Persistent  0
  2835                           ;!    Stack       0
  2836                           ;!
  2837                           ;!Auto Spaces:
  2838                           ;!    Space          Size  Autos    Used
  2839                           ;!    COMRAM           95     94      94
  2840                           ;!    BANK0           160     26      38
  2841                           ;!    BANK1           256      0     256
  2842                           ;!    BANK2           256      0     256
  2843                           ;!    BANK3           256      0       0
  2844                           ;!    BANK4           256      0       0
  2845                           ;!    BANK5           256      0       0
  2846                           ;!    BANK6           256      0       0
  2847                           ;!    BANK7           256      0       0
  2848                           ;!    BANK8           256      0       0
  2849                           ;!    BANK9           256      0       0
  2850                           ;!    BANK10          256      0       0
  2851                           ;!    BANK11          256      0       0
  2852                           ;!    BANK12          256      0       0
  2853                           ;!    BANK13          256      0       0
  2854                           ;!    BANK14          192      0       0
  2855                           
  2856                           ;!
  2857                           ;!Pointer List with Targets:
  2858                           ;!
  2859                           ;!    draw_string@str	PTR unsigned char  size(2) Largest target is 6
  2860                           ;!		 -> drawOverlay@temperature_buffer(COMRAM[6]), 
  2861                           ;!
  2862                           ;!    calculateInterpolatedPixels@xy_interpolated_buffer	PTR int  size(2) Largest target
                                  is 128
  2863                           ;!		 -> xy_interpolated_pixels(BANK2[128]), 
  2864                           ;!
  2865                           ;!    calculateInterpolatedPixels@x_interpolated_buffer	PTR int  size(2) Largest target 
                                 is 128
  2866                           ;!		 -> x_interpolated_pixels(BANK2[128]), 
  2867                           ;!
  2868                           ;!    calculateInterpolatedPixels@main_buffer	PTR int  size(2) Largest target is 128
  2869                           ;!		 -> ir_buffer(BANK1[128]), 
  2870                           ;!
  2871                           ;!    calculateInterpolatedPixels@y_interpolated_buffer	PTR int  size(2) Largest target 
                                 is 128
  2872                           ;!		 -> y_interpolated_pixels(BANK1[128]), 
  2873                           ;!
  2874                           ;!    drawBuffersToDisplay@diagonal_buffer	PTR int  size(2) Largest target is 128
  2875                           ;!		 -> xy_interpolated_pixels(BANK2[128]), 
  2876                           ;!
  2877                           ;!    drawBuffersToDisplay@vertical_buffer	PTR int  size(2) Largest target is 128
  2878                           ;!		 -> x_interpolated_pixels(BANK2[128]), 
  2879                           ;!
  2880                           ;!    drawBuffersToDisplay@horizontal_buffer	PTR int  size(2) Largest target is 128
  2881                           ;!		 -> y_interpolated_pixels(BANK1[128]), 
  2882                           ;!
  2883                           ;!    drawBuffersToDisplay@main_buffer	PTR int  size(2) Largest target is 128
  2884                           ;!		 -> ir_buffer(BANK1[128]), 
  2885                           ;!
  2886                           ;!    getIRData@buffer	PTR int  size(2) Largest target is 128
  2887                           ;!		 -> ir_buffer(BANK1[128]), 
  2888                           ;!
  2889                           ;!    convertDataToString@buff	PTR unsigned char  size(2) Largest target is 6
  2890                           ;!		 -> drawOverlay@temperature_buffer(COMRAM[6]), 
  2891                           ;!
  2892                           
  2893                           
  2894                           ;!
  2895                           ;!Critical Paths under _main in COMRAM
  2896                           ;!
  2897                           ;!    _main->_drawBuffersToDisplay
  2898                           ;!    _lcd_init->_delay_ms
  2899                           ;!    _lcd_init_command_list->_delay_ms
  2900                           ;!    _delay_ms->___lmul
  2901                           ;!    _getIRData->_i2c_receive_data
  2902                           ;!    _i2c_receive_data->_i2c_send_request
  2903                           ;!    _i2c_send_request->_i2c_master_wait
  2904                           ;!    _drawBuffersToDisplay->_drawOverlay
  2905                           ;!    _drawOverlay->_draw_string
  2906                           ;!    _draw_v_line->_draw_pixel
  2907                           ;!    _draw_string->_draw_char
  2908                           ;!    _draw_char->_fill_rectangle
  2909                           ;!    _fill_rectangle->_dataToColour
  2910                           ;!    _draw_h_line->_draw_pixel
  2911                           ;!    _draw_pixel->_set_draw_window
  2912                           ;!    _set_draw_window->_lcd_write_command
  2913                           ;!    _set_draw_window->_lcd_write_data
  2914                           ;!    _lcd_write_data->_spi_write
  2915                           ;!    _lcd_write_command->_spi_write
  2916                           ;!    _convertDataToString->___awdiv
  2917                           ;!    ___lwtoft->___ftpack
  2918                           ;!    ___ftdiv->___lwtoft
  2919                           ;!    _dataToColour->_get_colour
  2920                           ;!    _calculateInterpolatedPixels->___awdiv
  2921                           ;!    _AMGInit->_i2c_send_data
  2922                           ;!    _i2c_send_data->_i2c_master_wait
  2923                           ;!
  2924                           ;!Critical Paths under _main in BANK0
  2925                           ;!
  2926                           ;!    _main->_drawBuffersToDisplay
  2927                           ;!
  2928                           ;!Critical Paths under _main in BANK1
  2929                           ;!
  2930                           ;!    None.
  2931                           ;!
  2932                           ;!Critical Paths under _main in BANK2
  2933                           ;!
  2934                           ;!    None.
  2935                           ;!
  2936                           ;!Critical Paths under _main in BANK3
  2937                           ;!
  2938                           ;!    None.
  2939                           ;!
  2940                           ;!Critical Paths under _main in BANK4
  2941                           ;!
  2942                           ;!    None.
  2943                           ;!
  2944                           ;!Critical Paths under _main in BANK5
  2945                           ;!
  2946                           ;!    None.
  2947                           ;!
  2948                           ;!Critical Paths under _main in BANK6
  2949                           ;!
  2950                           ;!    None.
  2951                           ;!
  2952                           ;!Critical Paths under _main in BANK7
  2953                           ;!
  2954                           ;!    None.
  2955                           ;!
  2956                           ;!Critical Paths under _main in BANK8
  2957                           ;!
  2958                           ;!    None.
  2959                           ;!
  2960                           ;!Critical Paths under _main in BANK9
  2961                           ;!
  2962                           ;!    None.
  2963                           ;!
  2964                           ;!Critical Paths under _main in BANK10
  2965                           ;!
  2966                           ;!    None.
  2967                           ;!
  2968                           ;!Critical Paths under _main in BANK11
  2969                           ;!
  2970                           ;!    None.
  2971                           ;!
  2972                           ;!Critical Paths under _main in BANK12
  2973                           ;!
  2974                           ;!    None.
  2975                           ;!
  2976                           ;!Critical Paths under _main in BANK13
  2977                           ;!
  2978                           ;!    None.
  2979                           ;!
  2980                           ;!Critical Paths under _main in BANK14
  2981                           ;!
  2982                           ;!    None.
  2983                           
  2984 ;;
  2985 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2986 ;;
  2987                           
  2988                           ;!
  2989                           ;!Call Graph Tables:
  2990                           ;!
  2991                           ;! ---------------------------------------------------------------------------------
  2992                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2993                           ;! ---------------------------------------------------------------------------------
  2994                           ;! (0) _main                                                 0     0      0   55316
  2995                           ;!                            _AMGInit
  2996                           ;!        _calculateInterpolatedPixels
  2997                           ;!                           _delay_ms
  2998                           ;!               _drawBuffersToDisplay
  2999                           ;!                     _fill_rectangle
  3000                           ;!                          _getIRData
  3001                           ;!                            _initADC
  3002                           ;!                            _initI2C
  3003                           ;!                            _initSPI
  3004                           ;!                           _lcd_init
  3005                           ;! ---------------------------------------------------------------------------------
  3006                           ;! (1) _lcd_init                                             0     0      0    2314
  3007                           ;!                           _delay_ms
  3008                           ;!              _lcd_init_command_list
  3009                           ;! ---------------------------------------------------------------------------------
  3010                           ;! (2) _lcd_init_command_list                                0     0      0    1291
  3011                           ;!                           _delay_ms
  3012                           ;!                  _lcd_write_command
  3013                           ;!                     _lcd_write_data
  3014                           ;! ---------------------------------------------------------------------------------
  3015                           ;! (3) _delay_ms                                             8     4      4    1023
  3016                           ;!                                             12 COMRAM     8     4      4
  3017                           ;!                             ___lmul
  3018                           ;! ---------------------------------------------------------------------------------
  3019                           ;! (4) ___lmul                                              12     4      8     370
  3020                           ;!                                              0 COMRAM    12     4      8
  3021                           ;! ---------------------------------------------------------------------------------
  3022                           ;! (1) _initSPI                                              0     0      0       0
  3023                           ;! ---------------------------------------------------------------------------------
  3024                           ;! (1) _initI2C                                              0     0      0       0
  3025                           ;! ---------------------------------------------------------------------------------
  3026                           ;! (1) _initADC                                              0     0      0       0
  3027                           ;! ---------------------------------------------------------------------------------
  3028                           ;! (1) _getIRData                                           16    14      2     753
  3029                           ;!                                              8 COMRAM    16    14      2
  3030                           ;!                   _i2c_receive_data
  3031                           ;! ---------------------------------------------------------------------------------
  3032                           ;! (2) _i2c_receive_data                                     5     4      1     361
  3033                           ;!                                              3 COMRAM     5     4      1
  3034                           ;!                    _i2c_master_wait
  3035                           ;!                   _i2c_send_request
  3036                           ;! ---------------------------------------------------------------------------------
  3037                           ;! (3) _i2c_send_request                                     2     1      1     120
  3038                           ;!                                              1 COMRAM     2     1      1
  3039                           ;!                    _i2c_master_wait
  3040                           ;! ---------------------------------------------------------------------------------
  3041                           ;! (1) _drawBuffersToDisplay                                30    22      8   43560
  3042                           ;!                                             90 COMRAM     4     4      0
  3043                           ;!                                              0 BANK0     26    18      8
  3044                           ;!                             ___wmul
  3045                           ;!                       _dataToColour
  3046                           ;!                        _drawOverlay
  3047                           ;!                     _fill_rectangle
  3048                           ;! ---------------------------------------------------------------------------------
  3049                           ;! (2) _drawOverlay                                         24    18      6   33663
  3050                           ;!                                             66 COMRAM    24    18      6
  3051                           ;!                            ___awdiv
  3052                           ;!                            ___ftdiv
  3053                           ;!                           ___lwtoft
  3054                           ;!                             ___wmul
  3055                           ;!                _convertDataToString
  3056                           ;!                        _draw_h_line
  3057                           ;!                        _draw_string
  3058                           ;!                        _draw_v_line
  3059                           ;! ---------------------------------------------------------------------------------
  3060                           ;! (3) _draw_v_line                                         11     6      5    2276
  3061                           ;!                                             14 COMRAM    11     6      5
  3062                           ;!                            ___awdiv (ARG)
  3063                           ;!                         _draw_pixel
  3064                           ;! ---------------------------------------------------------------------------------
  3065                           ;! (3) _draw_string                                         13     7      6   13875
  3066                           ;!                                             53 COMRAM    13     7      6
  3067                           ;!                             ___wmul
  3068                           ;!                          _draw_char
  3069                           ;! ---------------------------------------------------------------------------------
  3070                           ;! (4) _draw_char                                           13     8      5    9952
  3071                           ;!                                             40 COMRAM    13     8      5
  3072                           ;!                             ___wmul
  3073                           ;!                         _draw_pixel
  3074                           ;!                     _fill_rectangle
  3075                           ;! ---------------------------------------------------------------------------------
  3076                           ;! (1) _fill_rectangle                                      18     8     10    3942
  3077                           ;!                                             22 COMRAM    18     8     10
  3078                           ;!                             ___wmul (ARG)
  3079                           ;!                       _dataToColour (ARG)
  3080                           ;!                    _set_draw_window
  3081                           ;!                          _spi_write
  3082                           ;! ---------------------------------------------------------------------------------
  3083                           ;! (5) ___wmul                                               6     2      4    3351
  3084                           ;!                                              0 COMRAM     6     2      4
  3085                           ;! ---------------------------------------------------------------------------------
  3086                           ;! (3) _draw_h_line                                         11     6      5    2276
  3087                           ;!                                             14 COMRAM    11     6      5
  3088                           ;!                            ___awdiv (ARG)
  3089                           ;!                         _draw_pixel
  3090                           ;! ---------------------------------------------------------------------------------
  3091                           ;! (4) _draw_pixel                                           4     1      3    1534
  3092                           ;!                                             10 COMRAM     4     1      3
  3093                           ;!                     _lcd_write_data
  3094                           ;!                    _set_draw_window
  3095                           ;! ---------------------------------------------------------------------------------
  3096                           ;! (2) _set_draw_window                                      4     1      3     812
  3097                           ;!                                              6 COMRAM     4     1      3
  3098                           ;!                  _lcd_write_command
  3099                           ;!                     _lcd_write_data
  3100                           ;! ---------------------------------------------------------------------------------
  3101                           ;! (3) _lcd_write_data                                       1     1      0     134
  3102                           ;!                                              5 COMRAM     1     1      0
  3103                           ;!                          _spi_write
  3104                           ;! ---------------------------------------------------------------------------------
  3105                           ;! (3) _lcd_write_command                                    1     1      0     134
  3106                           ;!                                              5 COMRAM     1     1      0
  3107                           ;!                          _spi_write
  3108                           ;! ---------------------------------------------------------------------------------
  3109                           ;! (4) _spi_write                                            5     5      0     112
  3110                           ;!                                              0 COMRAM     5     5      0
  3111                           ;! ---------------------------------------------------------------------------------
  3112                           ;! (3) _convertDataToString                                 10     6      4    2788
  3113                           ;!                                              8 COMRAM    10     6      4
  3114                           ;!                            ___awdiv
  3115                           ;! ---------------------------------------------------------------------------------
  3116                           ;! (3) ___lwtoft                                             3     0      3    2864
  3117                           ;!                                              8 COMRAM     3     0      3
  3118                           ;!                           ___ftpack
  3119                           ;! ---------------------------------------------------------------------------------
  3120                           ;! (3) ___ftdiv                                             15     9      6    3324
  3121                           ;!                                             11 COMRAM    15     9      6
  3122                           ;!                           ___ftpack
  3123                           ;!                           ___lwtoft (ARG)
  3124                           ;! ---------------------------------------------------------------------------------
  3125                           ;! (4) ___ftpack                                             8     3      5    2766
  3126                           ;!                                              0 COMRAM     8     3      5
  3127                           ;! ---------------------------------------------------------------------------------
  3128                           ;! (2) _dataToColour                                        11     7      4    1189
  3129                           ;!                                             11 COMRAM    11     7      4
  3130                           ;!                         _get_colour
  3131                           ;! ---------------------------------------------------------------------------------
  3132                           ;! (3) _get_colour                                          11     9      2     241
  3133                           ;!                                              0 COMRAM    11     9      2
  3134                           ;! ---------------------------------------------------------------------------------
  3135                           ;! (1) _calculateInterpolatedPixels                         24    16      8    3202
  3136                           ;!                                              8 COMRAM    24    16      8
  3137                           ;!                            ___awdiv
  3138                           ;! ---------------------------------------------------------------------------------
  3139                           ;! (4) ___awdiv                                              8     4      4    2124
  3140                           ;!                                              0 COMRAM     8     4      4
  3141                           ;! ---------------------------------------------------------------------------------
  3142                           ;! (1) _AMGInit                                              0     0      0     522
  3143                           ;!                      _i2c_send_data
  3144                           ;! ---------------------------------------------------------------------------------
  3145                           ;! (2) _i2c_send_data                                        3     1      2     522
  3146                           ;!                                              1 COMRAM     3     1      2
  3147                           ;!                    _i2c_master_wait
  3148                           ;! ---------------------------------------------------------------------------------
  3149                           ;! (4) _i2c_master_wait                                      1     1      0       0
  3150                           ;!                                              0 COMRAM     1     1      0
  3151                           ;! ---------------------------------------------------------------------------------
  3152                           ;! Estimated maximum stack depth 5
  3153                           ;! ---------------------------------------------------------------------------------
  3154                           ;!
  3155                           ;! Call Graph Graphs:
  3156                           ;!
  3157                           ;! _main (ROOT)
  3158                           ;!   _AMGInit
  3159                           ;!     _i2c_send_data
  3160                           ;!       _i2c_master_wait
  3161                           ;!   _calculateInterpolatedPixels
  3162                           ;!     ___awdiv
  3163                           ;!   _delay_ms
  3164                           ;!     ___lmul
  3165                           ;!   _drawBuffersToDisplay
  3166                           ;!     ___wmul
  3167                           ;!     _dataToColour
  3168                           ;!       _get_colour
  3169                           ;!     _drawOverlay
  3170                           ;!       ___awdiv
  3171                           ;!       ___ftdiv
  3172                           ;!         ___ftpack
  3173                           ;!         ___lwtoft (ARG)
  3174                           ;!           ___ftpack
  3175                           ;!       ___lwtoft
  3176                           ;!         ___ftpack
  3177                           ;!       ___wmul
  3178                           ;!       _convertDataToString
  3179                           ;!         ___awdiv
  3180                           ;!       _draw_h_line
  3181                           ;!         ___awdiv (ARG)
  3182                           ;!         _draw_pixel (ARG)
  3183                           ;!           _lcd_write_data
  3184                           ;!             _spi_write
  3185                           ;!           _set_draw_window
  3186                           ;!             _lcd_write_command
  3187                           ;!               _spi_write
  3188                           ;!             _lcd_write_data
  3189                           ;!               _spi_write
  3190                           ;!       _draw_string
  3191                           ;!         ___wmul
  3192                           ;!         _draw_char
  3193                           ;!           ___wmul
  3194                           ;!           _draw_pixel
  3195                           ;!             _lcd_write_data
  3196                           ;!               _spi_write
  3197                           ;!             _set_draw_window
  3198                           ;!               _lcd_write_command
  3199                           ;!                 _spi_write
  3200                           ;!               _lcd_write_data
  3201                           ;!                 _spi_write
  3202                           ;!           _fill_rectangle
  3203                           ;!             ___wmul (ARG)
  3204                           ;!             _dataToColour (ARG)
  3205                           ;!               _get_colour
  3206                           ;!             _set_draw_window (ARG)
  3207                           ;!               _lcd_write_command
  3208                           ;!                 _spi_write
  3209                           ;!               _lcd_write_data
  3210                           ;!                 _spi_write
  3211                           ;!             _spi_write (ARG)
  3212                           ;!       _draw_v_line
  3213                           ;!         ___awdiv (ARG)
  3214                           ;!         _draw_pixel (ARG)
  3215                           ;!           _lcd_write_data
  3216                           ;!             _spi_write
  3217                           ;!           _set_draw_window
  3218                           ;!             _lcd_write_command
  3219                           ;!               _spi_write
  3220                           ;!             _lcd_write_data
  3221                           ;!               _spi_write
  3222                           ;!     _fill_rectangle
  3223                           ;!       ___wmul (ARG)
  3224                           ;!       _dataToColour (ARG)
  3225                           ;!         _get_colour
  3226                           ;!       _set_draw_window (ARG)
  3227                           ;!         _lcd_write_command
  3228                           ;!           _spi_write
  3229                           ;!         _lcd_write_data
  3230                           ;!           _spi_write
  3231                           ;!       _spi_write (ARG)
  3232                           ;!   _fill_rectangle
  3233                           ;!     ___wmul (ARG)
  3234                           ;!     _dataToColour (ARG)
  3235                           ;!       _get_colour
  3236                           ;!     _set_draw_window (ARG)
  3237                           ;!       _lcd_write_command
  3238                           ;!         _spi_write
  3239                           ;!       _lcd_write_data
  3240                           ;!         _spi_write
  3241                           ;!     _spi_write (ARG)
  3242                           ;!   _getIRData
  3243                           ;!     _i2c_receive_data
  3244                           ;!       _i2c_master_wait
  3245                           ;!       _i2c_send_request
  3246                           ;!         _i2c_master_wait
  3247                           ;!   _initADC
  3248                           ;!   _initI2C
  3249                           ;!   _initSPI
  3250                           ;!   _lcd_init
  3251                           ;!     _delay_ms
  3252                           ;!       ___lmul
  3253                           ;!     _lcd_init_command_list
  3254                           ;!       _delay_ms
  3255                           ;!         ___lmul
  3256                           ;!       _lcd_write_command
  3257                           ;!         _spi_write
  3258                           ;!       _lcd_write_data
  3259                           ;!         _spi_write
  3260                           ;!
  3261                           
  3262                           ;! Address spaces:
  3263                           
  3264                           ;!Name               Size   Autos  Total    Cost      Usage
  3265                           ;!BIGRAM             EBF      0       0      35        0.0%
  3266                           ;!BITBANK13          100      0       0      31        0.0%
  3267                           ;!BANK13             100      0       0      32        0.0%
  3268                           ;!BITBANK12          100      0       0      29        0.0%
  3269                           ;!BANK12             100      0       0      30        0.0%
  3270                           ;!BITBANK11          100      0       0      27        0.0%
  3271                           ;!BANK11             100      0       0      28        0.0%
  3272                           ;!BITBANK10          100      0       0      25        0.0%
  3273                           ;!BANK10             100      0       0      26        0.0%
  3274                           ;!BITBANK9           100      0       0      23        0.0%
  3275                           ;!BANK9              100      0       0      24        0.0%
  3276                           ;!BITBANK8           100      0       0      21        0.0%
  3277                           ;!BANK8              100      0       0      22        0.0%
  3278                           ;!BITBANK7           100      0       0      19        0.0%
  3279                           ;!BANK7              100      0       0      20        0.0%
  3280                           ;!BITBANK6           100      0       0      17        0.0%
  3281                           ;!BANK6              100      0       0      18        0.0%
  3282                           ;!BITBANK5           100      0       0      15        0.0%
  3283                           ;!BANK5              100      0       0      16        0.0%
  3284                           ;!BITBANK4           100      0       0      13        0.0%
  3285                           ;!BANK4              100      0       0      14        0.0%
  3286                           ;!BITBANK3           100      0       0      11        0.0%
  3287                           ;!BANK3              100      0       0      12        0.0%
  3288                           ;!BITBANK2           100      0       0       9        0.0%
  3289                           ;!BANK2              100      0     100      10      100.0%
  3290                           ;!BITBANK1           100      0       0       7        0.0%
  3291                           ;!BANK1              100      0     100       8      100.0%
  3292                           ;!BITBANK14           C0      0       0      33        0.0%
  3293                           ;!BANK14              C0      0       0      34        0.0%
  3294                           ;!BITBANK0            A0      0       0       4        0.0%
  3295                           ;!BANK0               A0     1A      26       5       23.8%
  3296                           ;!BITCOMRAM           5F      0       0       0        0.0%
  3297                           ;!COMRAM              5F     5E      5E       1       98.9%
  3298                           ;!BITSFR_2             0      0       0     200        0.0%
  3299                           ;!SFR_2                0      0       0     200        0.0%
  3300                           ;!BITSFR_1             0      0       0     200        0.0%
  3301                           ;!SFR_1                0      0       0     200        0.0%
  3302                           ;!BITSFR               0      0       0     200        0.0%
  3303                           ;!SFR                  0      0       0     200        0.0%
  3304                           ;!STACK                0      0       0       2        0.0%
  3305                           ;!NULL                 0      0       0       0        0.0%
  3306                           ;!ABS                  0      0     284       6        0.0%
  3307                           ;!DATA                 0      0     284       3        0.0%
  3308                           ;!CODE                 0      0       0       0        0.0%
  3309                           
  3310                           	global	_main
  3311                           
  3312 ;; *************** function _main *****************
  3313 ;; Defined at:
  3314 ;;		line 369 in file "main.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;		None
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3332 ;;Total ram usage:        0 bytes
  3333 ;; Hardware stack levels required when called:    8
  3334 ;; This function calls:
  3335 ;;		_AMGInit
  3336 ;;		_calculateInterpolatedPixels
  3337 ;;		_delay_ms
  3338 ;;		_drawBuffersToDisplay
  3339 ;;		_fill_rectangle
  3340 ;;		_getIRData
  3341 ;;		_initADC
  3342 ;;		_initI2C
  3343 ;;		_initSPI
  3344 ;;		_lcd_init
  3345 ;; This function is called by:
  3346 ;;		Startup code after reset
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           psect	text0,class=CODE,space=0,reloc=2,group=0
  3350                           	file	"main.c"
  3351                           	line	369
  3352                           global __ptext0
  3353                           __ptext0:
  3354  002862                     psect	text0
  3355                           	file	"main.c"
  3356                           	line	369
  3357                           	global	__size_of_main
  3358                           	__size_of_main	equ	__end_of_main-_main
  3359  0000                     	
  3360                           _main:
  3361  002862                     ;incstack = 0
  3362                           	opt	stack 23
  3363                           	line	372
  3364                           	
  3365                           l2217:
  3366  002862                     ;main.c: 372: OSCTUNE = 0b01000000;
  3367                           	movlw	low(040h)
  3368  002862  0E40               	movwf	((c:3995)),c	;volatile
  3369  002864  6E9B               	line	373
  3370                           ;main.c: 373: OSCCON = 0b01110000;
  3371                           	movlw	low(070h)
  3372  002866  0E70               	movwf	((c:4051)),c	;volatile
  3373  002868  6ED3               	line	376
  3374                           	
  3375                           l2219:
  3376  00286A                     ;main.c: 376: TRISC2 = 0;
  3377                           	bcf	c:(31906/8),(31906)&7	;volatile
  3378  00286A  9494               	line	377
  3379                           	
  3380                           l2221:
  3381  00286C                     ;main.c: 377: RC4 = 1;
  3382                           	bsf	c:(31764/8),(31764)&7	;volatile
  3383  00286C  8882               	line	380
  3384                           	
  3385                           l2223:
  3386  00286E                     ;main.c: 380: initSPI();
  3387                           	call	_initSPI	;wreg free
  3388  00286E  EC0B  F010         	line	381
  3389                           	
  3390                           l2225:
  3391  002872                     ;main.c: 381: initI2C();
  3392                           	call	_initI2C	;wreg free
  3393  002872  ECE2  F00F         	line	383
  3394                           	
  3395                           l2227:
  3396  002876                     ;main.c: 383: initADC();
  3397                           	call	_initADC	;wreg free
  3398  002876  ECD1  F00F         	line	386
  3399                           	
  3400                           l2229:
  3401  00287A                     ;main.c: 386: delay_ms(500);
  3402                           	movlw	low(01F4h)
  3403  00287A  0EF4               	movwf	((c:delay_ms@millis)),c
  3404  00287C  6E0D               	movlw	high(01F4h)
  3405  00287E  0E01               	movwf	((c:delay_ms@millis+1)),c
  3406  002880  6E0E               	movlw	low highword(01F4h)
  3407  002882  0E00               	movwf	((c:delay_ms@millis+2)),c
  3408  002884  6E0F               	movlw	high highword(01F4h)
  3409  002886  0E00               	movwf	((c:delay_ms@millis+3)),c
  3410  002888  6E10               	call	_delay_ms	;wreg free
  3411  00288A  EC63  F011         	line	390
  3412                           	
  3413                           l2231:
  3414  00288E                     ;main.c: 390: lcd_init();
  3415                           	call	_lcd_init	;wreg free
  3416  00288E  EC88  F010         	line	392
  3417                           	
  3418                           l2233:
  3419  002892                     ;main.c: 392: AMGInit();
  3420                           	call	_AMGInit	;wreg free
  3421  002892  EC5B  F010         	line	394
  3422                           	
  3423                           l2235:
  3424  002896                     ;main.c: 394: RC4 = 0;
  3425                           	bcf	c:(31764/8),(31764)&7	;volatile
  3426  002896  9882               	line	396
  3427                           	
  3428                           l2237:
  3429  002898                     ;main.c: 396: delay_ms(500);
  3430                           	movlw	low(01F4h)
  3431  002898  0EF4               	movwf	((c:delay_ms@millis)),c
  3432  00289A  6E0D               	movlw	high(01F4h)
  3433  00289C  0E01               	movwf	((c:delay_ms@millis+1)),c
  3434  00289E  6E0E               	movlw	low highword(01F4h)
  3435  0028A0  0E00               	movwf	((c:delay_ms@millis+2)),c
  3436  0028A2  6E0F               	movlw	high highword(01F4h)
  3437  0028A4  0E00               	movwf	((c:delay_ms@millis+3)),c
  3438  0028A6  6E10               	call	_delay_ms	;wreg free
  3439  0028A8  EC63  F011         	line	398
  3440                           	
  3441                           l2239:
  3442  0028AC                     ;main.c: 398: fill_rectangle(0, 0, 160, 160, BG_COLOUR);
  3443                           	movlw	high(0)
  3444  0028AC  0E00               	movwf	((c:fill_rectangle@x1+1)),c
  3445  0028AE  6E18               	movlw	low(0)
  3446  0028B0  0E00               	movwf	((c:fill_rectangle@x1)),c
  3447  0028B2  6E17               	movlw	high(0)
  3448  0028B4  0E00               	movwf	((c:fill_rectangle@y1+1)),c
  3449  0028B6  6E1A               	movlw	low(0)
  3450  0028B8  0E00               	movwf	((c:fill_rectangle@y1)),c
  3451  0028BA  6E19               	movlw	high(0A0h)
  3452  0028BC  0E00               	movwf	((c:fill_rectangle@x2+1)),c
  3453  0028BE  6E1C               	movlw	low(0A0h)
  3454  0028C0  0EA0               	movwf	((c:fill_rectangle@x2)),c
  3455  0028C2  6E1B               	movlw	high(0A0h)
  3456  0028C4  0E00               	movwf	((c:fill_rectangle@y2+1)),c
  3457  0028C6  6E1E               	movlw	low(0A0h)
  3458  0028C8  0EA0               	movwf	((c:fill_rectangle@y2)),c
  3459  0028CA  6E1D               	movlw	low((_BG_COLOUR))
  3460  0028CC  0EF2               	movwf	tblptrl
  3461  0028CE  6EF6               	if	1	;There is more than 1 active tblptr byte
  3462  0028D0                     	movlw	high((_BG_COLOUR))
  3463  0028D0  0E3F               	movwf	tblptrh
  3464  0028D2  6EF7               	endif
  3465  0028D4                     	if	0	;There are less than 3 active tblptr bytes
  3466  0028D4                     	movlw	low highword((_BG_COLOUR))
  3469  0028D4                     	tblrd*+
  3470  0028D4  0009               	
  3471                           	movff	tablat,(c:fill_rectangle@colour)
  3472  0028D6  CFF5 F01F          	tblrd*-
  3473  0028DA  000A               	
  3474                           	movff	tablat,(c:fill_rectangle@colour+1)
  3475  0028DC  CFF5 F020          
  3476                           	call	_fill_rectangle	;wreg free
  3477  0028E0  ECBB  F013         	line	400
  3478                           	
  3479                           l2241:
  3480  0028E4                     ;main.c: 400: RC4 = 1;
  3481                           	bsf	c:(31764/8),(31764)&7	;volatile
  3482  0028E4  8882               	goto	l2243
  3483  0028E6  EF75  F014         	line	404
  3484                           ;main.c: 404: while(1) {
  3485                           	
  3486                           l159:
  3487  0028EA                     	line	406
  3488                           	
  3489                           l2243:
  3490  0028EA                     ;main.c: 406: getIRData(ir_buffer);
  3491                           		movlw	low(_ir_buffer)
  3492  0028EA  0E80               	movwf	((c:getIRData@buffer)),c
  3493  0028EC  6E09               	movlw	high(_ir_buffer)
  3494  0028EE  0E01               	movwf	((c:getIRData@buffer+1)),c
  3495  0028F0  6E0A               
  3496                           	call	_getIRData	;wreg free
  3497  0028F2  ECD3  F015         	line	409
  3498                           	
  3499                           l2245:
  3500  0028F6                     ;main.c: 409: calculateInterpolatedPixels(ir_buffer, y_interpolated_pixels, x_interpolat
                                 ed_pixels, xy_interpolated_pixels);
  3501                           		movlw	low(_ir_buffer)
  3502  0028F6  0E80               	movwf	((c:calculateInterpolatedPixels@main_buffer)),c
  3503  0028F8  6E09               	movlw	high(_ir_buffer)
  3504  0028FA  0E01               	movwf	((c:calculateInterpolatedPixels@main_buffer+1)),c
  3505  0028FC  6E0A               
  3506                           		movlw	low(_y_interpolated_pixels)
  3507  0028FE  0E00               	movwf	((c:calculateInterpolatedPixels@y_interpolated_buffer)),c
  3508  002900  6E0B               	movlw	high(_y_interpolated_pixels)
  3509  002902  0E01               	movwf	((c:calculateInterpolatedPixels@y_interpolated_buffer+1)),c
  3510  002904  6E0C               
  3511                           		movlw	low(_x_interpolated_pixels)
  3512  002906  0E80               	movwf	((c:calculateInterpolatedPixels@x_interpolated_buffer)),c
  3513  002908  6E0D               	movlw	high(_x_interpolated_pixels)
  3514  00290A  0E02               	movwf	((c:calculateInterpolatedPixels@x_interpolated_buffer+1)),c
  3515  00290C  6E0E               
  3516                           		movlw	low(_xy_interpolated_pixels)
  3517  00290E  0E00               	movwf	((c:calculateInterpolatedPixels@xy_interpolated_buffer)),c
  3518  002910  6E0F               	movlw	high(_xy_interpolated_pixels)
  3519  002912  0E02               	movwf	((c:calculateInterpolatedPixels@xy_interpolated_buffer+1)),c
  3520  002914  6E10               
  3521                           	call	_calculateInterpolatedPixels	;wreg free
  3522  002916  ECFE  F019         	line	412
  3523                           	
  3524                           l2247:
  3525  00291A                     ;main.c: 412: drawBuffersToDisplay(ir_buffer, y_interpolated_pixels, x_interpolated_pixe
                                 ls, xy_interpolated_pixels);
  3526                           		movlw	low(_ir_buffer)
  3527  00291A  0E80               	movlb	0	; () banked
  3528  00291C  0100               	movwf	((drawBuffersToDisplay@main_buffer))&0ffh
  3529  00291E  6F60               	movlw	high(_ir_buffer)
  3530  002920  0E01               	movwf	((drawBuffersToDisplay@main_buffer+1))&0ffh
  3531  002922  6F61               
  3532                           		movlw	low(_y_interpolated_pixels)
  3533  002924  0E00               	movwf	((drawBuffersToDisplay@horizontal_buffer))&0ffh
  3534  002926  6F62               	movlw	high(_y_interpolated_pixels)
  3535  002928  0E01               	movwf	((drawBuffersToDisplay@horizontal_buffer+1))&0ffh
  3536  00292A  6F63               
  3537                           		movlw	low(_x_interpolated_pixels)
  3538  00292C  0E80               	movwf	((drawBuffersToDisplay@vertical_buffer))&0ffh
  3539  00292E  6F64               	movlw	high(_x_interpolated_pixels)
  3540  002930  0E02               	movwf	((drawBuffersToDisplay@vertical_buffer+1))&0ffh
  3541  002932  6F65               
  3542                           		movlw	low(_xy_interpolated_pixels)
  3543  002934  0E00               	movwf	((drawBuffersToDisplay@diagonal_buffer))&0ffh
  3544  002936  6F66               	movlw	high(_xy_interpolated_pixels)
  3545  002938  0E02               	movwf	((drawBuffersToDisplay@diagonal_buffer+1))&0ffh
  3546  00293A  6F67               
  3547                           	call	_drawBuffersToDisplay	;wreg free
  3548  00293C  ECD1  F01B         	goto	l2243
  3549  002940  EF75  F014         	line	414
  3550                           	
  3551                           l160:
  3552  002944                     	line	404
  3553                           	goto	l2243
  3554  002944  EF75  F014         	
  3555                           l161:
  3556  002948                     	line	416
  3557                           ;main.c: 414: };main.c: 416: while(1);
  3558                           	
  3559                           l162:
  3560  002948                     	
  3561                           l163:
  3562  002948                     	goto	l162
  3563  002948  EFA4  F014         	
  3564                           l164:
  3565  00294C                     	line	418
  3566                           ;main.c: 417: return;
  3567                           	
  3568                           l165:
  3569  00294C                     	global	start
  3570                           	goto	start
  3571  00294C  EF00  F000         	opt stack 0
  3572                           GLOBAL	__end_of_main
  3573                           	__end_of_main:
  3574  002950                     	signat	_main,89
  3575                           	global	_lcd_init
  3576                           
  3577 ;; *************** function _lcd_init *****************
  3578 ;; Defined at:
  3579 ;;		line 112 in file "ST7735.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2, status,0, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  3593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3597 ;;Total ram usage:        0 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    3
  3600 ;; This function calls:
  3601 ;;		_delay_ms
  3602 ;;		_lcd_init_command_list
  3603 ;; This function is called by:
  3604 ;;		_main
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           psect	text1,class=CODE,space=0,reloc=2,group=0
  3608                           	file	"ST7735.c"
  3609                           	line	112
  3610                           global __ptext1
  3611                           __ptext1:
  3612  002110                     psect	text1
  3613                           	file	"ST7735.c"
  3614                           	line	112
  3615                           	global	__size_of_lcd_init
  3616                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3617  0000                     	
  3618                           _lcd_init:
  3619  002110                     ;incstack = 0
  3620                           	opt	stack 27
  3621                           	line	115
  3622                           	
  3623                           l2209:
  3624  002110                     ;ST7735.c: 115: RC2 = 1;
  3625                           	bsf	c:(31762/8),(31762)&7	;volatile
  3626  002110  8482               	line	116
  3627                           ;ST7735.c: 116: RC0 = 1;
  3628                           	bsf	c:(31760/8),(31760)&7	;volatile
  3629  002112  8082               	line	117
  3630                           ;ST7735.c: 117: RC1 = 1;
  3631                           	bsf	c:(31761/8),(31761)&7	;volatile
  3632  002114  8282               	line	120
  3633                           ;ST7735.c: 120: RC1 = 0;
  3634                           	bcf	c:(31761/8),(31761)&7	;volatile
  3635  002116  9282               	line	121
  3636                           	
  3637                           l2211:
  3638  002118                     ;ST7735.c: 121: delay_ms(500);
  3639                           	movlw	low(01F4h)
  3640  002118  0EF4               	movwf	((c:delay_ms@millis)),c
  3641  00211A  6E0D               	movlw	high(01F4h)
  3642  00211C  0E01               	movwf	((c:delay_ms@millis+1)),c
  3643  00211E  6E0E               	movlw	low highword(01F4h)
  3644  002120  0E00               	movwf	((c:delay_ms@millis+2)),c
  3645  002122  6E0F               	movlw	high highword(01F4h)
  3646  002124  0E00               	movwf	((c:delay_ms@millis+3)),c
  3647  002126  6E10               	call	_delay_ms	;wreg free
  3648  002128  EC63  F011         	line	122
  3649                           	
  3650                           l2213:
  3651  00212C                     ;ST7735.c: 122: RC1 = 1;
  3652                           	bsf	c:(31761/8),(31761)&7	;volatile
  3653  00212C  8282               	line	123
  3654                           ;ST7735.c: 123: delay_ms(500);
  3655                           	movlw	low(01F4h)
  3656  00212E  0EF4               	movwf	((c:delay_ms@millis)),c
  3657  002130  6E0D               	movlw	high(01F4h)
  3658  002132  0E01               	movwf	((c:delay_ms@millis+1)),c
  3659  002134  6E0E               	movlw	low highword(01F4h)
  3660  002136  0E00               	movwf	((c:delay_ms@millis+2)),c
  3661  002138  6E0F               	movlw	high highword(01F4h)
  3662  00213A  0E00               	movwf	((c:delay_ms@millis+3)),c
  3663  00213C  6E10               	call	_delay_ms	;wreg free
  3664  00213E  EC63  F011         	line	125
  3665                           ;ST7735.c: 125: lcd_init_command_list();
  3666                           	call	_lcd_init_command_list	;wreg free
  3667  002142  EC10  F012         	line	126
  3668                           	
  3669                           l218:
  3670  002146                     	return	;funcret
  3671  002146  0012               	opt stack 0
  3672                           GLOBAL	__end_of_lcd_init
  3673                           	__end_of_lcd_init:
  3674  002148                     	signat	_lcd_init,89
  3675                           	global	_lcd_init_command_list
  3676                           
  3677 ;; *************** function _lcd_init_command_list *****************
  3678 ;; Defined at:
  3679 ;;		line 133 in file "ST7735.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    2
  3700 ;; This function calls:
  3701 ;;		_delay_ms
  3702 ;;		_lcd_write_command
  3703 ;;		_lcd_write_data
  3704 ;; This function is called by:
  3705 ;;		_lcd_init
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           psect	text2,class=CODE,space=0,reloc=2,group=0
  3709                           	line	133
  3710                           global __ptext2
  3711                           __ptext2:
  3712  002420                     psect	text2
  3713                           	file	"ST7735.c"
  3714                           	line	133
  3715                           	global	__size_of_lcd_init_command_list
  3716                           	__size_of_lcd_init_command_list	equ	__end_of_lcd_init_command_list-_lcd_init_command_li
                                 st
  3717  0000                     	
  3718                           _lcd_init_command_list:
  3719  002420                     ;incstack = 0
  3720                           	opt	stack 27
  3721                           	line	136
  3722                           	
  3723                           l2061:
  3724  002420                     ;ST7735.c: 136: lcd_write_command(0x01);
  3725                           	movlw	(01h)&0ffh
  3726  002420  0E01               	
  3727                           	call	_lcd_write_command
  3728  002422  ECD9  F00F         	line	137
  3729                           ;ST7735.c: 137: delay_ms(100);
  3730                           	movlw	low(064h)
  3731  002426  0E64               	movwf	((c:delay_ms@millis)),c
  3732  002428  6E0D               	movlw	high(064h)
  3733  00242A  0E00               	movwf	((c:delay_ms@millis+1)),c
  3734  00242C  6E0E               	movlw	low highword(064h)
  3735  00242E  0E00               	movwf	((c:delay_ms@millis+2)),c
  3736  002430  6E0F               	movlw	high highword(064h)
  3737  002432  0E00               	movwf	((c:delay_ms@millis+3)),c
  3738  002434  6E10               	call	_delay_ms	;wreg free
  3739  002436  EC63  F011         	line	138
  3740                           ;ST7735.c: 138: lcd_write_command(0x11);
  3741                           	movlw	(011h)&0ffh
  3742  00243A  0E11               	
  3743                           	call	_lcd_write_command
  3744  00243C  ECD9  F00F         	line	139
  3745                           ;ST7735.c: 139: delay_ms(500);
  3746                           	movlw	low(01F4h)
  3747  002440  0EF4               	movwf	((c:delay_ms@millis)),c
  3748  002442  6E0D               	movlw	high(01F4h)
  3749  002444  0E01               	movwf	((c:delay_ms@millis+1)),c
  3750  002446  6E0E               	movlw	low highword(01F4h)
  3751  002448  0E00               	movwf	((c:delay_ms@millis+2)),c
  3752  00244A  6E0F               	movlw	high highword(01F4h)
  3753  00244C  0E00               	movwf	((c:delay_ms@millis+3)),c
  3754  00244E  6E10               	call	_delay_ms	;wreg free
  3755  002450  EC63  F011         	line	140
  3756                           ;ST7735.c: 140: lcd_write_command(0x38);
  3757                           	movlw	(038h)&0ffh
  3758  002454  0E38               	
  3759                           	call	_lcd_write_command
  3760  002456  ECD9  F00F         	line	141
  3761                           ;ST7735.c: 141: delay_ms(500);
  3762                           	movlw	low(01F4h)
  3763  00245A  0EF4               	movwf	((c:delay_ms@millis)),c
  3764  00245C  6E0D               	movlw	high(01F4h)
  3765  00245E  0E01               	movwf	((c:delay_ms@millis+1)),c
  3766  002460  6E0E               	movlw	low highword(01F4h)
  3767  002462  0E00               	movwf	((c:delay_ms@millis+2)),c
  3768  002464  6E0F               	movlw	high highword(01F4h)
  3769  002466  0E00               	movwf	((c:delay_ms@millis+3)),c
  3770  002468  6E10               	call	_delay_ms	;wreg free
  3771  00246A  EC63  F011         	line	142
  3772                           ;ST7735.c: 142: lcd_write_command(0x13);
  3773                           	movlw	(013h)&0ffh
  3774  00246E  0E13               	
  3775                           	call	_lcd_write_command
  3776  002470  ECD9  F00F         	line	143
  3777                           ;ST7735.c: 143: delay_ms(500);
  3778                           	movlw	low(01F4h)
  3779  002474  0EF4               	movwf	((c:delay_ms@millis)),c
  3780  002476  6E0D               	movlw	high(01F4h)
  3781  002478  0E01               	movwf	((c:delay_ms@millis+1)),c
  3782  00247A  6E0E               	movlw	low highword(01F4h)
  3783  00247C  0E00               	movwf	((c:delay_ms@millis+2)),c
  3784  00247E  6E0F               	movlw	high highword(01F4h)
  3785  002480  0E00               	movwf	((c:delay_ms@millis+3)),c
  3786  002482  6E10               	call	_delay_ms	;wreg free
  3787  002484  EC63  F011         	line	147
  3788                           ;ST7735.c: 147: lcd_write_command(0x36);
  3789                           	movlw	(036h)&0ffh
  3790  002488  0E36               	
  3791                           	call	_lcd_write_command
  3792  00248A  ECD9  F00F         	line	148
  3793                           ;ST7735.c: 148: lcd_write_data(0xC8);
  3794                           	movlw	(0C8h)&0ffh
  3795  00248E  0EC8               	
  3796                           	call	_lcd_write_data
  3797  002490  ECCA  F00F         	line	150
  3798                           ;ST7735.c: 150: lcd_write_command(0x3A);
  3799                           	movlw	(03Ah)&0ffh
  3800  002494  0E3A               	
  3801                           	call	_lcd_write_command
  3802  002496  ECD9  F00F         	line	151
  3803                           ;ST7735.c: 151: lcd_write_data(0x05);
  3804                           	movlw	(05h)&0ffh
  3805  00249A  0E05               	
  3806                           	call	_lcd_write_data
  3807  00249C  ECCA  F00F         	line	155
  3808                           ;ST7735.c: 155: lcd_write_command(0x29);
  3809                           	movlw	(029h)&0ffh
  3810  0024A0  0E29               	
  3811                           	call	_lcd_write_command
  3812  0024A2  ECD9  F00F         	line	156
  3813                           	
  3814                           l221:
  3815  0024A6                     	return	;funcret
  3816  0024A6  0012               	opt stack 0
  3817                           GLOBAL	__end_of_lcd_init_command_list
  3818                           	__end_of_lcd_init_command_list:
  3819  0024A8                     	signat	_lcd_init_command_list,89
  3820                           	global	_delay_ms
  3821                           
  3822 ;; *************** function _delay_ms *****************
  3823 ;; Defined at:
  3824 ;;		line 93 in file "ST7735.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  millis          4   12[COMRAM] long 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  cycles          4   16[COMRAM] unsigned long 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      void 
  3831 ;; Registers used:
  3832 ;;		wreg, status,2, status,0, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  3838 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3839 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3841 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3842 ;;Total ram usage:        8 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    1
  3845 ;; This function calls:
  3846 ;;		___lmul
  3847 ;; This function is called by:
  3848 ;;		_main
  3849 ;;		_lcd_init
  3850 ;;		_lcd_init_command_list
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           psect	text3,class=CODE,space=0,reloc=2,group=0
  3854                           	line	93
  3855                           global __ptext3
  3856                           __ptext3:
  3857  0022C6                     psect	text3
  3858                           	file	"ST7735.c"
  3859                           	line	93
  3860                           	global	__size_of_delay_ms
  3861                           	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  3862  0000                     	
  3863                           _delay_ms:
  3864  0022C6                     ;incstack = 0
  3865                           	opt	stack 27
  3866                           	line	94
  3867                           	
  3868                           l1923:
  3869  0022C6                     ;ST7735.c: 94: unsigned long int cycles = millis * 1000;
  3870                           	movff	(c:delay_ms@millis),(c:___lmul@multiplier)
  3871  0022C6  C00D  F001         	movff	(c:delay_ms@millis+1),(c:___lmul@multiplier+1)
  3872  0022CA  C00E  F002         	movff	(c:delay_ms@millis+2),(c:___lmul@multiplier+2)
  3873  0022CE  C00F  F003         	movff	(c:delay_ms@millis+3),(c:___lmul@multiplier+3)
  3874  0022D2  C010  F004         	movlw	low(03E8h)
  3875  0022D6  0EE8               	movwf	((c:___lmul@multiplicand)),c
  3876  0022D8  6E05               	movlw	high(03E8h)
  3877  0022DA  0E03               	movwf	((c:___lmul@multiplicand+1)),c
  3878  0022DC  6E06               	movlw	low highword(03E8h)
  3879  0022DE  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  3880  0022E0  6E07               	movlw	high highword(03E8h)
  3881  0022E2  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  3882  0022E4  6E08               	call	___lmul	;wreg free
  3883  0022E6  EC9A  F011         	movff	0+?___lmul,(c:delay_ms@cycles)
  3884  0022EA  C001  F011         	movff	1+?___lmul,(c:delay_ms@cycles+1)
  3885  0022EE  C002  F012         	movff	2+?___lmul,(c:delay_ms@cycles+2)
  3886  0022F2  C003  F013         	movff	3+?___lmul,(c:delay_ms@cycles+3)
  3887  0022F6  C004  F014         	
  3888                           	line	95
  3889                           ;ST7735.c: 95: while(millis--);
  3890                           	goto	l1925
  3891  0022FA  EF81  F011         	
  3892                           l207:
  3893  0022FE                     	goto	l1925
  3894  0022FE  EF81  F011         	
  3895                           l206:
  3896  002302                     	
  3897                           l1925:
  3898  002302                     	movlw	0FFh
  3899  002302  0EFF               	addwf	((c:delay_ms@millis)),c
  3900  002304  260D               	movlw	0FFh
  3901  002306  0EFF               	addwfc	((c:delay_ms@millis+1)),c
  3902  002308  220E               	movlw	0FFh
  3903  00230A  0EFF               	addwfc	((c:delay_ms@millis+2)),c
  3904  00230C  220F               	movlw	0FFh
  3905  00230E  0EFF               	addwfc	((c:delay_ms@millis+3)),c
  3906  002310  2210               		incf	((c:delay_ms@millis)),c,w
  3907  002312  280D               	bnz	u1271
  3908  002314  E10A               	incf	((c:delay_ms@millis+1)),c,w
  3909  002316  280E               	bnz	u1271
  3910  002318  E108               	incf	((c:delay_ms@millis+2)),c,w
  3911  00231A  280F               	bnz	u1271
  3912  00231C  E106               	incf	((c:delay_ms@millis+3)),c,w
  3913  00231E  2810               	btfss	status,2
  3914  002320  A4D8               	goto	u1271
  3915  002322  EF95  F011         	goto	u1270
  3916  002326  EF97  F011         
  3917                           u1271:
  3918  00232A                     	goto	l1925
  3919  00232A  EF81  F011         u1270:
  3920  00232E                     	goto	l209
  3921  00232E  EF99  F011         	
  3922                           l208:
  3923  002332                     	line	96
  3924                           	
  3925                           l209:
  3926  002332                     	return	;funcret
  3927  002332  0012               	opt stack 0
  3928                           GLOBAL	__end_of_delay_ms
  3929                           	__end_of_delay_ms:
  3930  002334                     	signat	_delay_ms,4217
  3931                           	global	___lmul
  3932                           
  3933 ;; *************** function ___lmul *****************
  3934 ;; Defined at:
  3935 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  multiplier      4    0[COMRAM] unsigned long 
  3938 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;  product         4    8[COMRAM] unsigned long 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  4    0[COMRAM] unsigned long 
  3943 ;; Registers used:
  3944 ;;		wreg, status,2, status,0
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  3950 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3951 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3953 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  3954 ;;Total ram usage:       12 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; This function calls:
  3957 ;;		Nothing
  3958 ;; This function is called by:
  3959 ;;		_delay_ms
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           psect	text4,class=CODE,space=0,reloc=2,group=1
  3963                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3964                           	line	15
  3965                           global __ptext4
  3966                           __ptext4:
  3967  002334                     psect	text4
  3968                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3969                           	line	15
  3970                           	global	__size_of___lmul
  3971                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  3972  0000                     	
  3973                           ___lmul:
  3974  002334                     ;incstack = 0
  3975                           	opt	stack 27
  3976                           	line	119
  3977                           	
  3978                           l1761:
  3979  002334                     	movlw	low(0)
  3980  002334  0E00               	movwf	((c:___lmul@product)),c
  3981  002336  6E09               	movlw	high(0)
  3982  002338  0E00               	movwf	((c:___lmul@product+1)),c
  3983  00233A  6E0A               	movlw	low highword(0)
  3984  00233C  0E00               	movwf	((c:___lmul@product+2)),c
  3985  00233E  6E0B               	movlw	high highword(0)
  3986  002340  0E00               	movwf	((c:___lmul@product+3)),c
  3987  002342  6E0C               	goto	l1763
  3988  002344  EFA4  F011         	line	120
  3989                           	
  3990                           l313:
  3991  002348                     	line	121
  3992                           	
  3993                           l1763:
  3994  002348                     	
  3995                           	btfss	((c:___lmul@multiplier)),c,(0)&7
  3996  002348  A001               	goto	u1021
  3997  00234A  EFA9  F011         	goto	u1020
  3998  00234E  EFAB  F011         u1021:
  3999  002352                     	goto	l1767
  4000  002352  EFB5  F011         u1020:
  4001  002356                     	line	122
  4002                           	
  4003                           l1765:
  4004  002356                     	movf	((c:___lmul@multiplicand)),c,w
  4005  002356  5005               	addwf	((c:___lmul@product)),c
  4006  002358  2609               	movf	((c:___lmul@multiplicand+1)),c,w
  4007  00235A  5006               	addwfc	((c:___lmul@product+1)),c
  4008  00235C  220A               	movf	((c:___lmul@multiplicand+2)),c,w
  4009  00235E  5007               	addwfc	((c:___lmul@product+2)),c
  4010  002360  220B               	movf	((c:___lmul@multiplicand+3)),c,w
  4011  002362  5008               	addwfc	((c:___lmul@product+3)),c
  4012  002364  220C               	goto	l1767
  4013  002366  EFB5  F011         	
  4014                           l314:
  4015  00236A                     	line	123
  4016                           	
  4017                           l1767:
  4018  00236A                     	bcf	status,0
  4019  00236A  90D8               	rlcf	((c:___lmul@multiplicand)),c
  4020  00236C  3605               	rlcf	((c:___lmul@multiplicand+1)),c
  4021  00236E  3606               	rlcf	((c:___lmul@multiplicand+2)),c
  4022  002370  3607               	rlcf	((c:___lmul@multiplicand+3)),c
  4023  002372  3608               	line	124
  4024                           	
  4025                           l1769:
  4026  002374                     	bcf	status,0
  4027  002374  90D8               	rrcf	((c:___lmul@multiplier+3)),c
  4028  002376  3204               	rrcf	((c:___lmul@multiplier+2)),c
  4029  002378  3203               	rrcf	((c:___lmul@multiplier+1)),c
  4030  00237A  3202               	rrcf	((c:___lmul@multiplier)),c
  4031  00237C  3201               	line	125
  4032                           	movf	((c:___lmul@multiplier)),c,w
  4033  00237E  5001               iorwf	((c:___lmul@multiplier+1)),c,w
  4034  002380  1002               iorwf	((c:___lmul@multiplier+2)),c,w
  4035  002382  1003               iorwf	((c:___lmul@multiplier+3)),c,w
  4036  002384  1004               	btfss	status,2
  4037  002386  A4D8               	goto	u1031
  4038  002388  EFC8  F011         	goto	u1030
  4039  00238C  EFCA  F011         
  4040                           u1031:
  4041  002390                     	goto	l1763
  4042  002390  EFA4  F011         u1030:
  4043  002394                     	
  4044                           l315:
  4045  002394                     	line	128
  4046                           	movff	(c:___lmul@product),(c:?___lmul)
  4047  002394  C009  F001         	movff	(c:___lmul@product+1),(c:?___lmul+1)
  4048  002398  C00A  F002         	movff	(c:___lmul@product+2),(c:?___lmul+2)
  4049  00239C  C00B  F003         	movff	(c:___lmul@product+3),(c:?___lmul+3)
  4050  0023A0  C00C  F004         	line	129
  4051                           	
  4052                           l316:
  4053  0023A4                     	return	;funcret
  4054  0023A4  0012               	opt stack 0
  4055                           GLOBAL	__end_of___lmul
  4056                           	__end_of___lmul:
  4057  0023A6                     	signat	___lmul,8316
  4058                           	global	_initSPI
  4059                           
  4060 ;; *************** function _initSPI *****************
  4061 ;; Defined at:
  4062 ;;		line 72 in file "main.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;		None
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  4076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4080 ;;Total ram usage:        0 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_main
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           psect	text5,class=CODE,space=0,reloc=2,group=0
  4089                           	file	"main.c"
  4090                           	line	72
  4091                           global __ptext5
  4092                           __ptext5:
  4093  002016                     psect	text5
  4094                           	file	"main.c"
  4095                           	line	72
  4096                           	global	__size_of_initSPI
  4097                           	__size_of_initSPI	equ	__end_of_initSPI-_initSPI
  4098  0000                     	
  4099                           _initSPI:
  4100  002016                     ;incstack = 0
  4101                           	opt	stack 30
  4102                           	line	74
  4103                           	
  4104                           l2081:
  4105  002016                     ;main.c: 74: TRISC2 = 0;
  4106                           	bcf	c:(31906/8),(31906)&7	;volatile
  4107  002016  9494               	line	75
  4108                           ;main.c: 75: TRISC1 = 0;
  4109                           	bcf	c:(31905/8),(31905)&7	;volatile
  4110  002018  9294               	line	76
  4111                           ;main.c: 76: TRISC0 = 0;
  4112                           	bcf	c:(31904/8),(31904)&7	;volatile
  4113  00201A  9094               	line	77
  4114                           ;main.c: 77: TRISA0 = 0;
  4115                           	bcf	c:(31888/8),(31888)&7	;volatile
  4116  00201C  9092               	line	78
  4117                           ;main.c: 78: TRISA1 = 0;
  4118                           	bcf	c:(31889/8),(31889)&7	;volatile
  4119  00201E  9292               	line	81
  4120                           	
  4121                           l2083:
  4122  002020                     ;main.c: 81: SSP2CON1 = 0b00110000;
  4123                           	movlw	low(030h)
  4124  002020  0E30               	movwf	((c:3954)),c	;volatile
  4125  002022  6E72               	line	86
  4126                           ;main.c: 86: EECON2 = 0x55;
  4127                           	movlw	low(055h)
  4128  002024  0E55               	movwf	((c:4007)),c	;volsfr
  4129  002026  6EA7               	line	87
  4130                           ;main.c: 87: EECON2 = 0xAA;
  4131                           	movlw	low(0AAh)
  4132  002028  0EAA               	movwf	((c:4007)),c	;volsfr
  4133  00202A  6EA7               	line	88
  4134                           	
  4135                           l2085:
  4136  00202C                     ;main.c: 88: IOLOCK = 0;
  4137                           	movlb	14	; () banked
  4138  00202C  010E               	bcf	(30712/8)&0ffh,(30712)&7	;volatile
  4139  00202E  91FF               	line	89
  4140                           ;main.c: 89: RPOR0 = 9;
  4141                           	movlw	low(09h)
  4142  002030  0E09               	movwf	((3782))&0ffh	;volatile
  4143  002032  6FC6               	line	90
  4144                           ;main.c: 90: RPOR1 = 10;
  4145                           	movlw	low(0Ah)
  4146  002034  0E0A               	movwf	((3783))&0ffh	;volatile
  4147  002036  6FC7               	line	92
  4148                           	
  4149                           l2087:; BSR set to: 14
  4150  002038                     
  4151                           ;main.c: 92: IOLOCK = 1;
  4152                           	bsf	(30712/8)&0ffh,(30712)&7	;volatile
  4153  002038  81FF               	line	95
  4154                           	
  4155                           l95:; BSR set to: 14
  4156  00203A                     
  4157                           	return	;funcret
  4158  00203A  0012               	opt stack 0
  4159                           GLOBAL	__end_of_initSPI
  4160                           	__end_of_initSPI:
  4161  00203C                     	signat	_initSPI,89
  4162                           	global	_initI2C
  4163                           
  4164 ;; *************** function _initI2C *****************
  4165 ;; Defined at:
  4166 ;;		line 100 in file "main.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;		None
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;		None
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  4180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4184 ;;Total ram usage:        0 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; This function calls:
  4187 ;;		Nothing
  4188 ;; This function is called by:
  4189 ;;		_main
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           psect	text6,class=CODE,space=0,reloc=2,group=0
  4193                           	line	100
  4194                           global __ptext6
  4195                           __ptext6:
  4196  001FC4                     psect	text6
  4197                           	file	"main.c"
  4198                           	line	100
  4199                           	global	__size_of_initI2C
  4200                           	__size_of_initI2C	equ	__end_of_initI2C-_initI2C
  4201  0000                     	
  4202                           _initI2C:; BSR set to: 14
  4203  001FC4                     
  4204                           ;incstack = 0
  4205                           	opt	stack 30
  4206                           	line	103
  4207                           	
  4208                           l2089:
  4209  001FC4                     ;main.c: 103: TRISB5 = 1;
  4210                           	bsf	c:(31901/8),(31901)&7	;volatile
  4211  001FC4  8A93               	line	104
  4212                           ;main.c: 104: TRISB4 = 1;
  4213                           	bsf	c:(31900/8),(31900)&7	;volatile
  4214  001FC6  8893               	line	108
  4215                           	
  4216                           l2091:
  4217  001FC8                     ;main.c: 108: SSP1CON1 = 0b00101000;
  4218                           	movlw	low(028h)
  4219  001FC8  0E28               	movwf	((c:4038)),c	;volatile
  4220  001FCA  6EC6               	line	109
  4221                           ;main.c: 109: SSP1CON2 = 0b00000000;
  4222                           	movlw	low(0)
  4223  001FCC  0E00               	movwf	((c:4037)),c	;volatile
  4224  001FCE  6EC5               	line	112
  4225                           ;main.c: 112: SSP1ADD = (0x0C);
  4226                           	movlw	low(0Ch)
  4227  001FD0  0E0C               	movwf	((c:4040)),c	;volatile
  4228  001FD2  6EC8               	line	113
  4229                           	
  4230                           l98:
  4231  001FD4                     	return	;funcret
  4232  001FD4  0012               	opt stack 0
  4233                           GLOBAL	__end_of_initI2C
  4234                           	__end_of_initI2C:
  4235  001FD6                     	signat	_initI2C,89
  4236                           	global	_initADC
  4237                           
  4238 ;; *************** function _initADC *****************
  4239 ;; Defined at:
  4240 ;;		line 118 in file "main.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;		None
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;		None
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, status,2, status,0
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  4254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4258 ;;Total ram usage:        0 bytes
  4259 ;; Hardware stack levels used:    1
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_main
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           psect	text7,class=CODE,space=0,reloc=2,group=0
  4267                           	line	118
  4268                           global __ptext7
  4269                           __ptext7:
  4270  001FA2                     psect	text7
  4271                           	file	"main.c"
  4272                           	line	118
  4273                           	global	__size_of_initADC
  4274                           	__size_of_initADC	equ	__end_of_initADC-_initADC
  4275  0000                     	
  4276                           _initADC:
  4277  001FA2                     ;incstack = 0
  4278                           	opt	stack 30
  4279                           	line	120
  4280                           	
  4281                           l2093:
  4282  001FA2                     ;main.c: 120: ADCON0 = 0b00101001;
  4283                           	movlw	low(029h)
  4284  001FA2  0E29               	movwf	((c:4034)),c	;volatile
  4285  001FA4  6EC2               	line	121
  4286                           ;main.c: 121: ADCON1 = 0b10000000;
  4287                           	movlw	low(080h)
  4288  001FA6  0E80               	movwf	((c:4033)),c	;volatile
  4289  001FA8  6EC1               	line	124
  4290                           	
  4291                           l2095:
  4292  001FAA                     ;main.c: 124: ADCON0 = ADCON0 | 0b00000010;
  4293                           	movf	((c:4034)),c,w	;volatile
  4294  001FAA  50C2               	iorlw	low(02h)
  4295  001FAC  0902               	movwf	((c:4034)),c	;volatile
  4296  001FAE  6EC2               	line	126
  4297                           	
  4298                           l101:
  4299  001FB0                     	return	;funcret
  4300  001FB0  0012               	opt stack 0
  4301                           GLOBAL	__end_of_initADC
  4302                           	__end_of_initADC:
  4303  001FB2                     	signat	_initADC,89
  4304                           	global	_getIRData
  4305                           
  4306 ;; *************** function _getIRData *****************
  4307 ;; Defined at:
  4308 ;;		line 270 in file "main.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  buffer          2    8[COMRAM] PTR int 
  4311 ;;		 -> ir_buffer(128), 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  this_pixel      2   18[COMRAM] unsigned int 
  4314 ;;  y               2   22[COMRAM] int 
  4315 ;;  x               2   20[COMRAM] int 
  4316 ;;  data            2   14[COMRAM] int 
  4317 ;;  dataH           1   17[COMRAM] unsigned char 
  4318 ;;  dataL           1   16[COMRAM] unsigned char 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  4328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4329 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4330 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4331 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4332 ;;Total ram usage:       16 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; Hardware stack levels required when called:    3
  4335 ;; This function calls:
  4336 ;;		_i2c_receive_data
  4337 ;; This function is called by:
  4338 ;;		_main
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           psect	text8,class=CODE,space=0,reloc=2,group=0
  4342                           	line	270
  4343                           global __ptext8
  4344                           __ptext8:
  4345  002BA6                     psect	text8
  4346                           	file	"main.c"
  4347                           	line	270
  4348                           	global	__size_of_getIRData
  4349                           	__size_of_getIRData	equ	__end_of_getIRData-_getIRData
  4350  0000                     	
  4351                           _getIRData:
  4352  002BA6                     ;incstack = 0
  4353                           	opt	stack 27
  4354                           	line	278
  4355                           	
  4356                           l2097:
  4357  002BA6                     ;main.c: 274: unsigned char dataL;;main.c: 275: unsigned char dataH;;main.c: 276: int da
                                 ta;;main.c: 278: for(int x = 0; x < 8; x++) {
  4358                           	movlw	high(0)
  4359  002BA6  0E00               	movwf	((c:getIRData@x+1)),c
  4360  002BA8  6E16               	movlw	low(0)
  4361  002BAA  0E00               	movwf	((c:getIRData@x)),c
  4362  002BAC  6E15               	
  4363                           l2099:
  4364  002BAE                     	btfsc	((c:getIRData@x+1)),c,7
  4365  002BAE  BE16               	goto	u1421
  4366  002BB0  EFE3  F015         	movf	((c:getIRData@x+1)),c,w
  4367  002BB4  5016               	bnz	u1420
  4368  002BB6  E109               	movlw	8
  4369  002BB8  0E08               	subwf	 ((c:getIRData@x)),c,w
  4370  002BBA  5C15               	btfss	status,0
  4371  002BBC  A0D8               	goto	u1421
  4372  002BBE  EFE3  F015         	goto	u1420
  4373  002BC2  EFE5  F015         
  4374                           u1421:
  4375  002BC6                     	goto	l2103
  4376  002BC6  EFE9  F015         u1420:
  4377  002BCA                     	goto	l135
  4378  002BCA  EF92  F016         	
  4379                           l2101:
  4380  002BCE                     	goto	l135
  4381  002BCE  EF92  F016         	
  4382                           l131:
  4383  002BD2                     	line	279
  4384                           	
  4385                           l2103:
  4386  002BD2                     ;main.c: 279: for(int y = 0; y < 8; y++) {
  4387                           	movlw	high(0)
  4388  002BD2  0E00               	movwf	((c:getIRData@y+1)),c
  4389  002BD4  6E18               	movlw	low(0)
  4390  002BD6  0E00               	movwf	((c:getIRData@y)),c
  4391  002BD8  6E17               	
  4392                           l2105:
  4393  002BDA                     	btfsc	((c:getIRData@y+1)),c,7
  4394  002BDA  BE18               	goto	u1431
  4395  002BDC  EFF9  F015         	movf	((c:getIRData@y+1)),c,w
  4396  002BE0  5018               	bnz	u1430
  4397  002BE2  E109               	movlw	8
  4398  002BE4  0E08               	subwf	 ((c:getIRData@y)),c,w
  4399  002BE6  5C17               	btfss	status,0
  4400  002BE8  A0D8               	goto	u1431
  4401  002BEA  EFF9  F015         	goto	u1430
  4402  002BEE  EFFB  F015         
  4403                           u1431:
  4404  002BF2                     	goto	l2109
  4405  002BF2  EFFF  F015         u1430:
  4406  002BF6                     	goto	l2121
  4407  002BF6  EF80  F016         	
  4408                           l2107:
  4409  002BFA                     	goto	l2121
  4410  002BFA  EF80  F016         	
  4411                           l133:
  4412  002BFE                     	line	282
  4413                           	
  4414                           l2109:
  4415  002BFE                     ;main.c: 282: unsigned int this_pixel = ((x) * 16) + ((y) * 2);
  4416                           	movff	(c:getIRData@y),??_getIRData+0+0
  4417  002BFE  C017  F00B         	movff	(c:getIRData@y+1),??_getIRData+0+0+1
  4418  002C02  C018  F00C         	bcf	status,0
  4419  002C06  90D8               	rlcf	(??_getIRData+0+0),c,f
  4420  002C08  360B               	rlcf	(??_getIRData+0+1),c,f
  4421  002C0A  360C               	movff	(c:getIRData@x),??_getIRData+2+0
  4422  002C0C  C015  F00D         	movff	(c:getIRData@x+1),??_getIRData+2+0+1
  4423  002C10  C016  F00E         	swapf	(??_getIRData+2+0),c
  4424  002C14  3A0D               	swapf	(??_getIRData+2+1),c
  4425  002C16  3A0E               	movlw	0f0h
  4426  002C18  0EF0               	andwf	(??_getIRData+2+1),c
  4427  002C1A  160E               	movf	(??_getIRData+2+0),c,w
  4428  002C1C  500D               	andlw	0fh
  4429  002C1E  0B0F               	iorwf	(??_getIRData+2+1),c
  4430  002C20  120E               	movlw	0f0h
  4431  002C22  0EF0               	andwf	(??_getIRData+2+0),c
  4432  002C24  160D               	movf	(??_getIRData+0+0),c,w
  4433  002C26  500B               	addwf	(??_getIRData+2+0),c,w
  4434  002C28  240D               	movwf	((c:getIRData@this_pixel)),c
  4435  002C2A  6E13               	movf	(??_getIRData+0+1),c,w
  4436  002C2C  500C               	addwfc	(??_getIRData+2+1),c,w
  4437  002C2E  200E               	movwf	1+((c:getIRData@this_pixel)),c
  4438  002C30  6E14               	line	283
  4439                           	
  4440                           l2111:
  4441  002C32                     ;main.c: 283: dataL = i2c_receive_data(addr, this_pixel + start_pixel_reg);
  4442                           	movlw	low((_start_pixel_reg))
  4443  002C32  0EF4               	movwf	tblptrl
  4444  002C34  6EF6               	if	1	;There is more than 1 active tblptr byte
  4445  002C36                     	movlw	high((_start_pixel_reg))
  4446  002C36  0E3F               	movwf	tblptrh
  4447  002C38  6EF7               	endif
  4448  002C3A                     	if	0	;There are less than 3 active tblptr bytes
  4449  002C3A                     	movlw	low highword((_start_pixel_reg))
  4452  002C3A                     	tblrd	*
  4453  002C3A  0008               	
  4454                           	movf	tablat,w
  4455  002C3C  50F5               	addwf	((c:getIRData@this_pixel)),c,w
  4456  002C3E  2413               	movwf	((c:i2c_receive_data@reg)),c
  4457  002C40  6E04               	movlw	low((_addr))
  4458  002C42  0EF5               	movwf	tblptrl
  4459  002C44  6EF6               	if	1	;There is more than 1 active tblptr byte
  4460  002C46                     	movlw	high((_addr))
  4461  002C46  0E3F               	movwf	tblptrh
  4462  002C48  6EF7               	endif
  4463  002C4A                     	if	0	;There are less than 3 active tblptr bytes
  4464  002C4A                     	movlw	low highword((_addr))
  4467  002C4A                     	tblrd	*
  4468  002C4A  0008               	
  4469                           	movf	tablat,w
  4470  002C4C  50F5               	
  4471                           	call	_i2c_receive_data
  4472  002C4E  ECD3  F011         	movwf	((c:getIRData@dataL)),c
  4473  002C52  6E11               	line	284
  4474                           	
  4475                           l2113:
  4476  002C54                     ;main.c: 284: dataH = i2c_receive_data(addr, this_pixel + start_pixel_reg + 1);
  4477                           	movlw	low((_start_pixel_reg))
  4478  002C54  0EF4               	movwf	tblptrl
  4479  002C56  6EF6               	if	1	;There is more than 1 active tblptr byte
  4480  002C58                     	movlw	high((_start_pixel_reg))
  4481  002C58  0E3F               	movwf	tblptrh
  4482  002C5A  6EF7               	endif
  4483  002C5C                     	if	0	;There are less than 3 active tblptr bytes
  4484  002C5C                     	movlw	low highword((_start_pixel_reg))
  4487  002C5C                     	tblrd	*
  4488  002C5C  0008               	
  4489                           	movf	tablat,w
  4490  002C5E  50F5               	addwf	((c:getIRData@this_pixel)),c,w
  4491  002C60  2413               	movwf	(??_getIRData+0+0)&0ffh,c
  4492  002C62  6E0B               	incf	((??_getIRData+0+0)),c,w
  4493  002C64  280B               	movwf	((c:i2c_receive_data@reg)),c
  4494  002C66  6E04               	movlw	low((_addr))
  4495  002C68  0EF5               	movwf	tblptrl
  4496  002C6A  6EF6               	if	1	;There is more than 1 active tblptr byte
  4497  002C6C                     	movlw	high((_addr))
  4498  002C6C  0E3F               	movwf	tblptrh
  4499  002C6E  6EF7               	endif
  4500  002C70                     	if	0	;There are less than 3 active tblptr bytes
  4501  002C70                     	movlw	low highword((_addr))
  4504  002C70                     	tblrd	*
  4505  002C70  0008               	
  4506                           	movf	tablat,w
  4507  002C72  50F5               	
  4508                           	call	_i2c_receive_data
  4509  002C74  ECD3  F011         	movwf	((c:getIRData@dataH)),c
  4510  002C78  6E12               	line	285
  4511                           ;main.c: 285: data = (dataH << 8) | dataL;
  4512                           	movf	((c:getIRData@dataL)),c,w
  4513  002C7A  5011               	movff	(c:getIRData@dataH),??_getIRData+0+0
  4514  002C7C  C012  F00B         	clrf	(??_getIRData+0+0+1)&0ffh,c
  4515  002C80  6A0C               	movff	??_getIRData+0+0,??_getIRData+0+1
  4516  002C82  C00B  F00C         	clrf	(??_getIRData+0+0),c
  4517  002C86  6A0B               	iorwf	(??_getIRData+0+0),c,w
  4518  002C88  100B               	movwf	((c:getIRData@data)),c
  4519  002C8A  6E0F               	movf	(??_getIRData+0+1),c,w
  4520  002C8C  500C               	movwf	1+((c:getIRData@data)),c
  4521  002C8E  6E10               	line	288
  4522                           	
  4523                           l2115:
  4524  002C90                     ;main.c: 288: buffer[((7-x) * 8) + y] = data;
  4525                           	movff	(c:getIRData@x),??_getIRData+0+0
  4526  002C90  C015  F00B         	movff	(c:getIRData@x+1),??_getIRData+0+0+1
  4527  002C94  C016  F00C         	comf	(??_getIRData+0+0),c
  4528  002C98  1E0B               	comf	(??_getIRData+0+1),c
  4529  002C9A  1E0C               	infsnz	(??_getIRData+0+0),c
  4530  002C9C  4A0B               	incf	(??_getIRData+0+1),c
  4531  002C9E  2A0C               	bcf	status,0
  4532  002CA0  90D8               	rlcf	(??_getIRData+0+0),c
  4533  002CA2  360B               	rlcf	(??_getIRData+0+1),c
  4534  002CA4  360C               	bcf	status,0
  4535  002CA6  90D8               	rlcf	(??_getIRData+0+0),c
  4536  002CA8  360B               	rlcf	(??_getIRData+0+1),c
  4537  002CAA  360C               	bcf	status,0
  4538  002CAC  90D8               	rlcf	(??_getIRData+0+0),c
  4539  002CAE  360B               	rlcf	(??_getIRData+0+1),c
  4540  002CB0  360C               	movf	((c:getIRData@y)),c,w
  4541  002CB2  5017               	addwf	(??_getIRData+0+0),c
  4542  002CB4  260B               	movf	((c:getIRData@y+1)),c,w
  4543  002CB6  5018               	addwfc	(??_getIRData+0+1),c
  4544  002CB8  220C               	bcf	status,0
  4545  002CBA  90D8               	rlcf	(??_getIRData+0+0),c,f
  4546  002CBC  360B               	rlcf	(??_getIRData+0+1),c,f
  4547  002CBE  360C               	movlw	070h
  4548  002CC0  0E70               	addwf	(??_getIRData+0+0),c
  4549  002CC2  260B               	movlw	0
  4550  002CC4  0E00               	addwfc	(??_getIRData+0+1),c
  4551  002CC6  220C               	movf	(??_getIRData+0+0),c,w
  4552  002CC8  500B               	addwf	((c:getIRData@buffer)),c,w
  4553  002CCA  2409               	movwf	c:fsr2l
  4554  002CCC  6ED9               	movf	(??_getIRData+0+1),c,w
  4555  002CCE  500C               	addwfc	((c:getIRData@buffer+1)),c,w
  4556  002CD0  200A               	movwf	1+c:fsr2l
  4557  002CD2  6EDA               	movff	(c:getIRData@data),postinc2
  4558  002CD4  C00F  FFDE         	movff	(c:getIRData@data+1),postdec2
  4559  002CD8  C010  FFDD         	line	279
  4560                           	
  4561                           l2117:
  4562  002CDC                     	infsnz	((c:getIRData@y)),c
  4563  002CDC  4A17               	incf	((c:getIRData@y+1)),c
  4564  002CDE  2A18               	
  4565                           l2119:
  4566  002CE0                     	btfsc	((c:getIRData@y+1)),c,7
  4567  002CE0  BE18               	goto	u1441
  4568  002CE2  EF7C  F016         	movf	((c:getIRData@y+1)),c,w
  4569  002CE6  5018               	bnz	u1440
  4570  002CE8  E109               	movlw	8
  4571  002CEA  0E08               	subwf	 ((c:getIRData@y)),c,w
  4572  002CEC  5C17               	btfss	status,0
  4573  002CEE  A0D8               	goto	u1441
  4574  002CF0  EF7C  F016         	goto	u1440
  4575  002CF4  EF7E  F016         
  4576                           u1441:
  4577  002CF8                     	goto	l2109
  4578  002CF8  EFFF  F015         u1440:
  4579  002CFC                     	goto	l2121
  4580  002CFC  EF80  F016         	
  4581                           l134:
  4582  002D00                     	line	278
  4583                           	
  4584                           l2121:
  4585  002D00                     	infsnz	((c:getIRData@x)),c
  4586  002D00  4A15               	incf	((c:getIRData@x+1)),c
  4587  002D02  2A16               	
  4588                           l2123:
  4589  002D04                     	btfsc	((c:getIRData@x+1)),c,7
  4590  002D04  BE16               	goto	u1451
  4591  002D06  EF8E  F016         	movf	((c:getIRData@x+1)),c,w
  4592  002D0A  5016               	bnz	u1450
  4593  002D0C  E109               	movlw	8
  4594  002D0E  0E08               	subwf	 ((c:getIRData@x)),c,w
  4595  002D10  5C15               	btfss	status,0
  4596  002D12  A0D8               	goto	u1451
  4597  002D14  EF8E  F016         	goto	u1450
  4598  002D18  EF90  F016         
  4599                           u1451:
  4600  002D1C                     	goto	l2103
  4601  002D1C  EFE9  F015         u1450:
  4602  002D20                     	goto	l135
  4603  002D20  EF92  F016         	
  4604                           l132:
  4605  002D24                     	line	291
  4606                           	
  4607                           l135:
  4608  002D24                     	return	;funcret
  4609  002D24  0012               	opt stack 0
  4610                           GLOBAL	__end_of_getIRData
  4611                           	__end_of_getIRData:
  4612  002D26                     	signat	_getIRData,4217
  4613                           	global	_i2c_receive_data
  4614                           
  4615 ;; *************** function _i2c_receive_data *****************
  4616 ;; Defined at:
  4617 ;;		line 49 in file "AMG88xx.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;  address         1    wreg     unsigned char 
  4620 ;;  reg             1    3[COMRAM] unsigned char 
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  address         1    7[COMRAM] unsigned char 
  4623 ;;  data            1    6[COMRAM] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      unsigned char 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  4633 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4634 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4635 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4636 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4637 ;;Total ram usage:        5 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; Hardware stack levels required when called:    2
  4640 ;; This function calls:
  4641 ;;		_i2c_master_wait
  4642 ;;		_i2c_send_request
  4643 ;; This function is called by:
  4644 ;;		_getIRData
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           psect	text9,class=CODE,space=0,reloc=2,group=0
  4648                           	file	"AMG88xx.c"
  4649                           	line	49
  4650                           global __ptext9
  4651                           __ptext9:
  4652  0023A6                     psect	text9
  4653                           	file	"AMG88xx.c"
  4654                           	line	49
  4655                           	global	__size_of_i2c_receive_data
  4656                           	__size_of_i2c_receive_data	equ	__end_of_i2c_receive_data-_i2c_receive_data
  4657  0000                     	
  4658                           _i2c_receive_data:
  4659  0023A6                     ;incstack = 0
  4660                           	opt	stack 27
  4661                           ;i2c_receive_data@address stored from wreg
  4662                           	movwf	((c:i2c_receive_data@address)),c
  4663  0023A6  6E08               	line	50
  4664                           	
  4665                           l2039:
  4666  0023A8                     ;AMG88xx.c: 50: i2c_send_request(address, reg);
  4667                           	movff	(c:i2c_receive_data@reg),(c:i2c_send_request@reg)
  4668  0023A8  C004  F002         	movf	((c:i2c_receive_data@address)),c,w
  4669  0023AC  5008               	
  4670                           	call	_i2c_send_request
  4671  0023AE  ECEB  F00F         	line	51
  4672                           ;AMG88xx.c: 51: i2c_master_wait();
  4673                           	call	_i2c_master_wait	;wreg free
  4674  0023B2  EC71  F010         	line	52
  4675                           	
  4676                           l2041:
  4677  0023B6                     ;AMG88xx.c: 52: SSP1CON2 = 0b00000001;
  4678                           	movlw	low(01h)
  4679  0023B6  0E01               	movwf	((c:4037)),c	;volatile
  4680  0023B8  6EC5               	line	55
  4681                           ;AMG88xx.c: 55: while(SSP1CON2 & 0b00000001);
  4682                           	goto	l286
  4683  0023BA  EFDF  F011         	
  4684                           l287:
  4685  0023BE                     	
  4686                           l286:
  4687  0023BE                     	
  4688                           	btfsc	((c:4037)),c,(0)&7	;volatile
  4689  0023BE  B0C5               	goto	u1381
  4690  0023C0  EFE4  F011         	goto	u1380
  4691  0023C4  EFE6  F011         u1381:
  4692  0023C8                     	goto	l286
  4693  0023C8  EFDF  F011         u1380:
  4694  0023CC                     	
  4695                           l288:
  4696  0023CC                     	line	56
  4697                           ;AMG88xx.c: 56: SSP1BUF = address;
  4698                           	movff	(c:i2c_receive_data@address),(c:4041)	;volatile
  4699  0023CC  C008  FFC9         	line	57
  4700                           	
  4701                           l2043:
  4702  0023D0                     ;AMG88xx.c: 57: i2c_master_wait();
  4703                           	call	_i2c_master_wait	;wreg free
  4704  0023D0  EC71  F010         	line	59
  4705                           	
  4706                           l2045:
  4707  0023D4                     ;AMG88xx.c: 59: RCEN = 1;
  4708                           	bsf	c:(32299/8),(32299)&7	;volatile
  4709  0023D4  86C5               	line	60
  4710                           ;AMG88xx.c: 60: while(!SSP1STAT & 0b00000001);
  4711                           	goto	l2047
  4712  0023D6  EFEF  F011         	
  4713                           l290:
  4714  0023DA                     	goto	l2047
  4715  0023DA  EFEF  F011         	
  4716                           l289:
  4717  0023DE                     	
  4718                           l2047:
  4719  0023DE                     	movf	((c:4039)),c,w	;volatile
  4720  0023DE  50C7               	btfsc	status,2
  4721  0023E0  B4D8               	goto	u1391
  4722  0023E2  EFF5  F011         	goto	u1390
  4723  0023E6  EFF8  F011         u1391:
  4724  0023EA                     	movlw	1
  4725  0023EA  0E01               	goto	u1400
  4726  0023EC  EFF9  F011         u1390:
  4727  0023F0                     	movlw	0
  4728  0023F0  0E00               u1400:
  4729  0023F2                     	movwf	(??_i2c_receive_data+0+0)&0ffh,c
  4730  0023F2  6E05               	clrf	(??_i2c_receive_data+0+0+1)&0ffh,c
  4731  0023F4  6A06               	
  4732                           	btfsc	(??_i2c_receive_data+0+0),c,(0)&7
  4733  0023F6  B005               	goto	u1411
  4734  0023F8  EF00  F012         	goto	u1410
  4735  0023FC  EF02  F012         u1411:
  4736  002400                     	goto	l2047
  4737  002400  EFEF  F011         u1410:
  4738  002404                     	goto	l2049
  4739  002404  EF04  F012         	
  4740                           l291:
  4741  002408                     	line	63
  4742                           	
  4743                           l2049:
  4744  002408                     ;AMG88xx.c: 63: SSP1CON2 = 0b00010000;
  4745                           	movlw	low(010h)
  4746  002408  0E10               	movwf	((c:4037)),c	;volatile
  4747  00240A  6EC5               	line	65
  4748                           	
  4749                           l2051:
  4750  00240C                     ;AMG88xx.c: 65: i2c_master_wait();
  4751                           	call	_i2c_master_wait	;wreg free
  4752  00240C  EC71  F010         	line	66
  4753                           	
  4754                           l2053:
  4755  002410                     ;AMG88xx.c: 66: SSP1CON2 = 0b00000100;
  4756                           	movlw	low(04h)
  4757  002410  0E04               	movwf	((c:4037)),c	;volatile
  4758  002412  6EC5               	line	68
  4759                           	
  4760                           l2055:
  4761  002414                     ;AMG88xx.c: 68: unsigned char data = SSP1BUF;
  4762                           	movff	(c:4041),(c:i2c_receive_data@data)	;volatile
  4763  002414  CFC9 F007          	line	70
  4764                           	
  4765                           l2057:
  4766  002418                     ;AMG88xx.c: 70: return data;
  4767                           	movf	((c:i2c_receive_data@data)),c,w
  4768  002418  5007               	goto	l292
  4769  00241A  EF0F  F012         	
  4770                           l2059:
  4771  00241E                     	line	71
  4772                           	
  4773                           l292:
  4774  00241E                     	return	;funcret
  4775  00241E  0012               	opt stack 0
  4776                           GLOBAL	__end_of_i2c_receive_data
  4777                           	__end_of_i2c_receive_data:
  4778  002420                     	signat	_i2c_receive_data,8313
  4779                           	global	_i2c_send_request
  4780                           
  4781 ;; *************** function _i2c_send_request *****************
  4782 ;; Defined at:
  4783 ;;		line 37 in file "AMG88xx.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  address         1    wreg     unsigned char 
  4786 ;;  reg             1    1[COMRAM] unsigned char 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  address         1    2[COMRAM] unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  4798 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4802 ;;Total ram usage:        2 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    1
  4805 ;; This function calls:
  4806 ;;		_i2c_master_wait
  4807 ;; This function is called by:
  4808 ;;		_i2c_receive_data
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           psect	text10,class=CODE,space=0,reloc=2,group=0
  4812                           	line	37
  4813                           global __ptext10
  4814                           __ptext10:
  4815  001FD6                     psect	text10
  4816                           	file	"AMG88xx.c"
  4817                           	line	37
  4818                           	global	__size_of_i2c_send_request
  4819                           	__size_of_i2c_send_request	equ	__end_of_i2c_send_request-_i2c_send_request
  4820  0000                     	
  4821                           _i2c_send_request:
  4822  001FD6                     ;incstack = 0
  4823                           	opt	stack 27
  4824                           ;i2c_send_request@address stored from wreg
  4825                           	movwf	((c:i2c_send_request@address)),c
  4826  001FD6  6E03               	line	38
  4827                           	
  4828                           l1927:
  4829  001FD8                     ;AMG88xx.c: 38: i2c_master_wait();
  4830                           	call	_i2c_master_wait	;wreg free
  4831  001FD8  EC71  F010         	line	39
  4832                           	
  4833                           l1929:
  4834  001FDC                     ;AMG88xx.c: 39: SSP1CON2 = 0b00000001;
  4835                           	movlw	low(01h)
  4836  001FDC  0E01               	movwf	((c:4037)),c	;volatile
  4837  001FDE  6EC5               	line	40
  4838                           	
  4839                           l1931:
  4840  001FE0                     ;AMG88xx.c: 40: i2c_master_wait();
  4841                           	call	_i2c_master_wait	;wreg free
  4842  001FE0  EC71  F010         	line	41
  4843                           	
  4844                           l1933:
  4845  001FE4                     ;AMG88xx.c: 41: SSP1BUF = address & 0b11111110;
  4846                           	movf	((c:i2c_send_request@address)),c,w
  4847  001FE4  5003               	andlw	low(0FEh)
  4848  001FE6  0BFE               	movwf	((c:4041)),c	;volatile
  4849  001FE8  6EC9               	line	42
  4850                           	
  4851                           l1935:
  4852  001FEA                     ;AMG88xx.c: 42: i2c_master_wait();
  4853                           	call	_i2c_master_wait	;wreg free
  4854  001FEA  EC71  F010         	line	43
  4855                           	
  4856                           l1937:
  4857  001FEE                     ;AMG88xx.c: 43: SSP1BUF = reg;
  4858                           	movff	(c:i2c_send_request@reg),(c:4041)	;volatile
  4859  001FEE  C002  FFC9         	line	44
  4860                           	
  4861                           l283:
  4862  001FF2                     	return	;funcret
  4863  001FF2  0012               	opt stack 0
  4864                           GLOBAL	__end_of_i2c_send_request
  4865                           	__end_of_i2c_send_request:
  4866  001FF4                     	signat	_i2c_send_request,8313
  4867                           	global	_drawBuffersToDisplay
  4868                           
  4869 ;; *************** function _drawBuffersToDisplay *****************
  4870 ;; Defined at:
  4871 ;;		line 306 in file "main.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  main_buffer     2    0[BANK0 ] PTR int 
  4874 ;;		 -> ir_buffer(128), 
  4875 ;;  horizontal_b    2    2[BANK0 ] PTR int 
  4876 ;;		 -> y_interpolated_pixels(128), 
  4877 ;;  vertical_buf    2    4[BANK0 ] PTR int 
  4878 ;;		 -> x_interpolated_pixels(128), 
  4879 ;;  diagonal_buf    2    6[BANK0 ] PTR int 
  4880 ;;		 -> xy_interpolated_pixels(128), 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  v               2   20[BANK0 ] int 
  4883 ;;  h               2   18[BANK0 ] int 
  4884 ;;  data            2   16[BANK0 ] int 
  4885 ;;  d_pixel         2   12[BANK0 ] int 
  4886 ;;  v_pixel         2   10[BANK0 ] int 
  4887 ;;  h_pixel         2    8[BANK0 ] int 
  4888 ;;  y               2   24[BANK0 ] int 
  4889 ;;  x               2   22[BANK0 ] int 
  4890 ;;  temperature_    2   14[BANK0 ] int 
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      void 
  4893 ;; Registers used:
  4894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  4900 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4901 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4902 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4903 ;;      Totals:         4      26       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  4904 ;;Total ram usage:       30 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; Hardware stack levels required when called:    7
  4907 ;; This function calls:
  4908 ;;		___wmul
  4909 ;;		_dataToColour
  4910 ;;		_drawOverlay
  4911 ;;		_fill_rectangle
  4912 ;; This function is called by:
  4913 ;;		_main
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           psect	text11,class=CODE,space=0,reloc=2,group=0
  4917                           	file	"main.c"
  4918                           	line	306
  4919                           global __ptext11
  4920                           __ptext11:
  4921  0037A2                     psect	text11
  4922                           	file	"main.c"
  4923                           	line	306
  4924                           	global	__size_of_drawBuffersToDisplay
  4925                           	__size_of_drawBuffersToDisplay	equ	__end_of_drawBuffersToDisplay-_drawBuffersToDisplay

  4926  0000                     	
  4927                           _drawBuffersToDisplay:
  4928  0037A2                     ;incstack = 0
  4929                           	opt	stack 23
  4930                           	line	308
  4931                           	
  4932                           l2125:
  4933  0037A2                     ;main.c: 308: int temperature_range = (int)((max_pixel.temperature - min_pixel.temperatu
                                 re) / 1)+min_pixel.temperature;
  4934                           	lfsr	2,(_min_pixel)+04h
  4935  0037A2  EE20  F07E         	movff	postinc2,??_drawBuffersToDisplay+0+0
  4936  0037A6  CFDE F05B          	movff	postdec2,??_drawBuffersToDisplay+0+0+1
  4937  0037AA  CFDD F05C          	comf	(??_drawBuffersToDisplay+0+0),c
  4938  0037AE  1E5B               	comf	(??_drawBuffersToDisplay+0+1),c
  4939  0037B0  1E5C               	infsnz	(??_drawBuffersToDisplay+0+0),c
  4940  0037B2  4A5B               	incf	(??_drawBuffersToDisplay+0+1),c
  4941  0037B4  2A5C               	movlb	0	; () banked
  4942  0037B6  0100               	movf	(0+(_max_pixel+04h))&0ffh,w
  4943  0037B8  5184               	addwf	(??_drawBuffersToDisplay+0+0),c
  4944  0037BA  265B               	movf	(1+(_max_pixel+04h))&0ffh,w
  4945  0037BC  5185               	addwfc	(??_drawBuffersToDisplay+0+1),c
  4946  0037BE  225C               	movf	(0+(_min_pixel+04h))&0ffh,w
  4947  0037C0  517E               	addwf	(??_drawBuffersToDisplay+0+0),c,w
  4948  0037C2  245B               	movwf	((drawBuffersToDisplay@temperature_range))&0ffh
  4949  0037C4  6F6E               	movf	(1+(_min_pixel+04h))&0ffh,w
  4950  0037C6  517F               	addwfc	(??_drawBuffersToDisplay+0+1),c,w
  4951  0037C8  205C               	movwf	1+((drawBuffersToDisplay@temperature_range))&0ffh
  4952  0037CA  6F6F               	line	311
  4953                           	
  4954                           l2127:; BSR set to: 0
  4955  0037CC                     
  4956                           ;main.c: 311: max_pixel.temperature = 0;
  4957                           	movlw	high(0)
  4958  0037CC  0E00               	movwf	(1+(_max_pixel+04h))&0ffh
  4959  0037CE  6F85               	movlw	low(0)
  4960  0037D0  0E00               	movwf	(0+(_max_pixel+04h))&0ffh
  4961  0037D2  6F84               	line	312
  4962                           	
  4963                           l2129:; BSR set to: 0
  4964  0037D4                     
  4965                           ;main.c: 312: min_pixel.temperature = 0x7FF;
  4966                           	movlw	high(07FFh)
  4967  0037D4  0E07               	movwf	(1+(_min_pixel+04h))&0ffh
  4968  0037D6  6F7F               	setf	(0+(_min_pixel+04h))&0ffh
  4969  0037D8  697E               	line	315
  4970                           	
  4971                           l2131:; BSR set to: 0
  4972  0037DA                     
  4973                           ;main.c: 315: for(int x = 0; x < 8; x++) {
  4974                           	movlw	high(0)
  4975  0037DA  0E00               	movwf	((drawBuffersToDisplay@x+1))&0ffh
  4976  0037DC  6F77               	movlw	low(0)
  4977  0037DE  0E00               	movwf	((drawBuffersToDisplay@x))&0ffh
  4978  0037E0  6F76               	
  4979                           l2133:; BSR set to: 0
  4980  0037E2                     
  4981                           	btfsc	((drawBuffersToDisplay@x+1))&0ffh,7
  4982  0037E2  BF77               	goto	u1461
  4983  0037E4  EFFD  F01B         	movf	((drawBuffersToDisplay@x+1))&0ffh,w
  4984  0037E8  5177               	bnz	u1460
  4985  0037EA  E109               	movlw	8
  4986  0037EC  0E08               	subwf	 ((drawBuffersToDisplay@x))&0ffh,w
  4987  0037EE  5D76               	btfss	status,0
  4988  0037F0  A0D8               	goto	u1461
  4989  0037F2  EFFD  F01B         	goto	u1460
  4990  0037F6  EFFF  F01B         
  4991                           u1461:
  4992  0037FA                     	goto	l2137
  4993  0037FA  EF03  F01C         u1460:
  4994  0037FE                     	goto	l2173
  4995  0037FE  EFF2  F01E         	
  4996                           l2135:; BSR set to: 0
  4997  003802                     
  4998                           	goto	l2173
  4999  003802  EFF2  F01E         	
  5000                           l138:; BSR set to: 0
  5001  003806                     
  5002                           	line	316
  5003                           	
  5004                           l2137:; BSR set to: 0
  5005  003806                     
  5006                           ;main.c: 316: for(int y = 0; y < 8; y++) {
  5007                           	movlw	high(0)
  5008  003806  0E00               	movwf	((drawBuffersToDisplay@y+1))&0ffh
  5009  003808  6F79               	movlw	low(0)
  5010  00380A  0E00               	movwf	((drawBuffersToDisplay@y))&0ffh
  5011  00380C  6F78               	
  5012                           l2139:; BSR set to: 0
  5013  00380E                     
  5014                           	btfsc	((drawBuffersToDisplay@y+1))&0ffh,7
  5015  00380E  BF79               	goto	u1471
  5016  003810  EF13  F01C         	movf	((drawBuffersToDisplay@y+1))&0ffh,w
  5017  003814  5179               	bnz	u1470
  5018  003816  E109               	movlw	8
  5019  003818  0E08               	subwf	 ((drawBuffersToDisplay@y))&0ffh,w
  5020  00381A  5D78               	btfss	status,0
  5021  00381C  A0D8               	goto	u1471
  5022  00381E  EF13  F01C         	goto	u1470
  5023  003822  EF15  F01C         
  5024                           u1471:
  5025  003826                     	goto	l2143
  5026  003826  EF19  F01C         u1470:
  5027  00382A                     	goto	l2169
  5028  00382A  EFE0  F01E         	
  5029                           l2141:; BSR set to: 0
  5030  00382E                     
  5031                           	goto	l2169
  5032  00382E  EFE0  F01E         	
  5033                           l140:; BSR set to: 0
  5034  003832                     
  5035                           	line	317
  5036                           	
  5037                           l2143:; BSR set to: 0
  5038  003832                     
  5039                           ;main.c: 317: int data = main_buffer[((int)(x)*8)+y];
  5040                           	movff	(drawBuffersToDisplay@x),??_drawBuffersToDisplay+0+0
  5041  003832  C076  F05B         	movff	(drawBuffersToDisplay@x+1),??_drawBuffersToDisplay+0+0+1
  5042  003836  C077  F05C         	bcf	status,0
  5043  00383A  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c
  5044  00383C  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c
  5045  00383E  365C               	bcf	status,0
  5046  003840  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c
  5047  003842  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c
  5048  003844  365C               	bcf	status,0
  5049  003846  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c
  5050  003848  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c
  5051  00384A  365C               	movf	((drawBuffersToDisplay@y))&0ffh,w
  5052  00384C  5178               	addwf	(??_drawBuffersToDisplay+0+0),c
  5053  00384E  265B               	movf	((drawBuffersToDisplay@y+1))&0ffh,w
  5054  003850  5179               	addwfc	(??_drawBuffersToDisplay+0+1),c
  5055  003852  225C               	bcf	status,0
  5056  003854  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c,f
  5057  003856  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c,f
  5058  003858  365C               	movf	(??_drawBuffersToDisplay+0+0),c,w
  5059  00385A  505B               	addwf	((drawBuffersToDisplay@main_buffer))&0ffh,w
  5060  00385C  2560               	movwf	c:fsr2l
  5061  00385E  6ED9               	movf	(??_drawBuffersToDisplay+0+1),c,w
  5062  003860  505C               	addwfc	((drawBuffersToDisplay@main_buffer+1))&0ffh,w
  5063  003862  2161               	movwf	1+c:fsr2l
  5064  003864  6EDA               	movff	postinc2,(drawBuffersToDisplay@data)
  5065  003866  CFDE F070          	movff	postdec2,(drawBuffersToDisplay@data+1)
  5066  00386A  CFDD F071          	line	318
  5067                           ;main.c: 318: int h_pixel = horizontal_buffer[((int)(x)*8)+y];
  5068                           	movff	(drawBuffersToDisplay@x),??_drawBuffersToDisplay+0+0
  5069  00386E  C076  F05B         	movff	(drawBuffersToDisplay@x+1),??_drawBuffersToDisplay+0+0+1
  5070  003872  C077  F05C         	bcf	status,0
  5071  003876  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c
  5072  003878  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c
  5073  00387A  365C               	bcf	status,0
  5074  00387C  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c
  5075  00387E  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c
  5076  003880  365C               	bcf	status,0
  5077  003882  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c
  5078  003884  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c
  5079  003886  365C               	movf	((drawBuffersToDisplay@y))&0ffh,w
  5080  003888  5178               	addwf	(??_drawBuffersToDisplay+0+0),c
  5081  00388A  265B               	movf	((drawBuffersToDisplay@y+1))&0ffh,w
  5082  00388C  5179               	addwfc	(??_drawBuffersToDisplay+0+1),c
  5083  00388E  225C               	bcf	status,0
  5084  003890  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c,f
  5085  003892  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c,f
  5086  003894  365C               	movf	(??_drawBuffersToDisplay+0+0),c,w
  5087  003896  505B               	addwf	((drawBuffersToDisplay@horizontal_buffer))&0ffh,w
  5088  003898  2562               	movwf	c:fsr2l
  5089  00389A  6ED9               	movf	(??_drawBuffersToDisplay+0+1),c,w
  5090  00389C  505C               	addwfc	((drawBuffersToDisplay@horizontal_buffer+1))&0ffh,w
  5091  00389E  2163               	movwf	1+c:fsr2l
  5092  0038A0  6EDA               	movff	postinc2,(drawBuffersToDisplay@h_pixel)
  5093  0038A2  CFDE F068          	movff	postdec2,(drawBuffersToDisplay@h_pixel+1)
  5094  0038A6  CFDD F069          	line	319
  5095                           ;main.c: 319: int v_pixel = vertical_buffer[((int)(x)*8)+y];
  5096                           	movff	(drawBuffersToDisplay@x),??_drawBuffersToDisplay+0+0
  5097  0038AA  C076  F05B         	movff	(drawBuffersToDisplay@x+1),??_drawBuffersToDisplay+0+0+1
  5098  0038AE  C077  F05C         	bcf	status,0
  5099  0038B2  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c
  5100  0038B4  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c
  5101  0038B6  365C               	bcf	status,0
  5102  0038B8  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c
  5103  0038BA  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c
  5104  0038BC  365C               	bcf	status,0
  5105  0038BE  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c
  5106  0038C0  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c
  5107  0038C2  365C               	movf	((drawBuffersToDisplay@y))&0ffh,w
  5108  0038C4  5178               	addwf	(??_drawBuffersToDisplay+0+0),c
  5109  0038C6  265B               	movf	((drawBuffersToDisplay@y+1))&0ffh,w
  5110  0038C8  5179               	addwfc	(??_drawBuffersToDisplay+0+1),c
  5111  0038CA  225C               	bcf	status,0
  5112  0038CC  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c,f
  5113  0038CE  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c,f
  5114  0038D0  365C               	movf	(??_drawBuffersToDisplay+0+0),c,w
  5115  0038D2  505B               	addwf	((drawBuffersToDisplay@vertical_buffer))&0ffh,w
  5116  0038D4  2564               	movwf	c:fsr2l
  5117  0038D6  6ED9               	movf	(??_drawBuffersToDisplay+0+1),c,w
  5118  0038D8  505C               	addwfc	((drawBuffersToDisplay@vertical_buffer+1))&0ffh,w
  5119  0038DA  2165               	movwf	1+c:fsr2l
  5120  0038DC  6EDA               	movff	postinc2,(drawBuffersToDisplay@v_pixel)
  5121  0038DE  CFDE F06A          	movff	postdec2,(drawBuffersToDisplay@v_pixel+1)
  5122  0038E2  CFDD F06B          	line	320
  5123                           ;main.c: 320: int d_pixel = diagonal_buffer[((int)(x)*8)+y];
  5124                           	movff	(drawBuffersToDisplay@x),??_drawBuffersToDisplay+0+0
  5125  0038E6  C076  F05B         	movff	(drawBuffersToDisplay@x+1),??_drawBuffersToDisplay+0+0+1
  5126  0038EA  C077  F05C         	bcf	status,0
  5127  0038EE  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c
  5128  0038F0  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c
  5129  0038F2  365C               	bcf	status,0
  5130  0038F4  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c
  5131  0038F6  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c
  5132  0038F8  365C               	bcf	status,0
  5133  0038FA  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c
  5134  0038FC  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c
  5135  0038FE  365C               	movf	((drawBuffersToDisplay@y))&0ffh,w
  5136  003900  5178               	addwf	(??_drawBuffersToDisplay+0+0),c
  5137  003902  265B               	movf	((drawBuffersToDisplay@y+1))&0ffh,w
  5138  003904  5179               	addwfc	(??_drawBuffersToDisplay+0+1),c
  5139  003906  225C               	bcf	status,0
  5140  003908  90D8               	rlcf	(??_drawBuffersToDisplay+0+0),c,f
  5141  00390A  365B               	rlcf	(??_drawBuffersToDisplay+0+1),c,f
  5142  00390C  365C               	movf	(??_drawBuffersToDisplay+0+0),c,w
  5143  00390E  505B               	addwf	((drawBuffersToDisplay@diagonal_buffer))&0ffh,w
  5144  003910  2566               	movwf	c:fsr2l
  5145  003912  6ED9               	movf	(??_drawBuffersToDisplay+0+1),c,w
  5146  003914  505C               	addwfc	((drawBuffersToDisplay@diagonal_buffer+1))&0ffh,w
  5147  003916  2167               	movwf	1+c:fsr2l
  5148  003918  6EDA               	movff	postinc2,(drawBuffersToDisplay@d_pixel)
  5149  00391A  CFDE F06C          	movff	postdec2,(drawBuffersToDisplay@d_pixel+1)
  5150  00391E  CFDD F06D          	line	323
  5151                           	
  5152                           l2145:; BSR set to: 0
  5153  003922                     
  5154                           ;main.c: 323: int h = x * 2;
  5155                           	bcf	status,0
  5156  003922  90D8               	rlcf	((drawBuffersToDisplay@x))&0ffh,w
  5157  003924  3576               	movwf	((drawBuffersToDisplay@h))&0ffh
  5158  003926  6F72               	rlcf	((drawBuffersToDisplay@x+1))&0ffh,w
  5159  003928  3577               	movwf	1+((drawBuffersToDisplay@h))&0ffh
  5160  00392A  6F73               	line	324
  5161                           	
  5162                           l2147:; BSR set to: 0
  5163  00392C                     
  5164                           ;main.c: 324: int v = y * 2;
  5165                           	bcf	status,0
  5166  00392C  90D8               	rlcf	((drawBuffersToDisplay@y))&0ffh,w
  5167  00392E  3578               	movwf	((drawBuffersToDisplay@v))&0ffh
  5168  003930  6F74               	rlcf	((drawBuffersToDisplay@y+1))&0ffh,w
  5169  003932  3579               	movwf	1+((drawBuffersToDisplay@v))&0ffh
  5170  003934  6F75               	line	325
  5171                           	
  5172                           l2149:; BSR set to: 0
  5173  003936                     
  5174                           ;main.c: 325: fill_rectangle((h*box_size), (v*box_size), (h*box_size) + box_size, (v*box
                                 _size) + box_size, dataToColour(data, temperature_range));
  5175                           	movff	(drawBuffersToDisplay@h),(c:___wmul@multiplier)
  5176  003936  C072  F001         	movff	(drawBuffersToDisplay@h+1),(c:___wmul@multiplier+1)
  5177  00393A  C073  F002         	movlw	low((_box_size))
  5178  00393E  0EEE               	movwf	tblptrl
  5179  003940  6EF6               	if	1	;There is more than 1 active tblptr byte
  5180  003942                     	movlw	high((_box_size))
  5181  003942  0E3F               	movwf	tblptrh
  5182  003944  6EF7               	endif
  5183  003946                     	if	0	;There are less than 3 active tblptr bytes
  5184  003946                     	movlw	low highword((_box_size))
  5187  003946                     	tblrd*+
  5188  003946  0009               	
  5189                           	movff	tablat,(c:___wmul@multiplicand)
  5190  003948  CFF5 F003          	tblrd*-
  5191  00394C  000A               	
  5192                           	movff	tablat,(c:___wmul@multiplicand+1)
  5193  00394E  CFF5 F004          
  5194                           	call	___wmul	;wreg free
  5195  003952  EC46  F010         	movff	0+?___wmul,(c:fill_rectangle@x1)
  5196  003956  C001  F017         	movff	1+?___wmul,(c:fill_rectangle@x1+1)
  5197  00395A  C002  F018         	movff	(drawBuffersToDisplay@v),(c:___wmul@multiplier)
  5198  00395E  C074  F001         	movff	(drawBuffersToDisplay@v+1),(c:___wmul@multiplier+1)
  5199  003962  C075  F002         	movlw	low((_box_size))
  5200  003966  0EEE               	movwf	tblptrl
  5201  003968  6EF6               	if	1	;There is more than 1 active tblptr byte
  5202  00396A                     	movlw	high((_box_size))
  5203  00396A  0E3F               	movwf	tblptrh
  5204  00396C  6EF7               	endif
  5205  00396E                     	if	0	;There are less than 3 active tblptr bytes
  5206  00396E                     	movlw	low highword((_box_size))
  5209  00396E                     	tblrd*+
  5210  00396E  0009               	
  5211                           	movff	tablat,(c:___wmul@multiplicand)
  5212  003970  CFF5 F003          	tblrd*-
  5213  003974  000A               	
  5214                           	movff	tablat,(c:___wmul@multiplicand+1)
  5215  003976  CFF5 F004          
  5216                           	call	___wmul	;wreg free
  5217  00397A  EC46  F010         	movff	0+?___wmul,(c:fill_rectangle@y1)
  5218  00397E  C001  F019         	movff	1+?___wmul,(c:fill_rectangle@y1+1)
  5219  003982  C002  F01A         	movlw	low((_box_size))
  5220  003986  0EEE               	movwf	tblptrl
  5221  003988  6EF6               	if	1	;There is more than 1 active tblptr byte
  5222  00398A                     	movlw	high((_box_size))
  5223  00398A  0E3F               	movwf	tblptrh
  5224  00398C  6EF7               	endif
  5225  00398E                     	if	0	;There are less than 3 active tblptr bytes
  5226  00398E                     	movlw	low highword((_box_size))
  5229  00398E                     	tblrd	*+
  5230  00398E  0009               	
  5231                           	movff	tablat,??_drawBuffersToDisplay+0+0
  5232  003990  CFF5 F05B          	tblrd	*+
  5233  003994  0009               	
  5234                           	movff	tablat,??_drawBuffersToDisplay+0+0+1
  5235  003996  CFF5 F05C          	movff	(drawBuffersToDisplay@h),(c:___wmul@multiplier)
  5236  00399A  C072  F001         	movff	(drawBuffersToDisplay@h+1),(c:___wmul@multiplier+1)
  5237  00399E  C073  F002         	movlw	low((_box_size))
  5238  0039A2  0EEE               	movwf	tblptrl
  5239  0039A4  6EF6               	if	1	;There is more than 1 active tblptr byte
  5240  0039A6                     	movlw	high((_box_size))
  5241  0039A6  0E3F               	movwf	tblptrh
  5242  0039A8  6EF7               	endif
  5243  0039AA                     	if	0	;There are less than 3 active tblptr bytes
  5244  0039AA                     	movlw	low highword((_box_size))
  5247  0039AA                     	tblrd*+
  5248  0039AA  0009               	
  5249                           	movff	tablat,(c:___wmul@multiplicand)
  5250  0039AC  CFF5 F003          	tblrd*-
  5251  0039B0  000A               	
  5252                           	movff	tablat,(c:___wmul@multiplicand+1)
  5253  0039B2  CFF5 F004          
  5254                           	call	___wmul	;wreg free
  5255  0039B6  EC46  F010         	movf	(??_drawBuffersToDisplay+0+0),c,w
  5256  0039BA  505B               	addwf	(0+?___wmul),c,w
  5257  0039BC  2401               	movwf	((c:fill_rectangle@x2)),c
  5258  0039BE  6E1B               	movf	(??_drawBuffersToDisplay+0+1),c,w
  5259  0039C0  505C               	addwfc	(1+?___wmul),c,w
  5260  0039C2  2002               	movwf	1+((c:fill_rectangle@x2)),c
  5261  0039C4  6E1C               	movlw	low((_box_size))
  5262  0039C6  0EEE               	movwf	tblptrl
  5263  0039C8  6EF6               	if	1	;There is more than 1 active tblptr byte
  5264  0039CA                     	movlw	high((_box_size))
  5265  0039CA  0E3F               	movwf	tblptrh
  5266  0039CC  6EF7               	endif
  5267  0039CE                     	if	0	;There are less than 3 active tblptr bytes
  5268  0039CE                     	movlw	low highword((_box_size))
  5271  0039CE                     	tblrd	*+
  5272  0039CE  0009               	
  5273                           	movff	tablat,??_drawBuffersToDisplay+2+0
  5274  0039D0  CFF5 F05D          	tblrd	*+
  5275  0039D4  0009               	
  5276                           	movff	tablat,??_drawBuffersToDisplay+2+0+1
  5277  0039D6  CFF5 F05E          	movff	(drawBuffersToDisplay@v),(c:___wmul@multiplier)
  5278  0039DA  C074  F001         	movff	(drawBuffersToDisplay@v+1),(c:___wmul@multiplier+1)
  5279  0039DE  C075  F002         	movlw	low((_box_size))
  5280  0039E2  0EEE               	movwf	tblptrl
  5281  0039E4  6EF6               	if	1	;There is more than 1 active tblptr byte
  5282  0039E6                     	movlw	high((_box_size))
  5283  0039E6  0E3F               	movwf	tblptrh
  5284  0039E8  6EF7               	endif
  5285  0039EA                     	if	0	;There are less than 3 active tblptr bytes
  5286  0039EA                     	movlw	low highword((_box_size))
  5289  0039EA                     	tblrd*+
  5290  0039EA  0009               	
  5291                           	movff	tablat,(c:___wmul@multiplicand)
  5292  0039EC  CFF5 F003          	tblrd*-
  5293  0039F0  000A               	
  5294                           	movff	tablat,(c:___wmul@multiplicand+1)
  5295  0039F2  CFF5 F004          
  5296                           	call	___wmul	;wreg free
  5297  0039F6  EC46  F010         	movf	(??_drawBuffersToDisplay+2+0),c,w
  5298  0039FA  505D               	addwf	(0+?___wmul),c,w
  5299  0039FC  2401               	movwf	((c:fill_rectangle@y2)),c
  5300  0039FE  6E1D               	movf	(??_drawBuffersToDisplay+2+1),c,w
  5301  003A00  505E               	addwfc	(1+?___wmul),c,w
  5302  003A02  2002               	movwf	1+((c:fill_rectangle@y2)),c
  5303  003A04  6E1E               	movff	(drawBuffersToDisplay@data),(c:dataToColour@data)
  5304  003A06  C070  F00C         	movff	(drawBuffersToDisplay@data+1),(c:dataToColour@data+1)
  5305  003A0A  C071  F00D         	movff	(drawBuffersToDisplay@temperature_range),(c:dataToColour@temperature_range)
  5306  003A0E  C06E  F00E         	movff	(drawBuffersToDisplay@temperature_range+1),(c:dataToColour@temperature_range+1)
  5307  003A12  C06F  F00F         	call	_dataToColour	;wreg free
  5308  003A16  ECED  F012         	movff	0+?_dataToColour,(c:fill_rectangle@colour)
  5309  003A1A  C00C  F01F         	movff	1+?_dataToColour,(c:fill_rectangle@colour+1)
  5310  003A1E  C00D  F020         	call	_fill_rectangle	;wreg free
  5311  003A22  ECBB  F013         	line	327
  5312                           	
  5313                           l2151:
  5314  003A26                     ;main.c: 327: fill_rectangle(((h+1)*box_size), (v*box_size), ((h+1)*box_size) + box_size
                                 , (v*box_size) + box_size, dataToColour(h_pixel, temperature_range));
  5315                           	movlw	low(01h)
  5316  003A26  0E01               	movlb	0	; () banked
  5317  003A28  0100               	addwf	((drawBuffersToDisplay@h))&0ffh,w
  5318  003A2A  2572               	movwf	((c:___wmul@multiplier)),c
  5319  003A2C  6E01               	movlw	high(01h)
  5320  003A2E  0E00               	addwfc	((drawBuffersToDisplay@h+1))&0ffh,w
  5321  003A30  2173               	movwf	1+((c:___wmul@multiplier)),c
  5322  003A32  6E02               	movlw	low((_box_size))
  5323  003A34  0EEE               	movwf	tblptrl
  5324  003A36  6EF6               	if	1	;There is more than 1 active tblptr byte
  5325  003A38                     	movlw	high((_box_size))
  5326  003A38  0E3F               	movwf	tblptrh
  5327  003A3A  6EF7               	endif
  5328  003A3C                     	if	0	;There are less than 3 active tblptr bytes
  5329  003A3C                     	movlw	low highword((_box_size))
  5332  003A3C                     	tblrd*+
  5333  003A3C  0009               	
  5334                           	movff	tablat,(c:___wmul@multiplicand)
  5335  003A3E  CFF5 F003          	tblrd*-
  5336  003A42  000A               	
  5337                           	movff	tablat,(c:___wmul@multiplicand+1)
  5338  003A44  CFF5 F004          
  5339                           	call	___wmul	;wreg free
  5340  003A48  EC46  F010         	movff	0+?___wmul,(c:fill_rectangle@x1)
  5341  003A4C  C001  F017         	movff	1+?___wmul,(c:fill_rectangle@x1+1)
  5342  003A50  C002  F018         	movff	(drawBuffersToDisplay@v),(c:___wmul@multiplier)
  5343  003A54  C074  F001         	movff	(drawBuffersToDisplay@v+1),(c:___wmul@multiplier+1)
  5344  003A58  C075  F002         	movlw	low((_box_size))
  5345  003A5C  0EEE               	movwf	tblptrl
  5346  003A5E  6EF6               	if	1	;There is more than 1 active tblptr byte
  5347  003A60                     	movlw	high((_box_size))
  5348  003A60  0E3F               	movwf	tblptrh
  5349  003A62  6EF7               	endif
  5350  003A64                     	if	0	;There are less than 3 active tblptr bytes
  5351  003A64                     	movlw	low highword((_box_size))
  5354  003A64                     	tblrd*+
  5355  003A64  0009               	
  5356                           	movff	tablat,(c:___wmul@multiplicand)
  5357  003A66  CFF5 F003          	tblrd*-
  5358  003A6A  000A               	
  5359                           	movff	tablat,(c:___wmul@multiplicand+1)
  5360  003A6C  CFF5 F004          
  5361                           	call	___wmul	;wreg free
  5362  003A70  EC46  F010         	movff	0+?___wmul,(c:fill_rectangle@y1)
  5363  003A74  C001  F019         	movff	1+?___wmul,(c:fill_rectangle@y1+1)
  5364  003A78  C002  F01A         	movlw	low((_box_size))
  5365  003A7C  0EEE               	movwf	tblptrl
  5366  003A7E  6EF6               	if	1	;There is more than 1 active tblptr byte
  5367  003A80                     	movlw	high((_box_size))
  5368  003A80  0E3F               	movwf	tblptrh
  5369  003A82  6EF7               	endif
  5370  003A84                     	if	0	;There are less than 3 active tblptr bytes
  5371  003A84                     	movlw	low highword((_box_size))
  5374  003A84                     	tblrd	*+
  5375  003A84  0009               	
  5376                           	movff	tablat,??_drawBuffersToDisplay+0+0
  5377  003A86  CFF5 F05B          	tblrd	*+
  5378  003A8A  0009               	
  5379                           	movff	tablat,??_drawBuffersToDisplay+0+0+1
  5380  003A8C  CFF5 F05C          	movlw	low(01h)
  5381  003A90  0E01               	movlb	0	; () banked
  5382  003A92  0100               	addwf	((drawBuffersToDisplay@h))&0ffh,w
  5383  003A94  2572               	movwf	((c:___wmul@multiplier)),c
  5384  003A96  6E01               	movlw	high(01h)
  5385  003A98  0E00               	addwfc	((drawBuffersToDisplay@h+1))&0ffh,w
  5386  003A9A  2173               	movwf	1+((c:___wmul@multiplier)),c
  5387  003A9C  6E02               	movlw	low((_box_size))
  5388  003A9E  0EEE               	movwf	tblptrl
  5389  003AA0  6EF6               	if	1	;There is more than 1 active tblptr byte
  5390  003AA2                     	movlw	high((_box_size))
  5391  003AA2  0E3F               	movwf	tblptrh
  5392  003AA4  6EF7               	endif
  5393  003AA6                     	if	0	;There are less than 3 active tblptr bytes
  5394  003AA6                     	movlw	low highword((_box_size))
  5397  003AA6                     	tblrd*+
  5398  003AA6  0009               	
  5399                           	movff	tablat,(c:___wmul@multiplicand)
  5400  003AA8  CFF5 F003          	tblrd*-
  5401  003AAC  000A               	
  5402                           	movff	tablat,(c:___wmul@multiplicand+1)
  5403  003AAE  CFF5 F004          
  5404                           	call	___wmul	;wreg free
  5405  003AB2  EC46  F010         	movf	(??_drawBuffersToDisplay+0+0),c,w
  5406  003AB6  505B               	addwf	(0+?___wmul),c,w
  5407  003AB8  2401               	movwf	((c:fill_rectangle@x2)),c
  5408  003ABA  6E1B               	movf	(??_drawBuffersToDisplay+0+1),c,w
  5409  003ABC  505C               	addwfc	(1+?___wmul),c,w
  5410  003ABE  2002               	movwf	1+((c:fill_rectangle@x2)),c
  5411  003AC0  6E1C               	movlw	low((_box_size))
  5412  003AC2  0EEE               	movwf	tblptrl
  5413  003AC4  6EF6               	if	1	;There is more than 1 active tblptr byte
  5414  003AC6                     	movlw	high((_box_size))
  5415  003AC6  0E3F               	movwf	tblptrh
  5416  003AC8  6EF7               	endif
  5417  003ACA                     	if	0	;There are less than 3 active tblptr bytes
  5418  003ACA                     	movlw	low highword((_box_size))
  5421  003ACA                     	tblrd	*+
  5422  003ACA  0009               	
  5423                           	movff	tablat,??_drawBuffersToDisplay+2+0
  5424  003ACC  CFF5 F05D          	tblrd	*+
  5425  003AD0  0009               	
  5426                           	movff	tablat,??_drawBuffersToDisplay+2+0+1
  5427  003AD2  CFF5 F05E          	movff	(drawBuffersToDisplay@v),(c:___wmul@multiplier)
  5428  003AD6  C074  F001         	movff	(drawBuffersToDisplay@v+1),(c:___wmul@multiplier+1)
  5429  003ADA  C075  F002         	movlw	low((_box_size))
  5430  003ADE  0EEE               	movwf	tblptrl
  5431  003AE0  6EF6               	if	1	;There is more than 1 active tblptr byte
  5432  003AE2                     	movlw	high((_box_size))
  5433  003AE2  0E3F               	movwf	tblptrh
  5434  003AE4  6EF7               	endif
  5435  003AE6                     	if	0	;There are less than 3 active tblptr bytes
  5436  003AE6                     	movlw	low highword((_box_size))
  5439  003AE6                     	tblrd*+
  5440  003AE6  0009               	
  5441                           	movff	tablat,(c:___wmul@multiplicand)
  5442  003AE8  CFF5 F003          	tblrd*-
  5443  003AEC  000A               	
  5444                           	movff	tablat,(c:___wmul@multiplicand+1)
  5445  003AEE  CFF5 F004          
  5446                           	call	___wmul	;wreg free
  5447  003AF2  EC46  F010         	movf	(??_drawBuffersToDisplay+2+0),c,w
  5448  003AF6  505D               	addwf	(0+?___wmul),c,w
  5449  003AF8  2401               	movwf	((c:fill_rectangle@y2)),c
  5450  003AFA  6E1D               	movf	(??_drawBuffersToDisplay+2+1),c,w
  5451  003AFC  505E               	addwfc	(1+?___wmul),c,w
  5452  003AFE  2002               	movwf	1+((c:fill_rectangle@y2)),c
  5453  003B00  6E1E               	movff	(drawBuffersToDisplay@h_pixel),(c:dataToColour@data)
  5454  003B02  C068  F00C         	movff	(drawBuffersToDisplay@h_pixel+1),(c:dataToColour@data+1)
  5455  003B06  C069  F00D         	movff	(drawBuffersToDisplay@temperature_range),(c:dataToColour@temperature_range)
  5456  003B0A  C06E  F00E         	movff	(drawBuffersToDisplay@temperature_range+1),(c:dataToColour@temperature_range+1)
  5457  003B0E  C06F  F00F         	call	_dataToColour	;wreg free
  5458  003B12  ECED  F012         	movff	0+?_dataToColour,(c:fill_rectangle@colour)
  5459  003B16  C00C  F01F         	movff	1+?_dataToColour,(c:fill_rectangle@colour+1)
  5460  003B1A  C00D  F020         	call	_fill_rectangle	;wreg free
  5461  003B1E  ECBB  F013         	line	328
  5462                           	
  5463                           l2153:
  5464  003B22                     ;main.c: 328: fill_rectangle((h*box_size), ((v+1)*box_size), (h*box_size) + box_size, ((
                                 v+1)*box_size) + box_size, dataToColour(v_pixel, temperature_range));
  5465                           	movff	(drawBuffersToDisplay@h),(c:___wmul@multiplier)
  5466  003B22  C072  F001         	movff	(drawBuffersToDisplay@h+1),(c:___wmul@multiplier+1)
  5467  003B26  C073  F002         	movlw	low((_box_size))
  5468  003B2A  0EEE               	movwf	tblptrl
  5469  003B2C  6EF6               	if	1	;There is more than 1 active tblptr byte
  5470  003B2E                     	movlw	high((_box_size))
  5471  003B2E  0E3F               	movwf	tblptrh
  5472  003B30  6EF7               	endif
  5473  003B32                     	if	0	;There are less than 3 active tblptr bytes
  5474  003B32                     	movlw	low highword((_box_size))
  5477  003B32                     	tblrd*+
  5478  003B32  0009               	
  5479                           	movff	tablat,(c:___wmul@multiplicand)
  5480  003B34  CFF5 F003          	tblrd*-
  5481  003B38  000A               	
  5482                           	movff	tablat,(c:___wmul@multiplicand+1)
  5483  003B3A  CFF5 F004          
  5484                           	call	___wmul	;wreg free
  5485  003B3E  EC46  F010         	movff	0+?___wmul,(c:fill_rectangle@x1)
  5486  003B42  C001  F017         	movff	1+?___wmul,(c:fill_rectangle@x1+1)
  5487  003B46  C002  F018         	movlw	low(01h)
  5488  003B4A  0E01               	movlb	0	; () banked
  5489  003B4C  0100               	addwf	((drawBuffersToDisplay@v))&0ffh,w
  5490  003B4E  2574               	movwf	((c:___wmul@multiplier)),c
  5491  003B50  6E01               	movlw	high(01h)
  5492  003B52  0E00               	addwfc	((drawBuffersToDisplay@v+1))&0ffh,w
  5493  003B54  2175               	movwf	1+((c:___wmul@multiplier)),c
  5494  003B56  6E02               	movlw	low((_box_size))
  5495  003B58  0EEE               	movwf	tblptrl
  5496  003B5A  6EF6               	if	1	;There is more than 1 active tblptr byte
  5497  003B5C                     	movlw	high((_box_size))
  5498  003B5C  0E3F               	movwf	tblptrh
  5499  003B5E  6EF7               	endif
  5500  003B60                     	if	0	;There are less than 3 active tblptr bytes
  5501  003B60                     	movlw	low highword((_box_size))
  5504  003B60                     	tblrd*+
  5505  003B60  0009               	
  5506                           	movff	tablat,(c:___wmul@multiplicand)
  5507  003B62  CFF5 F003          	tblrd*-
  5508  003B66  000A               	
  5509                           	movff	tablat,(c:___wmul@multiplicand+1)
  5510  003B68  CFF5 F004          
  5511                           	call	___wmul	;wreg free
  5512  003B6C  EC46  F010         	movff	0+?___wmul,(c:fill_rectangle@y1)
  5513  003B70  C001  F019         	movff	1+?___wmul,(c:fill_rectangle@y1+1)
  5514  003B74  C002  F01A         	movlw	low((_box_size))
  5515  003B78  0EEE               	movwf	tblptrl
  5516  003B7A  6EF6               	if	1	;There is more than 1 active tblptr byte
  5517  003B7C                     	movlw	high((_box_size))
  5518  003B7C  0E3F               	movwf	tblptrh
  5519  003B7E  6EF7               	endif
  5520  003B80                     	if	0	;There are less than 3 active tblptr bytes
  5521  003B80                     	movlw	low highword((_box_size))
  5524  003B80                     	tblrd	*+
  5525  003B80  0009               	
  5526                           	movff	tablat,??_drawBuffersToDisplay+0+0
  5527  003B82  CFF5 F05B          	tblrd	*+
  5528  003B86  0009               	
  5529                           	movff	tablat,??_drawBuffersToDisplay+0+0+1
  5530  003B88  CFF5 F05C          	movff	(drawBuffersToDisplay@h),(c:___wmul@multiplier)
  5531  003B8C  C072  F001         	movff	(drawBuffersToDisplay@h+1),(c:___wmul@multiplier+1)
  5532  003B90  C073  F002         	movlw	low((_box_size))
  5533  003B94  0EEE               	movwf	tblptrl
  5534  003B96  6EF6               	if	1	;There is more than 1 active tblptr byte
  5535  003B98                     	movlw	high((_box_size))
  5536  003B98  0E3F               	movwf	tblptrh
  5537  003B9A  6EF7               	endif
  5538  003B9C                     	if	0	;There are less than 3 active tblptr bytes
  5539  003B9C                     	movlw	low highword((_box_size))
  5542  003B9C                     	tblrd*+
  5543  003B9C  0009               	
  5544                           	movff	tablat,(c:___wmul@multiplicand)
  5545  003B9E  CFF5 F003          	tblrd*-
  5546  003BA2  000A               	
  5547                           	movff	tablat,(c:___wmul@multiplicand+1)
  5548  003BA4  CFF5 F004          
  5549                           	call	___wmul	;wreg free
  5550  003BA8  EC46  F010         	movf	(??_drawBuffersToDisplay+0+0),c,w
  5551  003BAC  505B               	addwf	(0+?___wmul),c,w
  5552  003BAE  2401               	movwf	((c:fill_rectangle@x2)),c
  5553  003BB0  6E1B               	movf	(??_drawBuffersToDisplay+0+1),c,w
  5554  003BB2  505C               	addwfc	(1+?___wmul),c,w
  5555  003BB4  2002               	movwf	1+((c:fill_rectangle@x2)),c
  5556  003BB6  6E1C               	movlw	low((_box_size))
  5557  003BB8  0EEE               	movwf	tblptrl
  5558  003BBA  6EF6               	if	1	;There is more than 1 active tblptr byte
  5559  003BBC                     	movlw	high((_box_size))
  5560  003BBC  0E3F               	movwf	tblptrh
  5561  003BBE  6EF7               	endif
  5562  003BC0                     	if	0	;There are less than 3 active tblptr bytes
  5563  003BC0                     	movlw	low highword((_box_size))
  5566  003BC0                     	tblrd	*+
  5567  003BC0  0009               	
  5568                           	movff	tablat,??_drawBuffersToDisplay+2+0
  5569  003BC2  CFF5 F05D          	tblrd	*+
  5570  003BC6  0009               	
  5571                           	movff	tablat,??_drawBuffersToDisplay+2+0+1
  5572  003BC8  CFF5 F05E          	movlw	low(01h)
  5573  003BCC  0E01               	movlb	0	; () banked
  5574  003BCE  0100               	addwf	((drawBuffersToDisplay@v))&0ffh,w
  5575  003BD0  2574               	movwf	((c:___wmul@multiplier)),c
  5576  003BD2  6E01               	movlw	high(01h)
  5577  003BD4  0E00               	addwfc	((drawBuffersToDisplay@v+1))&0ffh,w
  5578  003BD6  2175               	movwf	1+((c:___wmul@multiplier)),c
  5579  003BD8  6E02               	movlw	low((_box_size))
  5580  003BDA  0EEE               	movwf	tblptrl
  5581  003BDC  6EF6               	if	1	;There is more than 1 active tblptr byte
  5582  003BDE                     	movlw	high((_box_size))
  5583  003BDE  0E3F               	movwf	tblptrh
  5584  003BE0  6EF7               	endif
  5585  003BE2                     	if	0	;There are less than 3 active tblptr bytes
  5586  003BE2                     	movlw	low highword((_box_size))
  5589  003BE2                     	tblrd*+
  5590  003BE2  0009               	
  5591                           	movff	tablat,(c:___wmul@multiplicand)
  5592  003BE4  CFF5 F003          	tblrd*-
  5593  003BE8  000A               	
  5594                           	movff	tablat,(c:___wmul@multiplicand+1)
  5595  003BEA  CFF5 F004          
  5596                           	call	___wmul	;wreg free
  5597  003BEE  EC46  F010         	movf	(??_drawBuffersToDisplay+2+0),c,w
  5598  003BF2  505D               	addwf	(0+?___wmul),c,w
  5599  003BF4  2401               	movwf	((c:fill_rectangle@y2)),c
  5600  003BF6  6E1D               	movf	(??_drawBuffersToDisplay+2+1),c,w
  5601  003BF8  505E               	addwfc	(1+?___wmul),c,w
  5602  003BFA  2002               	movwf	1+((c:fill_rectangle@y2)),c
  5603  003BFC  6E1E               	movff	(drawBuffersToDisplay@v_pixel),(c:dataToColour@data)
  5604  003BFE  C06A  F00C         	movff	(drawBuffersToDisplay@v_pixel+1),(c:dataToColour@data+1)
  5605  003C02  C06B  F00D         	movff	(drawBuffersToDisplay@temperature_range),(c:dataToColour@temperature_range)
  5606  003C06  C06E  F00E         	movff	(drawBuffersToDisplay@temperature_range+1),(c:dataToColour@temperature_range+1)
  5607  003C0A  C06F  F00F         	call	_dataToColour	;wreg free
  5608  003C0E  ECED  F012         	movff	0+?_dataToColour,(c:fill_rectangle@colour)
  5609  003C12  C00C  F01F         	movff	1+?_dataToColour,(c:fill_rectangle@colour+1)
  5610  003C16  C00D  F020         	call	_fill_rectangle	;wreg free
  5611  003C1A  ECBB  F013         	line	329
  5612                           	
  5613                           l2155:
  5614  003C1E                     ;main.c: 329: fill_rectangle(((h+1)*box_size), ((v+1)*box_size), ((h+1)*box_size) + box_
                                 size, ((v+1)*box_size) + box_size, dataToColour(d_pixel, temperature_range));
  5615                           	movlw	low(01h)
  5616  003C1E  0E01               	movlb	0	; () banked
  5617  003C20  0100               	addwf	((drawBuffersToDisplay@h))&0ffh,w
  5618  003C22  2572               	movwf	((c:___wmul@multiplier)),c
  5619  003C24  6E01               	movlw	high(01h)
  5620  003C26  0E00               	addwfc	((drawBuffersToDisplay@h+1))&0ffh,w
  5621  003C28  2173               	movwf	1+((c:___wmul@multiplier)),c
  5622  003C2A  6E02               	movlw	low((_box_size))
  5623  003C2C  0EEE               	movwf	tblptrl
  5624  003C2E  6EF6               	if	1	;There is more than 1 active tblptr byte
  5625  003C30                     	movlw	high((_box_size))
  5626  003C30  0E3F               	movwf	tblptrh
  5627  003C32  6EF7               	endif
  5628  003C34                     	if	0	;There are less than 3 active tblptr bytes
  5629  003C34                     	movlw	low highword((_box_size))
  5632  003C34                     	tblrd*+
  5633  003C34  0009               	
  5634                           	movff	tablat,(c:___wmul@multiplicand)
  5635  003C36  CFF5 F003          	tblrd*-
  5636  003C3A  000A               	
  5637                           	movff	tablat,(c:___wmul@multiplicand+1)
  5638  003C3C  CFF5 F004          
  5639                           	call	___wmul	;wreg free
  5640  003C40  EC46  F010         	movff	0+?___wmul,(c:fill_rectangle@x1)
  5641  003C44  C001  F017         	movff	1+?___wmul,(c:fill_rectangle@x1+1)
  5642  003C48  C002  F018         	movlw	low(01h)
  5643  003C4C  0E01               	movlb	0	; () banked
  5644  003C4E  0100               	addwf	((drawBuffersToDisplay@v))&0ffh,w
  5645  003C50  2574               	movwf	((c:___wmul@multiplier)),c
  5646  003C52  6E01               	movlw	high(01h)
  5647  003C54  0E00               	addwfc	((drawBuffersToDisplay@v+1))&0ffh,w
  5648  003C56  2175               	movwf	1+((c:___wmul@multiplier)),c
  5649  003C58  6E02               	movlw	low((_box_size))
  5650  003C5A  0EEE               	movwf	tblptrl
  5651  003C5C  6EF6               	if	1	;There is more than 1 active tblptr byte
  5652  003C5E                     	movlw	high((_box_size))
  5653  003C5E  0E3F               	movwf	tblptrh
  5654  003C60  6EF7               	endif
  5655  003C62                     	if	0	;There are less than 3 active tblptr bytes
  5656  003C62                     	movlw	low highword((_box_size))
  5659  003C62                     	tblrd*+
  5660  003C62  0009               	
  5661                           	movff	tablat,(c:___wmul@multiplicand)
  5662  003C64  CFF5 F003          	tblrd*-
  5663  003C68  000A               	
  5664                           	movff	tablat,(c:___wmul@multiplicand+1)
  5665  003C6A  CFF5 F004          
  5666                           	call	___wmul	;wreg free
  5667  003C6E  EC46  F010         	movff	0+?___wmul,(c:fill_rectangle@y1)
  5668  003C72  C001  F019         	movff	1+?___wmul,(c:fill_rectangle@y1+1)
  5669  003C76  C002  F01A         	movlw	low((_box_size))
  5670  003C7A  0EEE               	movwf	tblptrl
  5671  003C7C  6EF6               	if	1	;There is more than 1 active tblptr byte
  5672  003C7E                     	movlw	high((_box_size))
  5673  003C7E  0E3F               	movwf	tblptrh
  5674  003C80  6EF7               	endif
  5675  003C82                     	if	0	;There are less than 3 active tblptr bytes
  5676  003C82                     	movlw	low highword((_box_size))
  5679  003C82                     	tblrd	*+
  5680  003C82  0009               	
  5681                           	movff	tablat,??_drawBuffersToDisplay+0+0
  5682  003C84  CFF5 F05B          	tblrd	*+
  5683  003C88  0009               	
  5684                           	movff	tablat,??_drawBuffersToDisplay+0+0+1
  5685  003C8A  CFF5 F05C          	movlw	low(01h)
  5686  003C8E  0E01               	movlb	0	; () banked
  5687  003C90  0100               	addwf	((drawBuffersToDisplay@h))&0ffh,w
  5688  003C92  2572               	movwf	((c:___wmul@multiplier)),c
  5689  003C94  6E01               	movlw	high(01h)
  5690  003C96  0E00               	addwfc	((drawBuffersToDisplay@h+1))&0ffh,w
  5691  003C98  2173               	movwf	1+((c:___wmul@multiplier)),c
  5692  003C9A  6E02               	movlw	low((_box_size))
  5693  003C9C  0EEE               	movwf	tblptrl
  5694  003C9E  6EF6               	if	1	;There is more than 1 active tblptr byte
  5695  003CA0                     	movlw	high((_box_size))
  5696  003CA0  0E3F               	movwf	tblptrh
  5697  003CA2  6EF7               	endif
  5698  003CA4                     	if	0	;There are less than 3 active tblptr bytes
  5699  003CA4                     	movlw	low highword((_box_size))
  5702  003CA4                     	tblrd*+
  5703  003CA4  0009               	
  5704                           	movff	tablat,(c:___wmul@multiplicand)
  5705  003CA6  CFF5 F003          	tblrd*-
  5706  003CAA  000A               	
  5707                           	movff	tablat,(c:___wmul@multiplicand+1)
  5708  003CAC  CFF5 F004          
  5709                           	call	___wmul	;wreg free
  5710  003CB0  EC46  F010         	movf	(??_drawBuffersToDisplay+0+0),c,w
  5711  003CB4  505B               	addwf	(0+?___wmul),c,w
  5712  003CB6  2401               	movwf	((c:fill_rectangle@x2)),c
  5713  003CB8  6E1B               	movf	(??_drawBuffersToDisplay+0+1),c,w
  5714  003CBA  505C               	addwfc	(1+?___wmul),c,w
  5715  003CBC  2002               	movwf	1+((c:fill_rectangle@x2)),c
  5716  003CBE  6E1C               	movlw	low((_box_size))
  5717  003CC0  0EEE               	movwf	tblptrl
  5718  003CC2  6EF6               	if	1	;There is more than 1 active tblptr byte
  5719  003CC4                     	movlw	high((_box_size))
  5720  003CC4  0E3F               	movwf	tblptrh
  5721  003CC6  6EF7               	endif
  5722  003CC8                     	if	0	;There are less than 3 active tblptr bytes
  5723  003CC8                     	movlw	low highword((_box_size))
  5726  003CC8                     	tblrd	*+
  5727  003CC8  0009               	
  5728                           	movff	tablat,??_drawBuffersToDisplay+2+0
  5729  003CCA  CFF5 F05D          	tblrd	*+
  5730  003CCE  0009               	
  5731                           	movff	tablat,??_drawBuffersToDisplay+2+0+1
  5732  003CD0  CFF5 F05E          	movlw	low(01h)
  5733  003CD4  0E01               	movlb	0	; () banked
  5734  003CD6  0100               	addwf	((drawBuffersToDisplay@v))&0ffh,w
  5735  003CD8  2574               	movwf	((c:___wmul@multiplier)),c
  5736  003CDA  6E01               	movlw	high(01h)
  5737  003CDC  0E00               	addwfc	((drawBuffersToDisplay@v+1))&0ffh,w
  5738  003CDE  2175               	movwf	1+((c:___wmul@multiplier)),c
  5739  003CE0  6E02               	movlw	low((_box_size))
  5740  003CE2  0EEE               	movwf	tblptrl
  5741  003CE4  6EF6               	if	1	;There is more than 1 active tblptr byte
  5742  003CE6                     	movlw	high((_box_size))
  5743  003CE6  0E3F               	movwf	tblptrh
  5744  003CE8  6EF7               	endif
  5745  003CEA                     	if	0	;There are less than 3 active tblptr bytes
  5746  003CEA                     	movlw	low highword((_box_size))
  5749  003CEA                     	tblrd*+
  5750  003CEA  0009               	
  5751                           	movff	tablat,(c:___wmul@multiplicand)
  5752  003CEC  CFF5 F003          	tblrd*-
  5753  003CF0  000A               	
  5754                           	movff	tablat,(c:___wmul@multiplicand+1)
  5755  003CF2  CFF5 F004          
  5756                           	call	___wmul	;wreg free
  5757  003CF6  EC46  F010         	movf	(??_drawBuffersToDisplay+2+0),c,w
  5758  003CFA  505D               	addwf	(0+?___wmul),c,w
  5759  003CFC  2401               	movwf	((c:fill_rectangle@y2)),c
  5760  003CFE  6E1D               	movf	(??_drawBuffersToDisplay+2+1),c,w
  5761  003D00  505E               	addwfc	(1+?___wmul),c,w
  5762  003D02  2002               	movwf	1+((c:fill_rectangle@y2)),c
  5763  003D04  6E1E               	movff	(drawBuffersToDisplay@d_pixel),(c:dataToColour@data)
  5764  003D06  C06C  F00C         	movff	(drawBuffersToDisplay@d_pixel+1),(c:dataToColour@data+1)
  5765  003D0A  C06D  F00D         	movff	(drawBuffersToDisplay@temperature_range),(c:dataToColour@temperature_range)
  5766  003D0E  C06E  F00E         	movff	(drawBuffersToDisplay@temperature_range+1),(c:dataToColour@temperature_range+1)
  5767  003D12  C06F  F00F         	call	_dataToColour	;wreg free
  5768  003D16  ECED  F012         	movff	0+?_dataToColour,(c:fill_rectangle@colour)
  5769  003D1A  C00C  F01F         	movff	1+?_dataToColour,(c:fill_rectangle@colour+1)
  5770  003D1E  C00D  F020         	call	_fill_rectangle	;wreg free
  5771  003D22  ECBB  F013         	line	332
  5772                           	
  5773                           l2157:
  5774  003D26                     ;main.c: 332: if(data > max_pixel.temperature) {
  5775                           	movlb	0	; () banked
  5776  003D26  0100               		movf	((drawBuffersToDisplay@data))&0ffh,w
  5777  003D28  5170               	subwf	(0+(_max_pixel+04h))&0ffh,w
  5778  003D2A  5D84               	movf	(1+(_max_pixel+04h))&0ffh,w
  5779  003D2C  5185               	xorlw	80h
  5780  003D2E  0A80               	movwf	(??_drawBuffersToDisplay+0+0)&0ffh,c
  5781  003D30  6E5B               	movf	((drawBuffersToDisplay@data+1))&0ffh,w
  5782  003D32  5171               	xorlw	80h
  5783  003D34  0A80               	subwfb	(??_drawBuffersToDisplay+0+0)&0ffh,c,w
  5784  003D36  585B               	btfsc	status,0
  5785  003D38  B0D8               	goto	u1481
  5786  003D3A  EFA1  F01E         	goto	u1480
  5787  003D3E  EFA3  F01E         
  5788                           u1481:
  5789  003D42                     	goto	l2161
  5790  003D42  EFB1  F01E         u1480:
  5791  003D46                     	line	333
  5792                           	
  5793                           l2159:; BSR set to: 0
  5794  003D46                     
  5795                           ;main.c: 333: max_pixel.x = x;
  5796                           	movff	(drawBuffersToDisplay@x),(_max_pixel)
  5797  003D46  C076  F080         	movff	(drawBuffersToDisplay@x+1),(_max_pixel+1)
  5798  003D4A  C077  F081         	line	334
  5799                           ;main.c: 334: max_pixel.y = y;
  5800                           	movff	(drawBuffersToDisplay@y),0+(_max_pixel+02h)
  5801  003D4E  C078  F082         	movff	(drawBuffersToDisplay@y+1),1+(_max_pixel+02h)
  5802  003D52  C079  F083         	line	335
  5803                           ;main.c: 335: max_pixel.temperature = data;
  5804                           	movff	(drawBuffersToDisplay@data),0+(_max_pixel+04h)
  5805  003D56  C070  F084         	movff	(drawBuffersToDisplay@data+1),1+(_max_pixel+04h)
  5806  003D5A  C071  F085         	goto	l2161
  5807  003D5E  EFB1  F01E         	line	336
  5808                           	
  5809                           l142:; BSR set to: 0
  5810  003D62                     
  5811                           	line	337
  5812                           	
  5813                           l2161:; BSR set to: 0
  5814  003D62                     
  5815                           ;main.c: 336: };main.c: 337: if(data < min_pixel.temperature) {
  5816                           		movf	(0+(_min_pixel+04h))&0ffh,w
  5817  003D62  517E               	subwf	((drawBuffersToDisplay@data))&0ffh,w
  5818  003D64  5D70               	movf	((drawBuffersToDisplay@data+1))&0ffh,w
  5819  003D66  5171               	xorlw	80h
  5820  003D68  0A80               	movwf	(??_drawBuffersToDisplay+0+0)&0ffh,c
  5821  003D6A  6E5B               	movf	(1+(_min_pixel+04h))&0ffh,w
  5822  003D6C  517F               	xorlw	80h
  5823  003D6E  0A80               	subwfb	(??_drawBuffersToDisplay+0+0)&0ffh,c,w
  5824  003D70  585B               	btfsc	status,0
  5825  003D72  B0D8               	goto	u1491
  5826  003D74  EFBE  F01E         	goto	u1490
  5827  003D78  EFC0  F01E         
  5828                           u1491:
  5829  003D7C                     	goto	l2165
  5830  003D7C  EFCE  F01E         u1490:
  5831  003D80                     	line	338
  5832                           	
  5833                           l2163:; BSR set to: 0
  5834  003D80                     
  5835                           ;main.c: 338: min_pixel.x = x;
  5836                           	movff	(drawBuffersToDisplay@x),(_min_pixel)
  5837  003D80  C076  F07A         	movff	(drawBuffersToDisplay@x+1),(_min_pixel+1)
  5838  003D84  C077  F07B         	line	339
  5839                           ;main.c: 339: min_pixel.y = y;
  5840                           	movff	(drawBuffersToDisplay@y),0+(_min_pixel+02h)
  5841  003D88  C078  F07C         	movff	(drawBuffersToDisplay@y+1),1+(_min_pixel+02h)
  5842  003D8C  C079  F07D         	line	340
  5843                           ;main.c: 340: min_pixel.temperature = data;
  5844                           	movff	(drawBuffersToDisplay@data),0+(_min_pixel+04h)
  5845  003D90  C070  F07E         	movff	(drawBuffersToDisplay@data+1),1+(_min_pixel+04h)
  5846  003D94  C071  F07F         	goto	l2165
  5847  003D98  EFCE  F01E         	line	341
  5848                           	
  5849                           l143:; BSR set to: 0
  5850  003D9C                     
  5851                           	line	316
  5852                           	
  5853                           l2165:; BSR set to: 0
  5854  003D9C                     
  5855                           	infsnz	((drawBuffersToDisplay@y))&0ffh
  5856  003D9C  4B78               	incf	((drawBuffersToDisplay@y+1))&0ffh
  5857  003D9E  2B79               	
  5858                           l2167:; BSR set to: 0
  5859  003DA0                     
  5860                           	btfsc	((drawBuffersToDisplay@y+1))&0ffh,7
  5861  003DA0  BF79               	goto	u1501
  5862  003DA2  EFDC  F01E         	movf	((drawBuffersToDisplay@y+1))&0ffh,w
  5863  003DA6  5179               	bnz	u1500
  5864  003DA8  E109               	movlw	8
  5865  003DAA  0E08               	subwf	 ((drawBuffersToDisplay@y))&0ffh,w
  5866  003DAC  5D78               	btfss	status,0
  5867  003DAE  A0D8               	goto	u1501
  5868  003DB0  EFDC  F01E         	goto	u1500
  5869  003DB4  EFDE  F01E         
  5870                           u1501:
  5871  003DB8                     	goto	l2143
  5872  003DB8  EF19  F01C         u1500:
  5873  003DBC                     	goto	l2169
  5874  003DBC  EFE0  F01E         	
  5875                           l141:; BSR set to: 0
  5876  003DC0                     
  5877                           	line	315
  5878                           	
  5879                           l2169:; BSR set to: 0
  5880  003DC0                     
  5881                           	infsnz	((drawBuffersToDisplay@x))&0ffh
  5882  003DC0  4B76               	incf	((drawBuffersToDisplay@x+1))&0ffh
  5883  003DC2  2B77               	
  5884                           l2171:; BSR set to: 0
  5885  003DC4                     
  5886                           	btfsc	((drawBuffersToDisplay@x+1))&0ffh,7
  5887  003DC4  BF77               	goto	u1511
  5888  003DC6  EFEE  F01E         	movf	((drawBuffersToDisplay@x+1))&0ffh,w
  5889  003DCA  5177               	bnz	u1510
  5890  003DCC  E109               	movlw	8
  5891  003DCE  0E08               	subwf	 ((drawBuffersToDisplay@x))&0ffh,w
  5892  003DD0  5D76               	btfss	status,0
  5893  003DD2  A0D8               	goto	u1511
  5894  003DD4  EFEE  F01E         	goto	u1510
  5895  003DD8  EFF0  F01E         
  5896                           u1511:
  5897  003DDC                     	goto	l2137
  5898  003DDC  EF03  F01C         u1510:
  5899  003DE0                     	goto	l2173
  5900  003DE0  EFF2  F01E         	
  5901                           l139:; BSR set to: 0
  5902  003DE4                     
  5903                           	line	345
  5904                           	
  5905                           l2173:; BSR set to: 0
  5906  003DE4                     
  5907                           ;main.c: 341: };main.c: 342: };main.c: 343: };main.c: 345: drawOverlay(max_pixel.x, max_
                                 pixel.y, max_pixel.temperature);
  5908                           	movff	(_max_pixel),(c:drawOverlay@x)
  5909  003DE4  C080  F043         	movff	(_max_pixel+1),(c:drawOverlay@x+1)
  5910  003DE8  C081  F044         	movff	0+(_max_pixel+02h),(c:drawOverlay@y)
  5911  003DEC  C082  F045         	movff	1+(_max_pixel+02h),(c:drawOverlay@y+1)
  5912  003DF0  C083  F046         	movff	0+(_max_pixel+04h),(c:drawOverlay@data)
  5913  003DF4  C084  F047         	movff	1+(_max_pixel+04h),(c:drawOverlay@data+1)
  5914  003DF8  C085  F048         	call	_drawOverlay	;wreg free
  5915  003DFC  EC52  F018         	line	346
  5916                           	
  5917                           l144:
  5918  003E00                     	return	;funcret
  5919  003E00  0012               	opt stack 0
  5920                           GLOBAL	__end_of_drawBuffersToDisplay
  5921                           	__end_of_drawBuffersToDisplay:
  5922  003E02                     	signat	_drawBuffersToDisplay,16505
  5923                           	global	_drawOverlay
  5924                           
  5925 ;; *************** function _drawOverlay *****************
  5926 ;; Defined at:
  5927 ;;		line 203 in file "main.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  x               2   66[COMRAM] int 
  5930 ;;  y               2   68[COMRAM] int 
  5931 ;;  data            2   70[COMRAM] int 
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;  temperature_    6   78[COMRAM] unsigned char [6]
  5934 ;;  batt_voltage    3   75[COMRAM] float 
  5935 ;;  v_pos           2   88[COMRAM] int 
  5936 ;;  h_pos           2   86[COMRAM] int 
  5937 ;;  ADC_reading     2   84[COMRAM] unsigned int 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  1    wreg      void 
  5940 ;; Registers used:
  5941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  5947 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  5948 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  5949 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  5950 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  5951 ;;Total ram usage:       24 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    6
  5954 ;; This function calls:
  5955 ;;		___awdiv
  5956 ;;		___ftdiv
  5957 ;;		___lwtoft
  5958 ;;		___wmul
  5959 ;;		_convertDataToString
  5960 ;;		_draw_h_line
  5961 ;;		_draw_string
  5962 ;;		_draw_v_line
  5963 ;; This function is called by:
  5964 ;;		_drawBuffersToDisplay
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           psect	text12,class=CODE,space=0,reloc=2,group=0
  5968                           	line	203
  5969                           global __ptext12
  5970                           __ptext12:
  5971  0030A4                     psect	text12
  5972                           	file	"main.c"
  5973                           	line	203
  5974                           	global	__size_of_drawOverlay
  5975                           	__size_of_drawOverlay	equ	__end_of_drawOverlay-_drawOverlay
  5976  0000                     	
  5977                           _drawOverlay:
  5978  0030A4                     ;incstack = 0
  5979                           	opt	stack 23
  5980                           	line	207
  5981                           	
  5982                           l1989:
  5983  0030A4                     ;main.c: 207: unsigned int ADC_reading = (ADRESH << 8) | ADRESL;
  5984                           	movf	((c:4035)),c,w	;volatile
  5985  0030A4  50C3               	movff	(c:4036),??_drawOverlay+0+0	;volatile
  5986  0030A6  CFC4 F049          	clrf	(??_drawOverlay+0+0+1)&0ffh,c
  5987  0030AA  6A4A               	movff	??_drawOverlay+0+0,??_drawOverlay+0+1
  5988  0030AC  C049  F04A         	clrf	(??_drawOverlay+0+0),c
  5989  0030B0  6A49               	iorwf	(??_drawOverlay+0+0),c,w
  5990  0030B2  1049               	movwf	((c:drawOverlay@ADC_reading)),c
  5991  0030B4  6E55               	movf	(??_drawOverlay+0+1),c,w
  5992  0030B6  504A               	movwf	1+((c:drawOverlay@ADC_reading)),c
  5993  0030B8  6E56               	line	208
  5994                           	
  5995                           l1991:
  5996  0030BA                     ;main.c: 208: float batt_voltage = ((float)0.6 * (float)1023.0) / (float)(1024 - ADC_rea
                                 ding);
  5997                           	movlw	low(float24(613.79999999999995))
  5998  0030BA  0E73               	movwf	((c:___ftdiv@f1)),c
  5999  0030BC  6E0C               	movlw	high(float24(613.79999999999995))
  6000  0030BE  0E19               	movwf	((c:___ftdiv@f1+1)),c
  6001  0030C0  6E0D               	movlw	low highword(float24(613.79999999999995))
  6002  0030C2  0E44               	movwf	((c:___ftdiv@f1+2)),c
  6003  0030C4  6E0E               
  6004                           	movff	(c:drawOverlay@ADC_reading),??_drawOverlay+0+0
  6005  0030C6  C055  F049         	movff	(c:drawOverlay@ADC_reading+1),??_drawOverlay+0+0+1
  6006  0030CA  C056  F04A         	comf	(??_drawOverlay+0+0),c
  6007  0030CE  1E49               	comf	(??_drawOverlay+0+1),c
  6008  0030D0  1E4A               	infsnz	(??_drawOverlay+0+0),c
  6009  0030D2  4A49               	incf	(??_drawOverlay+0+1),c
  6010  0030D4  2A4A               	movlw	low(0400h)
  6011  0030D6  0E00               	addwf	(??_drawOverlay+0+0),c,w
  6012  0030D8  2449               	movwf	((c:___lwtoft@c)),c
  6013  0030DA  6E09               	movlw	high(0400h)
  6014  0030DC  0E04               	addwfc	(??_drawOverlay+0+1),c,w
  6015  0030DE  204A               	movwf	1+((c:___lwtoft@c)),c
  6016  0030E0  6E0A               	call	___lwtoft	;wreg free
  6017  0030E2  EC32  F010         	movff	0+?___lwtoft,(c:___ftdiv@f2)
  6018  0030E6  C009  F00F         	movff	1+?___lwtoft,(c:___ftdiv@f2+1)
  6019  0030EA  C00A  F010         	movff	2+?___lwtoft,(c:___ftdiv@f2+2)
  6020  0030EE  C00B  F011         	call	___ftdiv	;wreg free
  6021  0030F2  ECA8  F014         	movff	0+?___ftdiv,(c:drawOverlay@batt_voltage)
  6022  0030F6  C00C  F04C         	movff	1+?___ftdiv,(c:drawOverlay@batt_voltage+1)
  6023  0030FA  C00D  F04D         	movff	2+?___ftdiv,(c:drawOverlay@batt_voltage+2)
  6024  0030FE  C00E  F04E         	line	210
  6025                           	
  6026                           l1993:
  6027  003102                     ;main.c: 210: ADCON0 = ADCON0 | 0b00000010;
  6028                           	movf	((c:4034)),c,w	;volatile
  6029  003102  50C2               	iorlw	low(02h)
  6030  003104  0902               	movwf	((c:4034)),c	;volatile
  6031  003106  6EC2               	line	213
  6032                           	
  6033                           l1995:
  6034  003108                     ;main.c: 213: if(data > 2047) {
  6035                           	btfsc	((c:drawOverlay@data+1)),c,7
  6036  003108  BE48               	goto	u1331
  6037  00310A  EF8E  F018         	movlw	8
  6038  00310E  0E08               	subwf	 ((c:drawOverlay@data+1)),c,w
  6039  003110  5C48               	btfss	status,0
  6040  003112  A0D8               	goto	u1331
  6041  003114  EF8E  F018         	goto	u1330
  6042  003118  EF90  F018         
  6043                           u1331:
  6044  00311C                     	goto	l1999
  6045  00311C  EF98  F018         u1330:
  6046  003120                     	line	215
  6047                           	
  6048                           l1997:
  6049  003120                     ;main.c: 216: data = (~data + 1) * -1;
  6050                           	movlw	0
  6051  003120  0E00               	iorwf	((c:drawOverlay@data)),c,w
  6052  003122  1047               	movwf	((c:drawOverlay@data)),c
  6053  003124  6E47               	movlw	0F8h
  6054  003126  0EF8               	iorwf	((c:drawOverlay@data+1)),c,w
  6055  003128  1048               	movwf	1+((c:drawOverlay@data)),c
  6056  00312A  6E48               	goto	l1999
  6057  00312C  EF98  F018         	line	218
  6058                           	
  6059                           l120:
  6060  003130                     	line	222
  6061                           	
  6062                           l1999:
  6063  003130                     ;main.c: 218: };main.c: 221: char temperature_buffer[6];;main.c: 222: convertDataToStrin
                                 g(temperature_buffer, data);
  6064                           		movlw	low(drawOverlay@temperature_buffer)
  6065  003130  0E4F               	movwf	((c:convertDataToString@buff)),c
  6066  003132  6E09               	movlw	high(drawOverlay@temperature_buffer)
  6067  003134  0E00               	movwf	((c:convertDataToString@buff+1)),c
  6068  003136  6E0A               
  6069                           	movff	(c:drawOverlay@data),(c:convertDataToString@data)
  6070  003138  C047  F00B         	movff	(c:drawOverlay@data+1),(c:convertDataToString@data+1)
  6071  00313C  C048  F00C         	call	_convertDataToString	;wreg free
  6072  003140  EC93  F016         	line	225
  6073                           	
  6074                           l2001:
  6075  003144                     ;main.c: 225: draw_string(2, 100, cursor_colour, 2, temperature_buffer);
  6076                           	movlw	low(064h)
  6077  003144  0E64               	movwf	((c:draw_string@y)),c
  6078  003146  6E36               	movlw	low((_cursor_colour))
  6079  003148  0EEC               	movwf	tblptrl
  6080  00314A  6EF6               	if	1	;There is more than 1 active tblptr byte
  6081  00314C                     	movlw	high((_cursor_colour))
  6082  00314C  0E3F               	movwf	tblptrh
  6083  00314E  6EF7               	endif
  6084  003150                     	if	0	;There are less than 3 active tblptr bytes
  6085  003150                     	movlw	low highword((_cursor_colour))
  6088  003150                     	tblrd*+
  6089  003150  0009               	
  6090                           	movff	tablat,(c:draw_string@colour)
  6091  003152  CFF5 F037          	tblrd*-
  6092  003156  000A               	
  6093                           	movff	tablat,(c:draw_string@colour+1)
  6094  003158  CFF5 F038          
  6095                           	movlw	low(02h)
  6096  00315C  0E02               	movwf	((c:draw_string@size)),c
  6097  00315E  6E39               		movlw	low(drawOverlay@temperature_buffer)
  6098  003160  0E4F               	movwf	((c:draw_string@str)),c
  6099  003162  6E3A               	movlw	high(drawOverlay@temperature_buffer)
  6100  003164  0E00               	movwf	((c:draw_string@str+1)),c
  6101  003166  6E3B               
  6102                           	movlw	(02h)&0ffh
  6103  003168  0E02               	
  6104                           	call	_draw_string
  6105  00316A  EC54  F012         	line	228
  6106                           	
  6107                           l2003:
  6108  00316E                     ;main.c: 228: int h_pos = x * box_size * 2;
  6109                           	movff	(c:drawOverlay@x),(c:___wmul@multiplier)
  6110  00316E  C043  F001         	movff	(c:drawOverlay@x+1),(c:___wmul@multiplier+1)
  6111  003172  C044  F002         	movlw	low((_box_size))
  6112  003176  0EEE               	movwf	tblptrl
  6113  003178  6EF6               	if	1	;There is more than 1 active tblptr byte
  6114  00317A                     	movlw	high((_box_size))
  6115  00317A  0E3F               	movwf	tblptrh
  6116  00317C  6EF7               	endif
  6117  00317E                     	if	0	;There are less than 3 active tblptr bytes
  6118  00317E                     	movlw	low highword((_box_size))
  6121  00317E                     	tblrd*+
  6122  00317E  0009               	
  6123                           	movff	tablat,(c:___wmul@multiplicand)
  6124  003180  CFF5 F003          	tblrd*-
  6125  003184  000A               	
  6126                           	movff	tablat,(c:___wmul@multiplicand+1)
  6127  003186  CFF5 F004          
  6128                           	call	___wmul	;wreg free
  6129  00318A  EC46  F010         	bcf	status,0
  6130  00318E  90D8               	rlcf	(0+?___wmul),c,w
  6131  003190  3401               	movwf	((c:drawOverlay@h_pos)),c
  6132  003192  6E57               	rlcf	(1+?___wmul),c,w
  6133  003194  3402               	movwf	1+((c:drawOverlay@h_pos)),c
  6134  003196  6E58               	line	229
  6135                           	
  6136                           l2005:
  6137  003198                     ;main.c: 229: int v_pos = y * box_size * 2;
  6138                           	movff	(c:drawOverlay@y),(c:___wmul@multiplier)
  6139  003198  C045  F001         	movff	(c:drawOverlay@y+1),(c:___wmul@multiplier+1)
  6140  00319C  C046  F002         	movlw	low((_box_size))
  6141  0031A0  0EEE               	movwf	tblptrl
  6142  0031A2  6EF6               	if	1	;There is more than 1 active tblptr byte
  6143  0031A4                     	movlw	high((_box_size))
  6144  0031A4  0E3F               	movwf	tblptrh
  6145  0031A6  6EF7               	endif
  6146  0031A8                     	if	0	;There are less than 3 active tblptr bytes
  6147  0031A8                     	movlw	low highword((_box_size))
  6150  0031A8                     	tblrd*+
  6151  0031A8  0009               	
  6152                           	movff	tablat,(c:___wmul@multiplicand)
  6153  0031AA  CFF5 F003          	tblrd*-
  6154  0031AE  000A               	
  6155                           	movff	tablat,(c:___wmul@multiplicand+1)
  6156  0031B0  CFF5 F004          
  6157                           	call	___wmul	;wreg free
  6158  0031B4  EC46  F010         	bcf	status,0
  6159  0031B8  90D8               	rlcf	(0+?___wmul),c,w
  6160  0031BA  3401               	movwf	((c:drawOverlay@v_pos)),c
  6161  0031BC  6E59               	rlcf	(1+?___wmul),c,w
  6162  0031BE  3402               	movwf	1+((c:drawOverlay@v_pos)),c
  6163  0031C0  6E5A               	line	230
  6164                           	
  6165                           l2007:
  6166  0031C2                     ;main.c: 230: draw_h_line((h_pos)-box_size, (v_pos)+(box_size/2)-1, (h_pos)+(2*box_size)
                                 , (v_pos)+(box_size/2)-1, cursor_colour);
  6167                           	movlw	low((_box_size))
  6168  0031C2  0EEE               	movwf	tblptrl
  6169  0031C4  6EF6               	if	1	;There is more than 1 active tblptr byte
  6170  0031C6                     	movlw	high((_box_size))
  6171  0031C6  0E3F               	movwf	tblptrh
  6172  0031C8  6EF7               	endif
  6173  0031CA                     	if	0	;There are less than 3 active tblptr bytes
  6174  0031CA                     	movlw	low highword((_box_size))
  6177  0031CA                     	tblrd*+
  6178  0031CA  0009               	
  6179                           	movff	tablat,(c:___awdiv@dividend)
  6180  0031CC  CFF5 F001          	tblrd*-
  6181  0031D0  000A               	
  6182                           	movff	tablat,(c:___awdiv@dividend+1)
  6183  0031D2  CFF5 F002          
  6184                           	movlw	high(02h)
  6185  0031D6  0E00               	movwf	((c:___awdiv@divisor+1)),c
  6186  0031D8  6E04               	movlw	low(02h)
  6187  0031DA  0E02               	movwf	((c:___awdiv@divisor)),c
  6188  0031DC  6E03               	call	___awdiv	;wreg free
  6189  0031DE  EC45  F013         	movf	(0+?___awdiv),c,w
  6190  0031E2  5001               	addwf	((c:drawOverlay@v_pos)),c,w
  6191  0031E4  2459               	movwf	(??_drawOverlay+0+0)&0ffh,c
  6192  0031E6  6E49               	decf	((??_drawOverlay+0+0)),c,w
  6193  0031E8  0449               	movwf	((c:draw_h_line@y1)),c
  6194  0031EA  6E0F               	movlw	low((_box_size))
  6195  0031EC  0EEE               	movwf	tblptrl
  6196  0031EE  6EF6               	if	1	;There is more than 1 active tblptr byte
  6197  0031F0                     	movlw	high((_box_size))
  6198  0031F0  0E3F               	movwf	tblptrh
  6199  0031F2  6EF7               	endif
  6200  0031F4                     	if	0	;There are less than 3 active tblptr bytes
  6201  0031F4                     	movlw	low highword((_box_size))
  6204  0031F4                     	tblrd	*
  6205  0031F4  0008               	
  6206                           	movff	tablat,??_drawOverlay+1+0
  6207  0031F6  CFF5 F04A          	bcf	status,0
  6208  0031FA  90D8               	rlcf	(??_drawOverlay+1+0),c,w
  6209  0031FC  344A               	addwf	((c:drawOverlay@h_pos)),c,w
  6210  0031FE  2457               	movwf	((c:draw_h_line@x2)),c
  6211  003200  6E10               	movlw	low((_box_size))
  6212  003202  0EEE               	movwf	tblptrl
  6213  003204  6EF6               	if	1	;There is more than 1 active tblptr byte
  6214  003206                     	movlw	high((_box_size))
  6215  003206  0E3F               	movwf	tblptrh
  6216  003208  6EF7               	endif
  6217  00320A                     	if	0	;There are less than 3 active tblptr bytes
  6218  00320A                     	movlw	low highword((_box_size))
  6221  00320A                     	tblrd*+
  6222  00320A  0009               	
  6223                           	movff	tablat,(c:___awdiv@dividend)
  6224  00320C  CFF5 F001          	tblrd*-
  6225  003210  000A               	
  6226                           	movff	tablat,(c:___awdiv@dividend+1)
  6227  003212  CFF5 F002          
  6228                           	movlw	high(02h)
  6229  003216  0E00               	movwf	((c:___awdiv@divisor+1)),c
  6230  003218  6E04               	movlw	low(02h)
  6231  00321A  0E02               	movwf	((c:___awdiv@divisor)),c
  6232  00321C  6E03               	call	___awdiv	;wreg free
  6233  00321E  EC45  F013         	movf	(0+?___awdiv),c,w
  6234  003222  5001               	addwf	((c:drawOverlay@v_pos)),c,w
  6235  003224  2459               	movwf	(??_drawOverlay+2+0)&0ffh,c
  6236  003226  6E4B               	decf	((??_drawOverlay+2+0)),c,w
  6237  003228  044B               	movwf	((c:draw_h_line@y2)),c
  6238  00322A  6E11               	movlw	low((_cursor_colour))
  6239  00322C  0EEC               	movwf	tblptrl
  6240  00322E  6EF6               	if	1	;There is more than 1 active tblptr byte
  6241  003230                     	movlw	high((_cursor_colour))
  6242  003230  0E3F               	movwf	tblptrh
  6243  003232  6EF7               	endif
  6244  003234                     	if	0	;There are less than 3 active tblptr bytes
  6245  003234                     	movlw	low highword((_cursor_colour))
  6248  003234                     	tblrd*+
  6249  003234  0009               	
  6250                           	movff	tablat,(c:draw_h_line@colour)
  6251  003236  CFF5 F012          	tblrd*-
  6252  00323A  000A               	
  6253                           	movff	tablat,(c:draw_h_line@colour+1)
  6254  00323C  CFF5 F013          
  6255                           	movlw	low((_box_size))
  6256  003240  0EEE               	movwf	tblptrl
  6257  003242  6EF6               	if	1	;There is more than 1 active tblptr byte
  6258  003244                     	movlw	high((_box_size))
  6259  003244  0E3F               	movwf	tblptrh
  6260  003246  6EF7               	endif
  6261  003248                     	if	0	;There are less than 3 active tblptr bytes
  6262  003248                     	movlw	low highword((_box_size))
  6265  003248                     	tblrd	*
  6266  003248  0008               	
  6267                           	movf	tablat,w
  6268  00324A  50F5               	sublw	0
  6269  00324C  0800               	addwf	((c:drawOverlay@h_pos)),c,w
  6270  00324E  2457               	
  6271                           	call	_draw_h_line
  6272  003250  ECE6  F010         	line	231
  6273                           	
  6274                           l2009:
  6275  003254                     ;main.c: 231: draw_h_line((h_pos)-box_size, (v_pos)+(box_size/2), (h_pos)+(2*box_size), 
                                 (v_pos)+(box_size/2), cursor_colour);
  6276                           	movlw	low((_box_size))
  6277  003254  0EEE               	movwf	tblptrl
  6278  003256  6EF6               	if	1	;There is more than 1 active tblptr byte
  6279  003258                     	movlw	high((_box_size))
  6280  003258  0E3F               	movwf	tblptrh
  6281  00325A  6EF7               	endif
  6282  00325C                     	if	0	;There are less than 3 active tblptr bytes
  6283  00325C                     	movlw	low highword((_box_size))
  6286  00325C                     	tblrd*+
  6287  00325C  0009               	
  6288                           	movff	tablat,(c:___awdiv@dividend)
  6289  00325E  CFF5 F001          	tblrd*-
  6290  003262  000A               	
  6291                           	movff	tablat,(c:___awdiv@dividend+1)
  6292  003264  CFF5 F002          
  6293                           	movlw	high(02h)
  6294  003268  0E00               	movwf	((c:___awdiv@divisor+1)),c
  6295  00326A  6E04               	movlw	low(02h)
  6296  00326C  0E02               	movwf	((c:___awdiv@divisor)),c
  6297  00326E  6E03               	call	___awdiv	;wreg free
  6298  003270  EC45  F013         	movf	(0+?___awdiv),c,w
  6299  003274  5001               	addwf	((c:drawOverlay@v_pos)),c,w
  6300  003276  2459               	movwf	((c:draw_h_line@y1)),c
  6301  003278  6E0F               	movlw	low((_box_size))
  6302  00327A  0EEE               	movwf	tblptrl
  6303  00327C  6EF6               	if	1	;There is more than 1 active tblptr byte
  6304  00327E                     	movlw	high((_box_size))
  6305  00327E  0E3F               	movwf	tblptrh
  6306  003280  6EF7               	endif
  6307  003282                     	if	0	;There are less than 3 active tblptr bytes
  6308  003282                     	movlw	low highword((_box_size))
  6311  003282                     	tblrd	*
  6312  003282  0008               	
  6313                           	movff	tablat,??_drawOverlay+0+0
  6314  003284  CFF5 F049          	bcf	status,0
  6315  003288  90D8               	rlcf	(??_drawOverlay+0+0),c,w
  6316  00328A  3449               	addwf	((c:drawOverlay@h_pos)),c,w
  6317  00328C  2457               	movwf	((c:draw_h_line@x2)),c
  6318  00328E  6E10               	movlw	low((_box_size))
  6319  003290  0EEE               	movwf	tblptrl
  6320  003292  6EF6               	if	1	;There is more than 1 active tblptr byte
  6321  003294                     	movlw	high((_box_size))
  6322  003294  0E3F               	movwf	tblptrh
  6323  003296  6EF7               	endif
  6324  003298                     	if	0	;There are less than 3 active tblptr bytes
  6325  003298                     	movlw	low highword((_box_size))
  6328  003298                     	tblrd*+
  6329  003298  0009               	
  6330                           	movff	tablat,(c:___awdiv@dividend)
  6331  00329A  CFF5 F001          	tblrd*-
  6332  00329E  000A               	
  6333                           	movff	tablat,(c:___awdiv@dividend+1)
  6334  0032A0  CFF5 F002          
  6335                           	movlw	high(02h)
  6336  0032A4  0E00               	movwf	((c:___awdiv@divisor+1)),c
  6337  0032A6  6E04               	movlw	low(02h)
  6338  0032A8  0E02               	movwf	((c:___awdiv@divisor)),c
  6339  0032AA  6E03               	call	___awdiv	;wreg free
  6340  0032AC  EC45  F013         	movf	(0+?___awdiv),c,w
  6341  0032B0  5001               	addwf	((c:drawOverlay@v_pos)),c,w
  6342  0032B2  2459               	movwf	((c:draw_h_line@y2)),c
  6343  0032B4  6E11               	movlw	low((_cursor_colour))
  6344  0032B6  0EEC               	movwf	tblptrl
  6345  0032B8  6EF6               	if	1	;There is more than 1 active tblptr byte
  6346  0032BA                     	movlw	high((_cursor_colour))
  6347  0032BA  0E3F               	movwf	tblptrh
  6348  0032BC  6EF7               	endif
  6349  0032BE                     	if	0	;There are less than 3 active tblptr bytes
  6350  0032BE                     	movlw	low highword((_cursor_colour))
  6353  0032BE                     	tblrd*+
  6354  0032BE  0009               	
  6355                           	movff	tablat,(c:draw_h_line@colour)
  6356  0032C0  CFF5 F012          	tblrd*-
  6357  0032C4  000A               	
  6358                           	movff	tablat,(c:draw_h_line@colour+1)
  6359  0032C6  CFF5 F013          
  6360                           	movlw	low((_box_size))
  6361  0032CA  0EEE               	movwf	tblptrl
  6362  0032CC  6EF6               	if	1	;There is more than 1 active tblptr byte
  6363  0032CE                     	movlw	high((_box_size))
  6364  0032CE  0E3F               	movwf	tblptrh
  6365  0032D0  6EF7               	endif
  6366  0032D2                     	if	0	;There are less than 3 active tblptr bytes
  6367  0032D2                     	movlw	low highword((_box_size))
  6370  0032D2                     	tblrd	*
  6371  0032D2  0008               	
  6372                           	movf	tablat,w
  6373  0032D4  50F5               	sublw	0
  6374  0032D6  0800               	addwf	((c:drawOverlay@h_pos)),c,w
  6375  0032D8  2457               	
  6376                           	call	_draw_h_line
  6377  0032DA  ECE6  F010         	line	232
  6378                           	
  6379                           l2011:
  6380  0032DE                     ;main.c: 232: draw_v_line((h_pos)+(box_size/2)-1, (v_pos)-box_size, (h_pos)+(box_size/2)
                                 -1, (v_pos)+(2*box_size), cursor_colour);
  6381                           	movlw	low((_box_size))
  6382  0032DE  0EEE               	movwf	tblptrl
  6383  0032E0  6EF6               	if	1	;There is more than 1 active tblptr byte
  6384  0032E2                     	movlw	high((_box_size))
  6385  0032E2  0E3F               	movwf	tblptrh
  6386  0032E4  6EF7               	endif
  6387  0032E6                     	if	0	;There are less than 3 active tblptr bytes
  6388  0032E6                     	movlw	low highword((_box_size))
  6391  0032E6                     	tblrd	*
  6392  0032E6  0008               	
  6393                           	movf	tablat,w
  6394  0032E8  50F5               	sublw	0
  6395  0032EA  0800               	addwf	((c:drawOverlay@v_pos)),c,w
  6396  0032EC  2459               	movwf	((c:draw_v_line@y1)),c
  6397  0032EE  6E0F               	movlw	low((_box_size))
  6398  0032F0  0EEE               	movwf	tblptrl
  6399  0032F2  6EF6               	if	1	;There is more than 1 active tblptr byte
  6400  0032F4                     	movlw	high((_box_size))
  6401  0032F4  0E3F               	movwf	tblptrh
  6402  0032F6  6EF7               	endif
  6403  0032F8                     	if	0	;There are less than 3 active tblptr bytes
  6404  0032F8                     	movlw	low highword((_box_size))
  6407  0032F8                     	tblrd*+
  6408  0032F8  0009               	
  6409                           	movff	tablat,(c:___awdiv@dividend)
  6410  0032FA  CFF5 F001          	tblrd*-
  6411  0032FE  000A               	
  6412                           	movff	tablat,(c:___awdiv@dividend+1)
  6413  003300  CFF5 F002          
  6414                           	movlw	high(02h)
  6415  003304  0E00               	movwf	((c:___awdiv@divisor+1)),c
  6416  003306  6E04               	movlw	low(02h)
  6417  003308  0E02               	movwf	((c:___awdiv@divisor)),c
  6418  00330A  6E03               	call	___awdiv	;wreg free
  6419  00330C  EC45  F013         	movf	(0+?___awdiv),c,w
  6420  003310  5001               	addwf	((c:drawOverlay@h_pos)),c,w
  6421  003312  2457               	movwf	(??_drawOverlay+0+0)&0ffh,c
  6422  003314  6E49               	decf	((??_drawOverlay+0+0)),c,w
  6423  003316  0449               	movwf	((c:draw_v_line@x2)),c
  6424  003318  6E10               	movlw	low((_box_size))
  6425  00331A  0EEE               	movwf	tblptrl
  6426  00331C  6EF6               	if	1	;There is more than 1 active tblptr byte
  6427  00331E                     	movlw	high((_box_size))
  6428  00331E  0E3F               	movwf	tblptrh
  6429  003320  6EF7               	endif
  6430  003322                     	if	0	;There are less than 3 active tblptr bytes
  6431  003322                     	movlw	low highword((_box_size))
  6434  003322                     	tblrd	*
  6435  003322  0008               	
  6436                           	movff	tablat,??_drawOverlay+1+0
  6437  003324  CFF5 F04A          	bcf	status,0
  6438  003328  90D8               	rlcf	(??_drawOverlay+1+0),c,w
  6439  00332A  344A               	addwf	((c:drawOverlay@v_pos)),c,w
  6440  00332C  2459               	movwf	((c:draw_v_line@y2)),c
  6441  00332E  6E11               	movlw	low((_cursor_colour))
  6442  003330  0EEC               	movwf	tblptrl
  6443  003332  6EF6               	if	1	;There is more than 1 active tblptr byte
  6444  003334                     	movlw	high((_cursor_colour))
  6445  003334  0E3F               	movwf	tblptrh
  6446  003336  6EF7               	endif
  6447  003338                     	if	0	;There are less than 3 active tblptr bytes
  6448  003338                     	movlw	low highword((_cursor_colour))
  6451  003338                     	tblrd*+
  6452  003338  0009               	
  6453                           	movff	tablat,(c:draw_v_line@colour)
  6454  00333A  CFF5 F012          	tblrd*-
  6455  00333E  000A               	
  6456                           	movff	tablat,(c:draw_v_line@colour+1)
  6457  003340  CFF5 F013          
  6458                           	movlw	low((_box_size))
  6459  003344  0EEE               	movwf	tblptrl
  6460  003346  6EF6               	if	1	;There is more than 1 active tblptr byte
  6461  003348                     	movlw	high((_box_size))
  6462  003348  0E3F               	movwf	tblptrh
  6463  00334A  6EF7               	endif
  6464  00334C                     	if	0	;There are less than 3 active tblptr bytes
  6465  00334C                     	movlw	low highword((_box_size))
  6468  00334C                     	tblrd*+
  6469  00334C  0009               	
  6470                           	movff	tablat,(c:___awdiv@dividend)
  6471  00334E  CFF5 F001          	tblrd*-
  6472  003352  000A               	
  6473                           	movff	tablat,(c:___awdiv@dividend+1)
  6474  003354  CFF5 F002          
  6475                           	movlw	high(02h)
  6476  003358  0E00               	movwf	((c:___awdiv@divisor+1)),c
  6477  00335A  6E04               	movlw	low(02h)
  6478  00335C  0E02               	movwf	((c:___awdiv@divisor)),c
  6479  00335E  6E03               	call	___awdiv	;wreg free
  6480  003360  EC45  F013         	movf	(0+?___awdiv),c,w
  6481  003364  5001               	addwf	((c:drawOverlay@h_pos)),c,w
  6482  003366  2457               	movwf	(??_drawOverlay+2+0)&0ffh,c
  6483  003368  6E4B               	decf	((??_drawOverlay+2+0)),c,w
  6484  00336A  044B               	
  6485                           	call	_draw_v_line
  6486  00336C  EC0E  F011         	line	233
  6487                           	
  6488                           l2013:
  6489  003370                     ;main.c: 233: draw_v_line((h_pos)+(box_size/2), (v_pos)-box_size, (h_pos)+(box_size/2), 
                                 (v_pos)+(2*box_size), cursor_colour);
  6490                           	movlw	low((_box_size))
  6491  003370  0EEE               	movwf	tblptrl
  6492  003372  6EF6               	if	1	;There is more than 1 active tblptr byte
  6493  003374                     	movlw	high((_box_size))
  6494  003374  0E3F               	movwf	tblptrh
  6495  003376  6EF7               	endif
  6496  003378                     	if	0	;There are less than 3 active tblptr bytes
  6497  003378                     	movlw	low highword((_box_size))
  6500  003378                     	tblrd	*
  6501  003378  0008               	
  6502                           	movf	tablat,w
  6503  00337A  50F5               	sublw	0
  6504  00337C  0800               	addwf	((c:drawOverlay@v_pos)),c,w
  6505  00337E  2459               	movwf	((c:draw_v_line@y1)),c
  6506  003380  6E0F               	movlw	low((_box_size))
  6507  003382  0EEE               	movwf	tblptrl
  6508  003384  6EF6               	if	1	;There is more than 1 active tblptr byte
  6509  003386                     	movlw	high((_box_size))
  6510  003386  0E3F               	movwf	tblptrh
  6511  003388  6EF7               	endif
  6512  00338A                     	if	0	;There are less than 3 active tblptr bytes
  6513  00338A                     	movlw	low highword((_box_size))
  6516  00338A                     	tblrd*+
  6517  00338A  0009               	
  6518                           	movff	tablat,(c:___awdiv@dividend)
  6519  00338C  CFF5 F001          	tblrd*-
  6520  003390  000A               	
  6521                           	movff	tablat,(c:___awdiv@dividend+1)
  6522  003392  CFF5 F002          
  6523                           	movlw	high(02h)
  6524  003396  0E00               	movwf	((c:___awdiv@divisor+1)),c
  6525  003398  6E04               	movlw	low(02h)
  6526  00339A  0E02               	movwf	((c:___awdiv@divisor)),c
  6527  00339C  6E03               	call	___awdiv	;wreg free
  6528  00339E  EC45  F013         	movf	(0+?___awdiv),c,w
  6529  0033A2  5001               	addwf	((c:drawOverlay@h_pos)),c,w
  6530  0033A4  2457               	movwf	((c:draw_v_line@x2)),c
  6531  0033A6  6E10               	movlw	low((_box_size))
  6532  0033A8  0EEE               	movwf	tblptrl
  6533  0033AA  6EF6               	if	1	;There is more than 1 active tblptr byte
  6534  0033AC                     	movlw	high((_box_size))
  6535  0033AC  0E3F               	movwf	tblptrh
  6536  0033AE  6EF7               	endif
  6537  0033B0                     	if	0	;There are less than 3 active tblptr bytes
  6538  0033B0                     	movlw	low highword((_box_size))
  6541  0033B0                     	tblrd	*
  6542  0033B0  0008               	
  6543                           	movff	tablat,??_drawOverlay+0+0
  6544  0033B2  CFF5 F049          	bcf	status,0
  6545  0033B6  90D8               	rlcf	(??_drawOverlay+0+0),c,w
  6546  0033B8  3449               	addwf	((c:drawOverlay@v_pos)),c,w
  6547  0033BA  2459               	movwf	((c:draw_v_line@y2)),c
  6548  0033BC  6E11               	movlw	low((_cursor_colour))
  6549  0033BE  0EEC               	movwf	tblptrl
  6550  0033C0  6EF6               	if	1	;There is more than 1 active tblptr byte
  6551  0033C2                     	movlw	high((_cursor_colour))
  6552  0033C2  0E3F               	movwf	tblptrh
  6553  0033C4  6EF7               	endif
  6554  0033C6                     	if	0	;There are less than 3 active tblptr bytes
  6555  0033C6                     	movlw	low highword((_cursor_colour))
  6558  0033C6                     	tblrd*+
  6559  0033C6  0009               	
  6560                           	movff	tablat,(c:draw_v_line@colour)
  6561  0033C8  CFF5 F012          	tblrd*-
  6562  0033CC  000A               	
  6563                           	movff	tablat,(c:draw_v_line@colour+1)
  6564  0033CE  CFF5 F013          
  6565                           	movlw	low((_box_size))
  6566  0033D2  0EEE               	movwf	tblptrl
  6567  0033D4  6EF6               	if	1	;There is more than 1 active tblptr byte
  6568  0033D6                     	movlw	high((_box_size))
  6569  0033D6  0E3F               	movwf	tblptrh
  6570  0033D8  6EF7               	endif
  6571  0033DA                     	if	0	;There are less than 3 active tblptr bytes
  6572  0033DA                     	movlw	low highword((_box_size))
  6575  0033DA                     	tblrd*+
  6576  0033DA  0009               	
  6577                           	movff	tablat,(c:___awdiv@dividend)
  6578  0033DC  CFF5 F001          	tblrd*-
  6579  0033E0  000A               	
  6580                           	movff	tablat,(c:___awdiv@dividend+1)
  6581  0033E2  CFF5 F002          
  6582                           	movlw	high(02h)
  6583  0033E6  0E00               	movwf	((c:___awdiv@divisor+1)),c
  6584  0033E8  6E04               	movlw	low(02h)
  6585  0033EA  0E02               	movwf	((c:___awdiv@divisor)),c
  6586  0033EC  6E03               	call	___awdiv	;wreg free
  6587  0033EE  EC45  F013         	movf	(0+?___awdiv),c,w
  6588  0033F2  5001               	addwf	((c:drawOverlay@h_pos)),c,w
  6589  0033F4  2457               	
  6590                           	call	_draw_v_line
  6591  0033F6  EC0E  F011         	line	234
  6592                           	
  6593                           l121:
  6594  0033FA                     	return	;funcret
  6595  0033FA  0012               	opt stack 0
  6596                           GLOBAL	__end_of_drawOverlay
  6597                           	__end_of_drawOverlay:
  6598  0033FC                     	signat	_drawOverlay,12409
  6599                           	global	_draw_v_line
  6600                           
  6601 ;; *************** function _draw_v_line *****************
  6602 ;; Defined at:
  6603 ;;		line 183 in file "ST7735.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  x1              1    wreg     unsigned char 
  6606 ;;  y1              1   14[COMRAM] unsigned char 
  6607 ;;  x2              1   15[COMRAM] unsigned char 
  6608 ;;  y2              1   16[COMRAM] unsigned char 
  6609 ;;  colour          2   17[COMRAM] unsigned int 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  x1              1   22[COMRAM] unsigned char 
  6612 ;;  y               2   23[COMRAM] int 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      void 
  6615 ;; Registers used:
  6616 ;;		wreg, status,2, status,0, cstack
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  6622 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  6623 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  6624 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  6625 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  6626 ;;Total ram usage:       11 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    4
  6629 ;; This function calls:
  6630 ;;		_draw_pixel
  6631 ;; This function is called by:
  6632 ;;		_drawOverlay
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           psect	text13,class=CODE,space=0,reloc=2,group=0
  6636                           	file	"ST7735.c"
  6637                           	line	183
  6638                           global __ptext13
  6639                           __ptext13:
  6640  00221C                     psect	text13
  6641                           	file	"ST7735.c"
  6642                           	line	183
  6643                           	global	__size_of_draw_v_line
  6644                           	__size_of_draw_v_line	equ	__end_of_draw_v_line-_draw_v_line
  6645  0000                     	
  6646                           _draw_v_line:
  6647  00221C                     ;incstack = 0
  6648                           	opt	stack 24
  6649                           ;draw_v_line@x1 stored from wreg
  6650                           	movwf	((c:draw_v_line@x1)),c
  6651  00221C  6E17               	line	185
  6652                           	
  6653                           l1909:
  6654  00221E                     ;ST7735.c: 185: for(int y = y1; y < y2; y++) {
  6655                           	movff	(c:draw_v_line@y1),(c:draw_v_line@y)
  6656  00221E  C00F  F018         	clrf	((c:draw_v_line@y+1)),c
  6657  002222  6A19               	goto	l1915
  6658  002224  EF21  F011         	
  6659                           l234:
  6660  002228                     	line	186
  6661                           	
  6662                           l1911:
  6663  002228                     ;ST7735.c: 186: draw_pixel(x1, y, colour);
  6664                           	movff	(c:draw_v_line@y),(c:draw_pixel@y)
  6665  002228  C018  F00B         	movff	(c:draw_v_line@colour),(c:draw_pixel@colour)
  6666  00222C  C012  F00C         	movff	(c:draw_v_line@colour+1),(c:draw_pixel@colour+1)
  6667  002230  C013  F00D         	movf	((c:draw_v_line@x1)),c,w
  6668  002234  5017               	
  6669                           	call	_draw_pixel
  6670  002236  ECFA  F00F         	line	185
  6671                           	
  6672                           l1913:
  6673  00223A                     	infsnz	((c:draw_v_line@y)),c
  6674  00223A  4A18               	incf	((c:draw_v_line@y+1)),c
  6675  00223C  2A19               	goto	l1915
  6676  00223E  EF21  F011         	
  6677                           l233:
  6678  002242                     	
  6679                           l1915:
  6680  002242                     	movf	((c:draw_v_line@y2)),c,w
  6681  002242  5011               	movwf	(??_draw_v_line+0+0)&0ffh,c
  6682  002244  6E14               	clrf	(??_draw_v_line+0+0+1)&0ffh,c
  6683  002246  6A15               
  6684                           		movf	(??_draw_v_line+0+0),c,w
  6685  002248  5014               	subwf	((c:draw_v_line@y)),c,w
  6686  00224A  5C18               	movf	((c:draw_v_line@y+1)),c,w
  6687  00224C  5019               	xorlw	80h
  6688  00224E  0A80               	movwf	(??_draw_v_line+2+0)&0ffh,c
  6689  002250  6E16               	movf	(??_draw_v_line+0+1),c,w
  6690  002252  5015               	xorlw	80h
  6691  002254  0A80               	subwfb	(??_draw_v_line+2+0)&0ffh,c,w
  6692  002256  5816               	btfss	status,0
  6693  002258  A0D8               	goto	u1261
  6694  00225A  EF31  F011         	goto	u1260
  6695  00225E  EF33  F011         
  6696                           u1261:
  6697  002262                     	goto	l1911
  6698  002262  EF14  F011         u1260:
  6699  002266                     	goto	l236
  6700  002266  EF35  F011         	
  6701                           l235:
  6702  00226A                     	line	188
  6703                           	
  6704                           l236:
  6705  00226A                     	return	;funcret
  6706  00226A  0012               	opt stack 0
  6707                           GLOBAL	__end_of_draw_v_line
  6708                           	__end_of_draw_v_line:
  6709  00226C                     	signat	_draw_v_line,20601
  6710                           	global	_draw_string
  6711                           
  6712 ;; *************** function _draw_string *****************
  6713 ;; Defined at:
  6714 ;;		line 274 in file "ST7735.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;  x               1    wreg     unsigned char 
  6717 ;;  y               1   53[COMRAM] unsigned char 
  6718 ;;  colour          2   54[COMRAM] unsigned int 
  6719 ;;  size            1   56[COMRAM] unsigned char 
  6720 ;;  str             2   57[COMRAM] PTR unsigned char 
  6721 ;;		 -> drawOverlay@temperature_buffer(6), 
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;  x               1   63[COMRAM] unsigned char 
  6724 ;;  char_pos        2   61[COMRAM] int 
  6725 ;;  counter         2   64[COMRAM] int 
  6726 ;;  char_width      2   59[COMRAM] int 
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  1    wreg      void 
  6729 ;; Registers used:
  6730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  6736 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  6737 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  6738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  6739 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  6740 ;;Total ram usage:       13 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; Hardware stack levels required when called:    5
  6743 ;; This function calls:
  6744 ;;		___wmul
  6745 ;;		_draw_char
  6746 ;; This function is called by:
  6747 ;;		_drawOverlay
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           psect	text14,class=CODE,space=0,reloc=2,group=0
  6751                           	line	274
  6752                           global __ptext14
  6753                           __ptext14:
  6754  0024A8                     psect	text14
  6755                           	file	"ST7735.c"
  6756                           	line	274
  6757                           	global	__size_of_draw_string
  6758                           	__size_of_draw_string	equ	__end_of_draw_string-_draw_string
  6759  0000                     	
  6760                           _draw_string:
  6761  0024A8                     ;incstack = 0
  6762                           	opt	stack 23
  6763                           ;draw_string@x stored from wreg
  6764                           	movwf	((c:draw_string@x)),c
  6765  0024A8  6E40               	line	276
  6766                           	
  6767                           l1889:
  6768  0024AA                     ;ST7735.c: 276: int char_width = size * 6;
  6769                           	movf	((c:draw_string@size)),c,w
  6770  0024AA  5039               	mullw	06h
  6771  0024AC  0D06               	movff	prodl,(c:draw_string@char_width)
  6772  0024AE  CFF3 F03C          	movff	prodh,(c:draw_string@char_width+1)
  6773  0024B2  CFF4 F03D          	line	278
  6774                           	
  6775                           l1891:
  6776  0024B6                     ;ST7735.c: 278: int counter = 0;
  6777                           	movlw	high(0)
  6778  0024B6  0E00               	movwf	((c:draw_string@counter+1)),c
  6779  0024B8  6E42               	movlw	low(0)
  6780  0024BA  0E00               	movwf	((c:draw_string@counter)),c
  6781  0024BC  6E41               	line	279
  6782                           ;ST7735.c: 279: while(str[counter] != '\0') {
  6783                           	goto	l1899
  6784  0024BE  EF88  F012         	
  6785                           l262:
  6786  0024C2                     	line	281
  6787                           	
  6788                           l1893:
  6789  0024C2                     ;ST7735.c: 281: int char_pos = x + (counter * char_width);
  6790                           	movff	(c:draw_string@counter),(c:___wmul@multiplier)
  6791  0024C2  C041  F001         	movff	(c:draw_string@counter+1),(c:___wmul@multiplier+1)
  6792  0024C6  C042  F002         	movff	(c:draw_string@char_width),(c:___wmul@multiplicand)
  6793  0024CA  C03C  F003         	movff	(c:draw_string@char_width+1),(c:___wmul@multiplicand+1)
  6794  0024CE  C03D  F004         	call	___wmul	;wreg free
  6795  0024D2  EC46  F010         	movf	((c:draw_string@x)),c,w
  6796  0024D6  5040               	addwf	(0+?___wmul),c,w
  6797  0024D8  2401               	movwf	((c:draw_string@char_pos)),c
  6798  0024DA  6E3E               	movlw	0
  6799  0024DC  0E00               	addwfc	(1+?___wmul),c,w
  6800  0024DE  2002               	movwf	1+((c:draw_string@char_pos)),c
  6801  0024E0  6E3F               	line	283
  6802                           	
  6803                           l1895:
  6804  0024E2                     ;ST7735.c: 283: draw_char(char_pos, y, str[counter], colour, size);
  6805                           	movff	(c:draw_string@y),(c:draw_char@y)
  6806  0024E2  C036  F029         	movf	((c:draw_string@counter)),c,w
  6807  0024E6  5041               	addwf	((c:draw_string@str)),c,w
  6808  0024E8  243A               	movwf	c:fsr2l
  6809  0024EA  6ED9               	movf	((c:draw_string@counter+1)),c,w
  6810  0024EC  5042               	addwfc	((c:draw_string@str+1)),c,w
  6811  0024EE  203B               	movwf	1+c:fsr2l
  6812  0024F0  6EDA               	movf	indf2,w
  6813  0024F2  50DF               	movwf	((c:draw_char@c)),c
  6814  0024F4  6E2A               	movff	(c:draw_string@colour),(c:draw_char@colour)
  6815  0024F6  C037  F02B         	movff	(c:draw_string@colour+1),(c:draw_char@colour+1)
  6816  0024FA  C038  F02C         	movff	(c:draw_string@size),(c:draw_char@size)
  6817  0024FE  C039  F02D         	movf	((c:draw_string@char_pos)),c,w
  6818  002502  503E               	
  6819                           	call	_draw_char
  6820  002504  EC6E  F017         	line	285
  6821                           	
  6822                           l1897:
  6823  002508                     ;ST7735.c: 285: counter++;
  6824                           	infsnz	((c:draw_string@counter)),c
  6825  002508  4A41               	incf	((c:draw_string@counter+1)),c
  6826  00250A  2A42               	goto	l1899
  6827  00250C  EF88  F012         	line	286
  6828                           	
  6829                           l261:
  6830  002510                     	line	279
  6831                           	
  6832                           l1899:
  6833  002510                     	movf	((c:draw_string@counter)),c,w
  6834  002510  5041               	addwf	((c:draw_string@str)),c,w
  6835  002512  243A               	movwf	c:fsr2l
  6836  002514  6ED9               	movf	((c:draw_string@counter+1)),c,w
  6837  002516  5042               	addwfc	((c:draw_string@str+1)),c,w
  6838  002518  203B               	movwf	1+c:fsr2l
  6839  00251A  6EDA               	movf	indf2,w
  6840  00251C  50DF               	btfss	status,2
  6841  00251E  A4D8               	goto	u1241
  6842  002520  EF94  F012         	goto	u1240
  6843  002524  EF96  F012         u1241:
  6844  002528                     	goto	l1893
  6845  002528  EF61  F012         u1240:
  6846  00252C                     	goto	l264
  6847  00252C  EF98  F012         	
  6848                           l263:
  6849  002530                     	line	287
  6850                           	
  6851                           l264:
  6852  002530                     	return	;funcret
  6853  002530  0012               	opt stack 0
  6854                           GLOBAL	__end_of_draw_string
  6855                           	__end_of_draw_string:
  6856  002532                     	signat	_draw_string,20601
  6857                           	global	_draw_char
  6858                           
  6859 ;; *************** function _draw_char *****************
  6860 ;; Defined at:
  6861 ;;		line 245 in file "ST7735.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  x               1    wreg     unsigned char 
  6864 ;;  y               1   40[COMRAM] unsigned char 
  6865 ;;  c               1   41[COMRAM] unsigned char 
  6866 ;;  colour          2   42[COMRAM] unsigned int 
  6867 ;;  size            1   44[COMRAM] unsigned char 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  x               1   50[COMRAM] unsigned char 
  6870 ;;  line            1   49[COMRAM] unsigned char 
  6871 ;;  i               1   52[COMRAM] unsigned char 
  6872 ;;  j               1   51[COMRAM] unsigned char 
  6873 ;; Return value:  Size  Location     Type
  6874 ;;                  1    wreg      void 
  6875 ;; Registers used:
  6876 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  6882 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  6883 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  6884 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  6885 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  6886 ;;Total ram usage:       13 bytes
  6887 ;; Hardware stack levels used:    1
  6888 ;; Hardware stack levels required when called:    4
  6889 ;; This function calls:
  6890 ;;		___wmul
  6891 ;;		_draw_pixel
  6892 ;;		_fill_rectangle
  6893 ;; This function is called by:
  6894 ;;		_draw_string
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           psect	text15,class=CODE,space=0,reloc=2,group=0
  6898                           	line	245
  6899                           global __ptext15
  6900                           __ptext15:
  6901  002EDC                     psect	text15
  6902                           	file	"ST7735.c"
  6903                           	line	245
  6904                           	global	__size_of_draw_char
  6905                           	__size_of_draw_char	equ	__end_of_draw_char-_draw_char
  6906  0000                     	
  6907                           _draw_char:
  6908  002EDC                     ;incstack = 0
  6909                           	opt	stack 23
  6910                           ;draw_char@x stored from wreg
  6911                           	movwf	((c:draw_char@x)),c
  6912  002EDC  6E33               	line	249
  6913                           	
  6914                           l1721:
  6915  002EDE                     ;ST7735.c: 246: char i, j;;ST7735.c: 249: fill_rectangle(x, y, x+(5*size), y+(7*size), 0
                                 x0000);
  6916                           	movff	(c:draw_char@x),(c:fill_rectangle@x1)
  6917  002EDE  C033  F017         	clrf	((c:fill_rectangle@x1+1)),c
  6918  002EE2  6A18               	movff	(c:draw_char@y),(c:fill_rectangle@y1)
  6919  002EE4  C029  F019         	clrf	((c:fill_rectangle@y1+1)),c
  6920  002EE8  6A1A               	movf	((c:draw_char@size)),c,w
  6921  002EEA  502D               	mullw	05h
  6922  002EEC  0D05               	movf	((c:draw_char@x)),c,w
  6923  002EEE  5033               	addwf	(prodl),c,w
  6924  002EF0  24F3               	movwf	((c:fill_rectangle@x2)),c
  6925  002EF2  6E1B               	movlw	0
  6926  002EF4  0E00               	addwfc	(prodh),c,w
  6927  002EF6  20F4               	movwf	1+((c:fill_rectangle@x2)),c
  6928  002EF8  6E1C               	movf	((c:draw_char@size)),c,w
  6929  002EFA  502D               	mullw	07h
  6930  002EFC  0D07               	movf	((c:draw_char@y)),c,w
  6931  002EFE  5029               	addwf	(prodl),c,w
  6932  002F00  24F3               	movwf	((c:fill_rectangle@y2)),c
  6933  002F02  6E1D               	movlw	0
  6934  002F04  0E00               	addwfc	(prodh),c,w
  6935  002F06  20F4               	movwf	1+((c:fill_rectangle@y2)),c
  6936  002F08  6E1E               	movlw	high(0)
  6937  002F0A  0E00               	movwf	((c:fill_rectangle@colour+1)),c
  6938  002F0C  6E20               	movlw	low(0)
  6939  002F0E  0E00               	movwf	((c:fill_rectangle@colour)),c
  6940  002F10  6E1F               	call	_fill_rectangle	;wreg free
  6941  002F12  ECBB  F013         	line	251
  6942                           	
  6943                           l1723:
  6944  002F16                     ;ST7735.c: 251: for(i=0; i<5; i++ ) {
  6945                           	movlw	low(0)
  6946  002F16  0E00               	movwf	((c:draw_char@i)),c
  6947  002F18  6E35               	
  6948                           l1725:
  6949  002F1A                     		movlw	05h-1
  6950  002F1A  0E04               	cpfsgt	((c:draw_char@i)),c
  6951  002F1C  6435               	goto	u931
  6952  002F1E  EF93  F017         	goto	u930
  6953  002F22  EF95  F017         
  6954                           u931:
  6955  002F26                     	goto	l1729
  6956  002F26  EF99  F017         u930:
  6957  002F2A                     	goto	l258
  6958  002F2A  EF51  F018         	
  6959                           l1727:
  6960  002F2E                     	goto	l258
  6961  002F2E  EF51  F018         	
  6962                           l249:
  6963  002F32                     	line	253
  6964                           	
  6965                           l1729:
  6966  002F32                     ;ST7735.c: 252: unsigned char line;;ST7735.c: 253: if(c < 'S')
  6967                           		movlw	053h-0
  6968  002F32  0E53               	cpfslt	((c:draw_char@c)),c
  6969  002F34  602A               	goto	u941
  6970  002F36  EF9F  F017         	goto	u940
  6971  002F3A  EFA1  F017         
  6972                           u941:
  6973  002F3E                     	goto	l1733
  6974  002F3E  EFBC  F017         u940:
  6975  002F42                     	line	254
  6976                           	
  6977                           l1731:
  6978  002F42                     ;ST7735.c: 254: line = Font[(c - 32)*5 + i];
  6979                           	movlw	low(0FFE0h)
  6980  002F42  0EE0               	addwf	((c:draw_char@c)),c,w
  6981  002F44  242A               	movwf	((c:___wmul@multiplier)),c
  6982  002F46  6E01               	clrf	1+((c:___wmul@multiplier)),c
  6983  002F48  6A02               	movlw	high(0FFE0h)
  6984  002F4A  0EFF               	addwfc	1+((c:___wmul@multiplier)),c
  6985  002F4C  2202               	movlw	high(05h)
  6986  002F4E  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  6987  002F50  6E04               	movlw	low(05h)
  6988  002F52  0E05               	movwf	((c:___wmul@multiplicand)),c
  6989  002F54  6E03               	call	___wmul	;wreg free
  6990  002F56  EC46  F010         	movf	((c:draw_char@i)),c,w
  6991  002F5A  5035               	addwf	(0+?___wmul),c
  6992  002F5C  2601               	movlw	0
  6993  002F5E  0E00               	addwfc	(1+?___wmul),c
  6994  002F60  2202               	movlw	low((_Font))
  6995  002F62  0E03               	addwf	(0+?___wmul),c,w
  6996  002F64  2401               	movwf	tblptrl
  6997  002F66  6EF6               	movlw	high((_Font))
  6998  002F68  0E3E               	addwfc	(1+?___wmul),c,w
  6999  002F6A  2002               	movwf	tblptrh
  7000  002F6C  6EF7               	if	0	;There are less than 3 active tblptr bytes
  7001  002F6E                     	clrf	tblptru
  7003                           	global __mediumconst
  7006  002F6E                     	tblrd	*
  7007  002F6E  0008               	
  7008                           	movff	tablat,(c:draw_char@line)
  7009  002F70  CFF5 F032          	goto	l1735
  7010  002F74  EFD7  F017         	line	255
  7011                           	
  7012                           l251:
  7013  002F78                     	line	256
  7014                           	
  7015                           l1733:
  7016  002F78                     ;ST7735.c: 255: else;ST7735.c: 256: line = Font2[(c - 'S')*5 + i];
  7017                           	movlw	low(0FFADh)
  7018  002F78  0EAD               	addwf	((c:draw_char@c)),c,w
  7019  002F7A  242A               	movwf	((c:___wmul@multiplier)),c
  7020  002F7C  6E01               	clrf	1+((c:___wmul@multiplier)),c
  7021  002F7E  6A02               	movlw	high(0FFADh)
  7022  002F80  0EFF               	addwfc	1+((c:___wmul@multiplier)),c
  7023  002F82  2202               	movlw	high(05h)
  7024  002F84  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  7025  002F86  6E04               	movlw	low(05h)
  7026  002F88  0E05               	movwf	((c:___wmul@multiplicand)),c
  7027  002F8A  6E03               	call	___wmul	;wreg free
  7028  002F8C  EC46  F010         	movf	((c:draw_char@i)),c,w
  7029  002F90  5035               	addwf	(0+?___wmul),c
  7030  002F92  2601               	movlw	0
  7031  002F94  0E00               	addwfc	(1+?___wmul),c
  7032  002F96  2202               	movlw	low((_Font2))
  7033  002F98  0E02               	addwf	(0+?___wmul),c,w
  7034  002F9A  2401               	movwf	tblptrl
  7035  002F9C  6EF6               	movlw	high((_Font2))
  7036  002F9E  0E3F               	addwfc	(1+?___wmul),c,w
  7037  002FA0  2002               	movwf	tblptrh
  7038  002FA2  6EF7               	if	0	;There are less than 3 active tblptr bytes
  7039  002FA4                     	clrf	tblptru
  7041                           	global __mediumconst
  7044  002FA4                     	tblrd	*
  7045  002FA4  0008               	
  7046                           	movff	tablat,(c:draw_char@line)
  7047  002FA6  CFF5 F032          	goto	l1735
  7048  002FAA  EFD7  F017         	
  7049                           l252:
  7050  002FAE                     	line	257
  7051                           	
  7052                           l1735:
  7053  002FAE                     ;ST7735.c: 257: for(j=0; j<7; j++, line >>= 1) {
  7054                           	movlw	low(0)
  7055  002FAE  0E00               	movwf	((c:draw_char@j)),c
  7056  002FB0  6E34               	
  7057                           l1737:
  7058  002FB2                     		movlw	07h-1
  7059  002FB2  0E06               	cpfsgt	((c:draw_char@j)),c
  7060  002FB4  6434               	goto	u951
  7061  002FB6  EFDF  F017         	goto	u950
  7062  002FBA  EFE1  F017         
  7063                           u951:
  7064  002FBE                     	goto	l253
  7065  002FBE  EFE5  F017         u950:
  7066  002FC2                     	goto	l1753
  7067  002FC2  EF46  F018         	
  7068                           l1739:
  7069  002FC6                     	goto	l1753
  7070  002FC6  EF46  F018         	
  7071                           l253:
  7072  002FCA                     	line	258
  7073                           ;ST7735.c: 258: if(line & 0x01) {
  7074                           	
  7075                           	btfss	((c:draw_char@line)),c,(0)&7
  7076  002FCA  A032               	goto	u961
  7077  002FCC  EFEA  F017         	goto	u960
  7078  002FD0  EFEC  F017         u961:
  7079  002FD4                     	goto	l1747
  7080  002FD4  EF39  F018         u960:
  7081  002FD8                     	line	259
  7082                           	
  7083                           l1741:
  7084  002FD8                     ;ST7735.c: 259: if(size == 1)
  7085                           		decf	((c:draw_char@size)),c,w
  7086  002FD8  042D               	btfss	status,2
  7087  002FDA  A4D8               	goto	u971
  7088  002FDC  EFF2  F017         	goto	u970
  7089  002FE0  EFF4  F017         
  7090                           u971:
  7091  002FE4                     	goto	l1745
  7092  002FE4  EF01  F018         u970:
  7093  002FE8                     	line	261
  7094                           	
  7095                           l1743:
  7096  002FE8                     ;ST7735.c: 261: draw_pixel(x+i, y+j, colour);
  7097                           	movf	((c:draw_char@y)),c,w
  7098  002FE8  5029               	addwf	((c:draw_char@j)),c,w
  7099  002FEA  2434               	movwf	((c:draw_pixel@y)),c
  7100  002FEC  6E0B               	movff	(c:draw_char@colour),(c:draw_pixel@colour)
  7101  002FEE  C02B  F00C         	movff	(c:draw_char@colour+1),(c:draw_pixel@colour+1)
  7102  002FF2  C02C  F00D         	movf	((c:draw_char@x)),c,w
  7103  002FF6  5033               	addwf	((c:draw_char@i)),c,w
  7104  002FF8  2435               	
  7105                           	call	_draw_pixel
  7106  002FFA  ECFA  F00F         	goto	l1747
  7107  002FFE  EF39  F018         	line	262
  7108                           	
  7109                           l256:
  7110  003002                     	line	264
  7111                           	
  7112                           l1745:
  7113  003002                     ;ST7735.c: 262: else;ST7735.c: 264: fill_rectangle(x+(i*size), y+(j*size), x+(i*size)+si
                                 ze, y+(j*size)+size, colour);
  7114                           	movf	((c:draw_char@i)),c,w
  7115  003002  5035               	mulwf	((c:draw_char@size)),c
  7116  003004  022D               	movf	((c:draw_char@x)),c,w
  7117  003006  5033               	addwf	(prodl),c,w
  7118  003008  24F3               	movwf	((c:fill_rectangle@x1)),c
  7119  00300A  6E17               	movlw	0
  7120  00300C  0E00               	addwfc	(prodh),c,w
  7121  00300E  20F4               	movwf	1+((c:fill_rectangle@x1)),c
  7122  003010  6E18               	movf	((c:draw_char@j)),c,w
  7123  003012  5034               	mulwf	((c:draw_char@size)),c
  7124  003014  022D               	movf	((c:draw_char@y)),c,w
  7125  003016  5029               	addwf	(prodl),c,w
  7126  003018  24F3               	movwf	((c:fill_rectangle@y1)),c
  7127  00301A  6E19               	movlw	0
  7128  00301C  0E00               	addwfc	(prodh),c,w
  7129  00301E  20F4               	movwf	1+((c:fill_rectangle@y1)),c
  7130  003020  6E1A               	movf	((c:draw_char@i)),c,w
  7131  003022  5035               	mulwf	((c:draw_char@size)),c
  7132  003024  022D               	movf	((c:draw_char@x)),c,w
  7133  003026  5033               	movwf	(??_draw_char+0+0)&0ffh,c
  7134  003028  6E2E               	clrf	(??_draw_char+0+0+1)&0ffh,c
  7135  00302A  6A2F               
  7136                           	movf	(prodl),c,w
  7137  00302C  50F3               	addwf	(??_draw_char+0+0),c
  7138  00302E  262E               	movf	(prodh),c,w
  7139  003030  50F4               	addwfc	(??_draw_char+0+1),c
  7140  003032  222F               	movf	((c:draw_char@size)),c,w
  7141  003034  502D               	addwf	(??_draw_char+0+0),c,w
  7142  003036  242E               	movwf	((c:fill_rectangle@x2)),c
  7143  003038  6E1B               	movlw	0
  7144  00303A  0E00               	addwfc	(??_draw_char+0+1),c,w
  7145  00303C  202F               	movwf	1+((c:fill_rectangle@x2)),c
  7146  00303E  6E1C               	movf	((c:draw_char@j)),c,w
  7147  003040  5034               	mulwf	((c:draw_char@size)),c
  7148  003042  022D               	movf	((c:draw_char@y)),c,w
  7149  003044  5029               	movwf	(??_draw_char+2+0)&0ffh,c
  7150  003046  6E30               	clrf	(??_draw_char+2+0+1)&0ffh,c
  7151  003048  6A31               
  7152                           	movf	(prodl),c,w
  7153  00304A  50F3               	addwf	(??_draw_char+2+0),c
  7154  00304C  2630               	movf	(prodh),c,w
  7155  00304E  50F4               	addwfc	(??_draw_char+2+1),c
  7156  003050  2231               	movf	((c:draw_char@size)),c,w
  7157  003052  502D               	addwf	(??_draw_char+2+0),c,w
  7158  003054  2430               	movwf	((c:fill_rectangle@y2)),c
  7159  003056  6E1D               	movlw	0
  7160  003058  0E00               	addwfc	(??_draw_char+2+1),c,w
  7161  00305A  2031               	movwf	1+((c:fill_rectangle@y2)),c
  7162  00305C  6E1E               	movff	(c:draw_char@colour),(c:fill_rectangle@colour)
  7163  00305E  C02B  F01F         	movff	(c:draw_char@colour+1),(c:fill_rectangle@colour+1)
  7164  003062  C02C  F020         	call	_fill_rectangle	;wreg free
  7165  003066  ECBB  F013         	goto	l1747
  7166  00306A  EF39  F018         	
  7167                           l257:
  7168  00306E                     	goto	l1747
  7169  00306E  EF39  F018         	line	265
  7170                           	
  7171                           l255:
  7172  003072                     	line	257
  7173                           	
  7174                           l1747:
  7175  003072                     	incf	((c:draw_char@j)),c
  7176  003072  2A34               	
  7177                           l1749:
  7178  003074                     	bcf status,0
  7179  003074  90D8               	rrcf	((c:draw_char@line)),c
  7180  003076  3232               
  7181                           	
  7182                           l1751:
  7183  003078                     		movlw	07h-1
  7184  003078  0E06               	cpfsgt	((c:draw_char@j)),c
  7185  00307A  6434               	goto	u981
  7186  00307C  EF42  F018         	goto	u980
  7187  003080  EF44  F018         
  7188                           u981:
  7189  003084                     	goto	l253
  7190  003084  EFE5  F017         u980:
  7191  003088                     	goto	l1753
  7192  003088  EF46  F018         	
  7193                           l254:
  7194  00308C                     	line	251
  7195                           	
  7196                           l1753:
  7197  00308C                     	incf	((c:draw_char@i)),c
  7198  00308C  2A35               	
  7199                           l1755:
  7200  00308E                     		movlw	05h-1
  7201  00308E  0E04               	cpfsgt	((c:draw_char@i)),c
  7202  003090  6435               	goto	u991
  7203  003092  EF4D  F018         	goto	u990
  7204  003096  EF4F  F018         
  7205                           u991:
  7206  00309A                     	goto	l1729
  7207  00309A  EF99  F017         u990:
  7208  00309E                     	goto	l258
  7209  00309E  EF51  F018         	
  7210                           l250:
  7211  0030A2                     	line	268
  7212                           	
  7213                           l258:
  7214  0030A2                     	return	;funcret
  7215  0030A2  0012               	opt stack 0
  7216                           GLOBAL	__end_of_draw_char
  7217                           	__end_of_draw_char:
  7218  0030A4                     	signat	_draw_char,20601
  7219                           	global	_fill_rectangle
  7220                           
  7221 ;; *************** function _fill_rectangle *****************
  7222 ;; Defined at:
  7223 ;;		line 193 in file "ST7735.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;  x1              2   22[COMRAM] int 
  7226 ;;  y1              2   24[COMRAM] int 
  7227 ;;  x2              2   26[COMRAM] int 
  7228 ;;  y2              2   28[COMRAM] int 
  7229 ;;  colour          2   30[COMRAM] unsigned int 
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;  x               2   38[COMRAM] int 
  7232 ;;  y               2   36[COMRAM] int 
  7233 ;;  colour_low      1   35[COMRAM] unsigned char 
  7234 ;;  colour_high     1   34[COMRAM] unsigned char 
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  1    wreg      void 
  7237 ;; Registers used:
  7238 ;;		wreg, status,2, status,0, cstack
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  7244 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7245 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7246 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7247 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7248 ;;Total ram usage:       18 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:    3
  7251 ;; This function calls:
  7252 ;;		_set_draw_window
  7253 ;;		_spi_write
  7254 ;; This function is called by:
  7255 ;;		_drawBuffersToDisplay
  7256 ;;		_main
  7257 ;;		_draw_char
  7258 ;; This function uses a non-reentrant model
  7259 ;;
  7260                           psect	text16,class=CODE,space=0,reloc=2,group=0
  7261                           	line	193
  7262                           global __ptext16
  7263                           __ptext16:
  7264  002776                     psect	text16
  7265                           	file	"ST7735.c"
  7266                           	line	193
  7267                           	global	__size_of_fill_rectangle
  7268                           	__size_of_fill_rectangle	equ	__end_of_fill_rectangle-_fill_rectangle
  7269  0000                     	
  7270                           _fill_rectangle:
  7271  002776                     ;incstack = 0
  7272                           	opt	stack 27
  7273                           	line	195
  7274                           	
  7275                           l1685:
  7276  002776                     ;ST7735.c: 195: unsigned char colour_high = colour >> 8;
  7277                           	movf	((c:fill_rectangle@colour+1)),c,w
  7278  002776  5020               	movwf	((c:fill_rectangle@colour_high)),c
  7279  002778  6E23               	line	196
  7280                           	
  7281                           l1687:
  7282  00277A                     ;ST7735.c: 196: unsigned char colour_low = colour & 0xFF;
  7283                           	movff	(c:fill_rectangle@colour),(c:fill_rectangle@colour_low)
  7284  00277A  C01F  F024         	line	199
  7285                           	
  7286                           l1689:
  7287  00277E                     ;ST7735.c: 199: set_draw_window(x1, y1, x2-1, y2-1);
  7288                           	movff	(c:fill_rectangle@y1),(c:set_draw_window@y1)
  7289  00277E  C019  F007         	decf	((c:fill_rectangle@x2)),c,w
  7290  002782  041B               	movwf	((c:set_draw_window@x2)),c
  7291  002784  6E08               	decf	((c:fill_rectangle@y2)),c,w
  7292  002786  041D               	movwf	((c:set_draw_window@y2)),c
  7293  002788  6E09               	movf	((c:fill_rectangle@x1)),c,w
  7294  00278A  5017               	
  7295                           	call	_set_draw_window
  7296  00278C  ECC3  F010         	line	205
  7297                           	
  7298                           l1691:
  7299  002790                     ;ST7735.c: 205: RC2 = 0;
  7300                           	bcf	c:(31762/8),(31762)&7	;volatile
  7301  002790  9482               	line	207
  7302                           	
  7303                           l1693:
  7304  002792                     ;ST7735.c: 207: for(int y = y2 - y1; y > 0; y--) {
  7305                           	movff	(c:fill_rectangle@y1),??_fill_rectangle+0+0
  7306  002792  C019  F021         	movff	(c:fill_rectangle@y1+1),??_fill_rectangle+0+0+1
  7307  002796  C01A  F022         	comf	(??_fill_rectangle+0+0),c
  7308  00279A  1E21               	comf	(??_fill_rectangle+0+1),c
  7309  00279C  1E22               	infsnz	(??_fill_rectangle+0+0),c
  7310  00279E  4A21               	incf	(??_fill_rectangle+0+1),c
  7311  0027A0  2A22               	movf	((c:fill_rectangle@y2)),c,w
  7312  0027A2  501D               	addwf	(??_fill_rectangle+0+0),c,w
  7313  0027A4  2421               	movwf	((c:fill_rectangle@y)),c
  7314  0027A6  6E25               	movf	((c:fill_rectangle@y2+1)),c,w
  7315  0027A8  501E               	addwfc	(??_fill_rectangle+0+1),c,w
  7316  0027AA  2022               	movwf	1+((c:fill_rectangle@y)),c
  7317  0027AC  6E26               	
  7318                           l1695:
  7319  0027AE                     	btfsc	((c:fill_rectangle@y+1)),c,7
  7320  0027AE  BE26               	goto	u890
  7321  0027B0  EFE4  F013         	movf	((c:fill_rectangle@y+1)),c,w
  7322  0027B4  5026               	bnz	u891
  7323  0027B6  E106               	decf	((c:fill_rectangle@y)),c,w
  7324  0027B8  0425               	btfsc	status,0
  7325  0027BA  B0D8               	goto	u891
  7326  0027BC  EFE2  F013         	goto	u890
  7327  0027C0  EFE4  F013         
  7328                           u891:
  7329  0027C4                     	goto	l1699
  7330  0027C4  EFE8  F013         u890:
  7331  0027C8                     	goto	l240
  7332  0027C8  EF2F  F014         	
  7333                           l1697:
  7334  0027CC                     	goto	l240
  7335  0027CC  EF2F  F014         	
  7336                           l239:
  7337  0027D0                     	line	208
  7338                           	
  7339                           l1699:
  7340  0027D0                     ;ST7735.c: 208: for(int x = x2 - x1; x > 0; x--) {
  7341                           	movff	(c:fill_rectangle@x1),??_fill_rectangle+0+0
  7342  0027D0  C017  F021         	movff	(c:fill_rectangle@x1+1),??_fill_rectangle+0+0+1
  7343  0027D4  C018  F022         	comf	(??_fill_rectangle+0+0),c
  7344  0027D8  1E21               	comf	(??_fill_rectangle+0+1),c
  7345  0027DA  1E22               	infsnz	(??_fill_rectangle+0+0),c
  7346  0027DC  4A21               	incf	(??_fill_rectangle+0+1),c
  7347  0027DE  2A22               	movf	((c:fill_rectangle@x2)),c,w
  7348  0027E0  501B               	addwf	(??_fill_rectangle+0+0),c,w
  7349  0027E2  2421               	movwf	((c:fill_rectangle@x)),c
  7350  0027E4  6E27               	movf	((c:fill_rectangle@x2+1)),c,w
  7351  0027E6  501C               	addwfc	(??_fill_rectangle+0+1),c,w
  7352  0027E8  2022               	movwf	1+((c:fill_rectangle@x)),c
  7353  0027EA  6E28               	btfsc	((c:fill_rectangle@x+1)),c,7
  7354  0027EC  BE28               	goto	u900
  7355  0027EE  EF03  F014         	movf	((c:fill_rectangle@x+1)),c,w
  7356  0027F2  5028               	bnz	u901
  7357  0027F4  E106               	decf	((c:fill_rectangle@x)),c,w
  7358  0027F6  0427               	btfsc	status,0
  7359  0027F8  B0D8               	goto	u901
  7360  0027FA  EF01  F014         	goto	u900
  7361  0027FE  EF03  F014         
  7362                           u901:
  7363  002802                     	goto	l1703
  7364  002802  EF07  F014         u900:
  7365  002806                     	goto	l1709
  7366  002806  EF1F  F014         	
  7367                           l1701:
  7368  00280A                     	goto	l1709
  7369  00280A  EF1F  F014         	
  7370                           l241:
  7371  00280E                     	line	209
  7372                           	
  7373                           l1703:
  7374  00280E                     ;ST7735.c: 209: spi_write(colour_high);
  7375                           	movf	((c:fill_rectangle@colour_high)),c,w
  7376  00280E  5023               	
  7377                           	call	_spi_write
  7378  002810  EC99  F012         	line	210
  7379                           ;ST7735.c: 210: spi_write(colour_low);
  7380                           	movf	((c:fill_rectangle@colour_low)),c,w
  7381  002814  5024               	
  7382                           	call	_spi_write
  7383  002816  EC99  F012         	line	208
  7384                           	
  7385                           l1705:
  7386  00281A                     	decf	((c:fill_rectangle@x)),c
  7387  00281A  0627               	btfss	status,0
  7388  00281C  A0D8               	decf	((c:fill_rectangle@x+1)),c
  7389  00281E  0628               	
  7390                           l1707:
  7391  002820                     	btfsc	((c:fill_rectangle@x+1)),c,7
  7392  002820  BE28               	goto	u910
  7393  002822  EF1D  F014         	movf	((c:fill_rectangle@x+1)),c,w
  7394  002826  5028               	bnz	u911
  7395  002828  E106               	decf	((c:fill_rectangle@x)),c,w
  7396  00282A  0427               	btfsc	status,0
  7397  00282C  B0D8               	goto	u911
  7398  00282E  EF1B  F014         	goto	u910
  7399  002832  EF1D  F014         
  7400                           u911:
  7401  002836                     	goto	l1703
  7402  002836  EF07  F014         u910:
  7403  00283A                     	goto	l1709
  7404  00283A  EF1F  F014         	
  7405                           l242:
  7406  00283E                     	line	207
  7407                           	
  7408                           l1709:
  7409  00283E                     	decf	((c:fill_rectangle@y)),c
  7410  00283E  0625               	btfss	status,0
  7411  002840  A0D8               	decf	((c:fill_rectangle@y+1)),c
  7412  002842  0626               	
  7413                           l1711:
  7414  002844                     	btfsc	((c:fill_rectangle@y+1)),c,7
  7415  002844  BE26               	goto	u920
  7416  002846  EF2F  F014         	movf	((c:fill_rectangle@y+1)),c,w
  7417  00284A  5026               	bnz	u921
  7418  00284C  E106               	decf	((c:fill_rectangle@y)),c,w
  7419  00284E  0425               	btfsc	status,0
  7420  002850  B0D8               	goto	u921
  7421  002852  EF2D  F014         	goto	u920
  7422  002856  EF2F  F014         
  7423                           u921:
  7424  00285A                     	goto	l1699
  7425  00285A  EFE8  F013         u920:
  7426  00285E                     	
  7427                           l240:
  7428  00285E                     	line	214
  7429                           ;ST7735.c: 211: };ST7735.c: 212: };ST7735.c: 214: RC2 = 1;
  7430                           	bsf	c:(31762/8),(31762)&7	;volatile
  7431  00285E  8482               	line	215
  7432                           	
  7433                           l243:
  7434  002860                     	return	;funcret
  7435  002860  0012               	opt stack 0
  7436                           GLOBAL	__end_of_fill_rectangle
  7437                           	__end_of_fill_rectangle:
  7438  002862                     	signat	_fill_rectangle,20601
  7439                           	global	___wmul
  7440                           
  7441 ;; *************** function ___wmul *****************
  7442 ;; Defined at:
  7443 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;  multiplier      2    0[COMRAM] unsigned int 
  7446 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  product         2    4[COMRAM] unsigned int 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  2    0[COMRAM] unsigned int 
  7451 ;; Registers used:
  7452 ;;		wreg, status,2, status,0, prodl, prodh
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  7458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7461 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7462 ;;Total ram usage:        6 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; This function calls:
  7465 ;;		Nothing
  7466 ;; This function is called by:
  7467 ;;		_drawOverlay
  7468 ;;		_drawBuffersToDisplay
  7469 ;;		_draw_char
  7470 ;;		_draw_string
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           psect	text17,class=CODE,space=0,reloc=2,group=1
  7474                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7475                           	line	15
  7476                           global __ptext17
  7477                           __ptext17:
  7478  00208C                     psect	text17
  7479                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7480                           	line	15
  7481                           	global	__size_of___wmul
  7482                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  7483  0000                     	
  7484                           ___wmul:
  7485  00208C                     ;incstack = 0
  7486                           	opt	stack 26
  7487                           	line	37
  7488                           	
  7489                           l1715:
  7490  00208C                     	movf	((c:___wmul@multiplier)),c,w
  7491  00208C  5001               	mulwf	((c:___wmul@multiplicand)),c
  7492  00208E  0203               	movff	prodl,(c:___wmul@product)
  7493  002090  CFF3 F005          	movff	prodh,(c:___wmul@product+1)
  7494  002094  CFF4 F006          	line	38
  7495                           	movf	((c:___wmul@multiplier)),c,w
  7496  002098  5001               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
  7497  00209A  0204               	movf	(prodl),c,w
  7498  00209C  50F3               	addwf	((c:___wmul@product+1)),c
  7499  00209E  2606               
  7500                           	line	39
  7501                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
  7502  0020A0  5002               	mulwf	((c:___wmul@multiplicand)),c
  7503  0020A2  0203               	movf	(prodl),c,w
  7504  0020A4  50F3               	addwf	((c:___wmul@product+1)),c
  7505  0020A6  2606               
  7506                           	line	52
  7507                           	
  7508                           l1717:
  7509  0020A8                     	movff	(c:___wmul@product),(c:?___wmul)
  7510  0020A8  C005  F001         	movff	(c:___wmul@product+1),(c:?___wmul+1)
  7511  0020AC  C006  F002         	goto	l304
  7512  0020B0  EF5A  F010         	
  7513                           l1719:
  7514  0020B4                     	line	53
  7515                           	
  7516                           l304:
  7517  0020B4                     	return	;funcret
  7518  0020B4  0012               	opt stack 0
  7519                           GLOBAL	__end_of___wmul
  7520                           	__end_of___wmul:
  7521  0020B6                     	signat	___wmul,8314
  7522                           	global	_draw_h_line
  7523                           
  7524 ;; *************** function _draw_h_line *****************
  7525 ;; Defined at:
  7526 ;;		line 173 in file "ST7735.c"
  7527 ;; Parameters:    Size  Location     Type
  7528 ;;  x1              1    wreg     unsigned char 
  7529 ;;  y1              1   14[COMRAM] unsigned char 
  7530 ;;  x2              1   15[COMRAM] unsigned char 
  7531 ;;  y2              1   16[COMRAM] unsigned char 
  7532 ;;  colour          2   17[COMRAM] unsigned int 
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;  x1              1   22[COMRAM] unsigned char 
  7535 ;;  x               2   23[COMRAM] int 
  7536 ;; Return value:  Size  Location     Type
  7537 ;;                  1    wreg      void 
  7538 ;; Registers used:
  7539 ;;		wreg, status,2, status,0, cstack
  7540 ;; Tracked objects:
  7541 ;;		On entry : 0/0
  7542 ;;		On exit  : 0/0
  7543 ;;		Unchanged: 0/0
  7544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  7545 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7546 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7547 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7548 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7549 ;;Total ram usage:       11 bytes
  7550 ;; Hardware stack levels used:    1
  7551 ;; Hardware stack levels required when called:    4
  7552 ;; This function calls:
  7553 ;;		_draw_pixel
  7554 ;; This function is called by:
  7555 ;;		_drawOverlay
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           psect	text18,class=CODE,space=0,reloc=2,group=0
  7559                           	file	"ST7735.c"
  7560                           	line	173
  7561                           global __ptext18
  7562                           __ptext18:
  7563  0021CC                     psect	text18
  7564                           	file	"ST7735.c"
  7565                           	line	173
  7566                           	global	__size_of_draw_h_line
  7567                           	__size_of_draw_h_line	equ	__end_of_draw_h_line-_draw_h_line
  7568  0000                     	
  7569                           _draw_h_line:
  7570  0021CC                     ;incstack = 0
  7571                           	opt	stack 24
  7572                           ;draw_h_line@x1 stored from wreg
  7573                           	movwf	((c:draw_h_line@x1)),c
  7574  0021CC  6E17               	line	175
  7575                           	
  7576                           l1901:
  7577  0021CE                     ;ST7735.c: 175: for(int x = x1; x < x2; x++) {
  7578                           	movff	(c:draw_h_line@x1),(c:draw_h_line@x)
  7579  0021CE  C017  F018         	clrf	((c:draw_h_line@x+1)),c
  7580  0021D2  6A19               	goto	l1907
  7581  0021D4  EFF9  F010         	
  7582                           l228:
  7583  0021D8                     	line	176
  7584                           	
  7585                           l1903:
  7586  0021D8                     ;ST7735.c: 176: draw_pixel(x, y1, colour);
  7587                           	movff	(c:draw_h_line@y1),(c:draw_pixel@y)
  7588  0021D8  C00F  F00B         	movff	(c:draw_h_line@colour),(c:draw_pixel@colour)
  7589  0021DC  C012  F00C         	movff	(c:draw_h_line@colour+1),(c:draw_pixel@colour+1)
  7590  0021E0  C013  F00D         	movf	((c:draw_h_line@x)),c,w
  7591  0021E4  5018               	
  7592                           	call	_draw_pixel
  7593  0021E6  ECFA  F00F         	line	175
  7594                           	
  7595                           l1905:
  7596  0021EA                     	infsnz	((c:draw_h_line@x)),c
  7597  0021EA  4A18               	incf	((c:draw_h_line@x+1)),c
  7598  0021EC  2A19               	goto	l1907
  7599  0021EE  EFF9  F010         	
  7600                           l227:
  7601  0021F2                     	
  7602                           l1907:
  7603  0021F2                     	movf	((c:draw_h_line@x2)),c,w
  7604  0021F2  5010               	movwf	(??_draw_h_line+0+0)&0ffh,c
  7605  0021F4  6E14               	clrf	(??_draw_h_line+0+0+1)&0ffh,c
  7606  0021F6  6A15               
  7607                           		movf	(??_draw_h_line+0+0),c,w
  7608  0021F8  5014               	subwf	((c:draw_h_line@x)),c,w
  7609  0021FA  5C18               	movf	((c:draw_h_line@x+1)),c,w
  7610  0021FC  5019               	xorlw	80h
  7611  0021FE  0A80               	movwf	(??_draw_h_line+2+0)&0ffh,c
  7612  002200  6E16               	movf	(??_draw_h_line+0+1),c,w
  7613  002202  5015               	xorlw	80h
  7614  002204  0A80               	subwfb	(??_draw_h_line+2+0)&0ffh,c,w
  7615  002206  5816               	btfss	status,0
  7616  002208  A0D8               	goto	u1251
  7617  00220A  EF09  F011         	goto	u1250
  7618  00220E  EF0B  F011         
  7619                           u1251:
  7620  002212                     	goto	l1903
  7621  002212  EFEC  F010         u1250:
  7622  002216                     	goto	l230
  7623  002216  EF0D  F011         	
  7624                           l229:
  7625  00221A                     	line	178
  7626                           	
  7627                           l230:
  7628  00221A                     	return	;funcret
  7629  00221A  0012               	opt stack 0
  7630                           GLOBAL	__end_of_draw_h_line
  7631                           	__end_of_draw_h_line:
  7632  00221C                     	signat	_draw_h_line,20601
  7633                           	global	_draw_pixel
  7634                           
  7635 ;; *************** function _draw_pixel *****************
  7636 ;; Defined at:
  7637 ;;		line 162 in file "ST7735.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  x               1    wreg     unsigned char 
  7640 ;;  y               1   10[COMRAM] unsigned char 
  7641 ;;  colour          2   11[COMRAM] unsigned int 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;  x               1   13[COMRAM] unsigned char 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      void 
  7646 ;; Registers used:
  7647 ;;		wreg, status,2, status,0, cstack
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  7653 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7656 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7657 ;;Total ram usage:        4 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; Hardware stack levels required when called:    3
  7660 ;; This function calls:
  7661 ;;		_lcd_write_data
  7662 ;;		_set_draw_window
  7663 ;; This function is called by:
  7664 ;;		_draw_h_line
  7665 ;;		_draw_v_line
  7666 ;;		_draw_char
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           psect	text19,class=CODE,space=0,reloc=2,group=0
  7670                           	line	162
  7671                           global __ptext19
  7672                           __ptext19:
  7673  001FF4                     psect	text19
  7674                           	file	"ST7735.c"
  7675                           	line	162
  7676                           	global	__size_of_draw_pixel
  7677                           	__size_of_draw_pixel	equ	__end_of_draw_pixel-_draw_pixel
  7678  0000                     	
  7679                           _draw_pixel:
  7680  001FF4                     ;incstack = 0
  7681                           	opt	stack 24
  7682                           ;draw_pixel@x stored from wreg
  7683                           	movwf	((c:draw_pixel@x)),c
  7684  001FF4  6E0E               	line	164
  7685                           	
  7686                           l1713:
  7687  001FF6                     ;ST7735.c: 164: set_draw_window(x, y, x+1, y+1);
  7688                           	movff	(c:draw_pixel@y),(c:set_draw_window@y1)
  7689  001FF6  C00B  F007         	incf	((c:draw_pixel@x)),c,w
  7690  001FFA  280E               	movwf	((c:set_draw_window@x2)),c
  7691  001FFC  6E08               	incf	((c:draw_pixel@y)),c,w
  7692  001FFE  280B               	movwf	((c:set_draw_window@y2)),c
  7693  002000  6E09               	movf	((c:draw_pixel@x)),c,w
  7694  002002  500E               	
  7695                           	call	_set_draw_window
  7696  002004  ECC3  F010         	line	165
  7697                           ;ST7735.c: 165: lcd_write_data(colour >> 8);
  7698                           	movf	((c:draw_pixel@colour+1)),c,w
  7699  002008  500D               	
  7700                           	call	_lcd_write_data
  7701  00200A  ECCA  F00F         	line	166
  7702                           ;ST7735.c: 166: lcd_write_data(colour & 0xFF);
  7703                           	movf	((c:draw_pixel@colour)),c,w
  7704  00200E  500C               	
  7705                           	call	_lcd_write_data
  7706  002010  ECCA  F00F         	line	167
  7707                           	
  7708                           l224:
  7709  002014                     	return	;funcret
  7710  002014  0012               	opt stack 0
  7711                           GLOBAL	__end_of_draw_pixel
  7712                           	__end_of_draw_pixel:
  7713  002016                     	signat	_draw_pixel,12409
  7714                           	global	_set_draw_window
  7715                           
  7716 ;; *************** function _set_draw_window *****************
  7717 ;; Defined at:
  7718 ;;		line 222 in file "ST7735.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  x1              1    wreg     unsigned char 
  7721 ;;  y1              1    6[COMRAM] unsigned char 
  7722 ;;  x2              1    7[COMRAM] unsigned char 
  7723 ;;  y2              1    8[COMRAM] unsigned char 
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;  x1              1    9[COMRAM] unsigned char 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  1    wreg      void 
  7728 ;; Registers used:
  7729 ;;		wreg, status,2, status,0, cstack
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  7735 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7738 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7739 ;;Total ram usage:        4 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    2
  7742 ;; This function calls:
  7743 ;;		_lcd_write_command
  7744 ;;		_lcd_write_data
  7745 ;; This function is called by:
  7746 ;;		_draw_pixel
  7747 ;;		_fill_rectangle
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           psect	text20,class=CODE,space=0,reloc=2,group=0
  7751                           	line	222
  7752                           global __ptext20
  7753                           __ptext20:
  7754  002186                     psect	text20
  7755                           	file	"ST7735.c"
  7756                           	line	222
  7757                           	global	__size_of_set_draw_window
  7758                           	__size_of_set_draw_window	equ	__end_of_set_draw_window-_set_draw_window
  7759  0000                     	
  7760                           _set_draw_window:
  7761  002186                     ;incstack = 0
  7762                           	opt	stack 27
  7763                           ;set_draw_window@x1 stored from wreg
  7764                           	movwf	((c:set_draw_window@x1)),c
  7765  002186  6E0A               	line	224
  7766                           	
  7767                           l1683:
  7768  002188                     ;ST7735.c: 224: lcd_write_command(0x2A);
  7769                           	movlw	(02Ah)&0ffh
  7770  002188  0E2A               	
  7771                           	call	_lcd_write_command
  7772  00218A  ECD9  F00F         	line	225
  7773                           ;ST7735.c: 225: lcd_write_data(0x00);
  7774                           	movlw	(0)&0ffh
  7775  00218E  0E00               	
  7776                           	call	_lcd_write_data
  7777  002190  ECCA  F00F         	line	226
  7778                           ;ST7735.c: 226: lcd_write_data(x1);
  7779                           	movf	((c:set_draw_window@x1)),c,w
  7780  002194  500A               	
  7781                           	call	_lcd_write_data
  7782  002196  ECCA  F00F         	line	227
  7783                           ;ST7735.c: 227: lcd_write_data(0x00);
  7784                           	movlw	(0)&0ffh
  7785  00219A  0E00               	
  7786                           	call	_lcd_write_data
  7787  00219C  ECCA  F00F         	line	228
  7788                           ;ST7735.c: 228: lcd_write_data(x2);
  7789                           	movf	((c:set_draw_window@x2)),c,w
  7790  0021A0  5008               	
  7791                           	call	_lcd_write_data
  7792  0021A2  ECCA  F00F         	line	231
  7793                           ;ST7735.c: 231: lcd_write_command(0x2B);
  7794                           	movlw	(02Bh)&0ffh
  7795  0021A6  0E2B               	
  7796                           	call	_lcd_write_command
  7797  0021A8  ECD9  F00F         	line	232
  7798                           ;ST7735.c: 232: lcd_write_data(0x00);
  7799                           	movlw	(0)&0ffh
  7800  0021AC  0E00               	
  7801                           	call	_lcd_write_data
  7802  0021AE  ECCA  F00F         	line	233
  7803                           ;ST7735.c: 233: lcd_write_data(y1);
  7804                           	movf	((c:set_draw_window@y1)),c,w
  7805  0021B2  5007               	
  7806                           	call	_lcd_write_data
  7807  0021B4  ECCA  F00F         	line	234
  7808                           ;ST7735.c: 234: lcd_write_data(0x00);
  7809                           	movlw	(0)&0ffh
  7810  0021B8  0E00               	
  7811                           	call	_lcd_write_data
  7812  0021BA  ECCA  F00F         	line	235
  7813                           ;ST7735.c: 235: lcd_write_data(y2);
  7814                           	movf	((c:set_draw_window@y2)),c,w
  7815  0021BE  5009               	
  7816                           	call	_lcd_write_data
  7817  0021C0  ECCA  F00F         	line	238
  7818                           ;ST7735.c: 238: lcd_write_command(0x2C);
  7819                           	movlw	(02Ch)&0ffh
  7820  0021C4  0E2C               	
  7821                           	call	_lcd_write_command
  7822  0021C6  ECD9  F00F         	line	239
  7823                           	
  7824                           l246:
  7825  0021CA                     	return	;funcret
  7826  0021CA  0012               	opt stack 0
  7827                           GLOBAL	__end_of_set_draw_window
  7828                           	__end_of_set_draw_window:
  7829  0021CC                     	signat	_set_draw_window,16505
  7830                           	global	_lcd_write_data
  7831                           
  7832 ;; *************** function _lcd_write_data *****************
  7833 ;; Defined at:
  7834 ;;		line 67 in file "ST7735.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;  data            1    wreg     unsigned char 
  7837 ;; Auto vars:     Size  Location     Type
  7838 ;;  data            1    5[COMRAM] unsigned char 
  7839 ;; Return value:  Size  Location     Type
  7840 ;;                  1    wreg      void 
  7841 ;; Registers used:
  7842 ;;		wreg, status,2, status,0, cstack
  7843 ;; Tracked objects:
  7844 ;;		On entry : 0/0
  7845 ;;		On exit  : 0/0
  7846 ;;		Unchanged: 0/0
  7847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  7848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7852 ;;Total ram usage:        1 bytes
  7853 ;; Hardware stack levels used:    1
  7854 ;; Hardware stack levels required when called:    1
  7855 ;; This function calls:
  7856 ;;		_spi_write
  7857 ;; This function is called by:
  7858 ;;		_lcd_init_command_list
  7859 ;;		_draw_pixel
  7860 ;;		_set_draw_window
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           psect	text21,class=CODE,space=0,reloc=2,group=0
  7864                           	line	67
  7865                           global __ptext21
  7866                           __ptext21:
  7867  001F94                     psect	text21
  7868                           	file	"ST7735.c"
  7869                           	line	67
  7870                           	global	__size_of_lcd_write_data
  7871                           	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  7872  0000                     	
  7873                           _lcd_write_data:
  7874  001F94                     ;incstack = 0
  7875                           	opt	stack 27
  7876                           ;lcd_write_data@data stored from wreg
  7877                           	movwf	((c:lcd_write_data@data)),c
  7878  001F94  6E06               	line	69
  7879                           	
  7880                           l1669:
  7881  001F96                     ;ST7735.c: 69: RC2 = 0;
  7882                           	bcf	c:(31762/8),(31762)&7	;volatile
  7883  001F96  9482               	line	71
  7884                           	
  7885                           l1671:
  7886  001F98                     ;ST7735.c: 71: spi_write(data);
  7887                           	movf	((c:lcd_write_data@data)),c,w
  7888  001F98  5006               	
  7889                           	call	_spi_write
  7890  001F9A  EC99  F012         	line	73
  7891                           	
  7892                           l1673:
  7893  001F9E                     ;ST7735.c: 73: RC2 = 1;
  7894                           	bsf	c:(31762/8),(31762)&7	;volatile
  7895  001F9E  8482               	line	74
  7896                           	
  7897                           l200:
  7898  001FA0                     	return	;funcret
  7899  001FA0  0012               	opt stack 0
  7900                           GLOBAL	__end_of_lcd_write_data
  7901                           	__end_of_lcd_write_data:
  7902  001FA2                     	signat	_lcd_write_data,4217
  7903                           	global	_lcd_write_command
  7904                           
  7905 ;; *************** function _lcd_write_command *****************
  7906 ;; Defined at:
  7907 ;;		line 79 in file "ST7735.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;  data            1    wreg     unsigned char 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;  data            1    5[COMRAM] unsigned char 
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  1    wreg      void 
  7914 ;; Registers used:
  7915 ;;		wreg, status,2, status,0, cstack
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  7921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  7925 ;;Total ram usage:        1 bytes
  7926 ;; Hardware stack levels used:    1
  7927 ;; Hardware stack levels required when called:    1
  7928 ;; This function calls:
  7929 ;;		_spi_write
  7930 ;; This function is called by:
  7931 ;;		_lcd_init_command_list
  7932 ;;		_set_draw_window
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           psect	text22,class=CODE,space=0,reloc=2,group=0
  7936                           	line	79
  7937                           global __ptext22
  7938                           __ptext22:
  7939  001FB2                     psect	text22
  7940                           	file	"ST7735.c"
  7941                           	line	79
  7942                           	global	__size_of_lcd_write_command
  7943                           	__size_of_lcd_write_command	equ	__end_of_lcd_write_command-_lcd_write_command
  7944  0000                     	
  7945                           _lcd_write_command:
  7946  001FB2                     ;incstack = 0
  7947                           	opt	stack 27
  7948                           ;lcd_write_command@data stored from wreg
  7949                           	movwf	((c:lcd_write_command@data)),c
  7950  001FB2  6E06               	line	81
  7951                           	
  7952                           l1675:
  7953  001FB4                     ;ST7735.c: 81: RC0 = 0;
  7954                           	bcf	c:(31760/8),(31760)&7	;volatile
  7955  001FB4  9082               	line	82
  7956                           ;ST7735.c: 82: RC2 = 0;
  7957                           	bcf	c:(31762/8),(31762)&7	;volatile
  7958  001FB6  9482               	line	83
  7959                           	
  7960                           l1677:
  7961  001FB8                     ;ST7735.c: 83: spi_write(data);
  7962                           	movf	((c:lcd_write_command@data)),c,w
  7963  001FB8  5006               	
  7964                           	call	_spi_write
  7965  001FBA  EC99  F012         	line	85
  7966                           	
  7967                           l1679:
  7968  001FBE                     ;ST7735.c: 85: RC0 = 1;
  7969                           	bsf	c:(31760/8),(31760)&7	;volatile
  7970  001FBE  8082               	line	86
  7971                           	
  7972                           l1681:
  7973  001FC0                     ;ST7735.c: 86: RC2 = 1;
  7974                           	bsf	c:(31762/8),(31762)&7	;volatile
  7975  001FC0  8482               	line	87
  7976                           	
  7977                           l203:
  7978  001FC2                     	return	;funcret
  7979  001FC2  0012               	opt stack 0
  7980                           GLOBAL	__end_of_lcd_write_command
  7981                           	__end_of_lcd_write_command:
  7982  001FC4                     	signat	_lcd_write_command,4217
  7983                           	global	_spi_write
  7984                           
  7985 ;; *************** function _spi_write *****************
  7986 ;; Defined at:
  7987 ;;		line 43 in file "ST7735.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;  data            1    wreg     unsigned char 
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;  data            1    2[COMRAM] unsigned char 
  7992 ;;  i               2    3[COMRAM] int 
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		wreg, status,2, status,0
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  8002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8003 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8004 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8005 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8006 ;;Total ram usage:        5 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; This function calls:
  8009 ;;		Nothing
  8010 ;; This function is called by:
  8011 ;;		_lcd_write_data
  8012 ;;		_lcd_write_command
  8013 ;;		_fill_rectangle
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           psect	text23,class=CODE,space=0,reloc=2,group=0
  8017                           	line	43
  8018                           global __ptext23
  8019                           __ptext23:
  8020  002532                     psect	text23
  8021                           	file	"ST7735.c"
  8022                           	line	43
  8023                           	global	__size_of_spi_write
  8024                           	__size_of_spi_write	equ	__end_of_spi_write-_spi_write
  8025  0000                     	
  8026                           _spi_write:
  8027  002532                     ;incstack = 0
  8028                           	opt	stack 27
  8029                           ;spi_write@data stored from wreg
  8030                           	movwf	((c:spi_write@data)),c
  8031  002532  6E03               	line	49
  8032                           	
  8033                           l1651:
  8034  002534                     ;ST7735.c: 49: SSP2BUF = data;
  8035                           	movff	(c:spi_write@data),(c:3957)	;volatile
  8036  002534  C003  FF75         	line	51
  8037                           ;ST7735.c: 51: while(!SSP2STAT & 0x01);
  8038                           	goto	l1653
  8039  002538  EFA0  F012         	
  8040                           l192:
  8041  00253C                     	goto	l1653
  8042  00253C  EFA0  F012         	
  8043                           l191:
  8044  002540                     	
  8045                           l1653:
  8046  002540                     	movf	((c:3955)),c,w	;volatile
  8047  002540  5073               	btfsc	status,2
  8048  002542  B4D8               	goto	u811
  8049  002544  EFA6  F012         	goto	u810
  8050  002548  EFA9  F012         u811:
  8051  00254C                     	movlw	1
  8052  00254C  0E01               	goto	u820
  8053  00254E  EFAA  F012         u810:
  8054  002552                     	movlw	0
  8055  002552  0E00               u820:
  8056  002554                     	movwf	(??_spi_write+0+0)&0ffh,c
  8057  002554  6E01               	clrf	(??_spi_write+0+0+1)&0ffh,c
  8058  002556  6A02               	
  8059                           	btfsc	(??_spi_write+0+0),c,(0)&7
  8060  002558  B001               	goto	u831
  8061  00255A  EFB1  F012         	goto	u830
  8062  00255E  EFB3  F012         u831:
  8063  002562                     	goto	l1653
  8064  002562  EFA0  F012         u830:
  8065  002566                     	goto	l197
  8066  002566  EFEC  F012         	
  8067                           l193:
  8068  00256A                     	line	52
  8069                           ;ST7735.c: 52: } else {
  8070                           	goto	l197
  8071  00256A  EFEC  F012         	
  8072                           l190:
  8073  00256E                     	line	54
  8074                           	
  8075                           l1655:
  8076  00256E                     ;ST7735.c: 54: for(int i = 7; i >= 0; i--) {
  8077                           	movlw	high(07h)
  8078  00256E  0E00               	movwf	((c:spi_write@i+1)),c
  8079  002570  6E05               	movlw	low(07h)
  8080  002572  0E07               	movwf	((c:spi_write@i)),c
  8081  002574  6E04               	
  8082                           l1657:
  8083  002576                     	btfsc	((c:spi_write@i+1)),c,7
  8084  002576  BE05               	goto	u840
  8085  002578  EFC2  F012         	goto	u841
  8086  00257C  EFC0  F012         
  8087                           u841:
  8088  002580                     	goto	l195
  8089  002580  EFC6  F012         u840:
  8090  002584                     	goto	l197
  8091  002584  EFEC  F012         	
  8092                           l1659:
  8093  002588                     	goto	l197
  8094  002588  EFEC  F012         	
  8095                           l195:
  8096  00258C                     	line	56
  8097                           ;ST7735.c: 56: RC6 = 0;
  8098                           	bcf	c:(31766/8),(31766)&7	;volatile
  8099  00258C  9C82               	line	57
  8100                           	
  8101                           l1661:
  8102  00258E                     ;ST7735.c: 57: RC4 = (data >> i) & 0x01;
  8103                           	movff	(c:spi_write@i),??_spi_write+0+0
  8104  00258E  C004  F001         	movff	(c:spi_write@data),??_spi_write+1+0
  8105  002592  C003  F002         	incf	(??_spi_write+0+0),c
  8106  002596  2A01               	goto	u854
  8107  002598  EFD0  F012         u855:
  8108  00259C                     	bcf	status,0
  8109  00259C  90D8               	rrcf	(??_spi_write+1+0),c
  8110  00259E  3202               u854:
  8111  0025A0                     	decfsz	(??_spi_write+0+0),c
  8112  0025A0  2E01               	goto	u855
  8113  0025A2  EFCE  F012         	rrcf	(??_spi_write+1+0),c,w
  8114  0025A6  3002               	btfsc	status,0
  8115  0025A8  B0D8               	goto	u861
  8116  0025AA  EFD9  F012         	goto	u860
  8117  0025AE  EFDC  F012         u861:
  8118  0025B2                     	bsf	c:(31764/8),(31764)&7	;volatile
  8119  0025B2  8882               	goto	u875
  8120  0025B4  EFDD  F012         u860:
  8121  0025B8                     	bcf	c:(31764/8),(31764)&7	;volatile
  8122  0025B8  9882               u875:
  8123  0025BA                     	line	59
  8124                           	
  8125                           l1663:
  8126  0025BA                     ;ST7735.c: 59: RC6 = 1;
  8127                           	bsf	c:(31766/8),(31766)&7	;volatile
  8128  0025BA  8C82               	line	54
  8129                           	
  8130                           l1665:
  8131  0025BC                     	decf	((c:spi_write@i)),c
  8132  0025BC  0604               	btfss	status,0
  8133  0025BE  A0D8               	decf	((c:spi_write@i+1)),c
  8134  0025C0  0605               	
  8135                           l1667:
  8136  0025C2                     	btfsc	((c:spi_write@i+1)),c,7
  8137  0025C2  BE05               	goto	u880
  8138  0025C4  EFE8  F012         	goto	u881
  8139  0025C8  EFE6  F012         
  8140                           u881:
  8141  0025CC                     	goto	l195
  8142  0025CC  EFC6  F012         u880:
  8143  0025D0                     	goto	l197
  8144  0025D0  EFEC  F012         	
  8145                           l196:
  8146  0025D4                     	goto	l197
  8147  0025D4  EFEC  F012         	line	61
  8148                           	
  8149                           l194:
  8150  0025D8                     	line	62
  8151                           	
  8152                           l197:
  8153  0025D8                     	return	;funcret
  8154  0025D8  0012               	opt stack 0
  8155                           GLOBAL	__end_of_spi_write
  8156                           	__end_of_spi_write:
  8157  0025DA                     	signat	_spi_write,4217
  8158                           	global	_convertDataToString
  8159                           
  8160 ;; *************** function _convertDataToString *****************
  8161 ;; Defined at:
  8162 ;;		line 135 in file "main.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;  buff            2    8[COMRAM] PTR unsigned char 
  8165 ;;		 -> drawOverlay@temperature_buffer(6), 
  8166 ;;  data            2   10[COMRAM] int 
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;  tens            2   16[COMRAM] int 
  8169 ;;  units           2   14[COMRAM] int 
  8170 ;; Return value:  Size  Location     Type
  8171 ;;                  1    wreg      void 
  8172 ;; Registers used:
  8173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  8179 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8180 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8182 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8183 ;;Total ram usage:       10 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; Hardware stack levels required when called:    1
  8186 ;; This function calls:
  8187 ;;		___awdiv
  8188 ;; This function is called by:
  8189 ;;		_drawOverlay
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           psect	text24,class=CODE,space=0,reloc=2,group=0
  8193                           	file	"main.c"
  8194                           	line	135
  8195                           global __ptext24
  8196                           __ptext24:
  8197  002D26                     psect	text24
  8198                           	file	"main.c"
  8199                           	line	135
  8200                           	global	__size_of_convertDataToString
  8201                           	__size_of_convertDataToString	equ	__end_of_convertDataToString-_convertDataToString
  8202  0000                     	
  8203                           _convertDataToString:
  8204  002D26                     ;incstack = 0
  8205                           	opt	stack 27
  8206                           	line	148
  8207                           	
  8208                           l1851:
  8209  002D26                     ;main.c: 148: buff[3] = '.';
  8210                           	lfsr	2,03h
  8211  002D26  EE20 F003          	movf	((c:convertDataToString@buff)),c,w
  8212  002D2A  5009               	addwf	fsr2l
  8213  002D2C  26D9               	movf	((c:convertDataToString@buff+1)),c,w
  8214  002D2E  500A               	addwfc	fsr2h
  8215  002D30  22DA               	movlw	low(02Eh)
  8216  002D32  0E2E               	movwf	indf2
  8217  002D34  6EDF               	line	152
  8218                           	
  8219                           l1853:
  8220  002D36                     ;main.c: 152: if(data & 0b10) {
  8221                           	
  8222                           	btfss	((c:convertDataToString@data)),c,(1)&7
  8223  002D36  A20B               	goto	u1181
  8224  002D38  EFA0  F016         	goto	u1180
  8225  002D3C  EFA2  F016         u1181:
  8226  002D40                     	goto	l1857
  8227  002D40  EFAC  F016         u1180:
  8228  002D44                     	line	153
  8229                           	
  8230                           l1855:
  8231  002D44                     ;main.c: 153: buff[4] = '5';
  8232                           	lfsr	2,04h
  8233  002D44  EE20 F004          	movf	((c:convertDataToString@buff)),c,w
  8234  002D48  5009               	addwf	fsr2l
  8235  002D4A  26D9               	movf	((c:convertDataToString@buff+1)),c,w
  8236  002D4C  500A               	addwfc	fsr2h
  8237  002D4E  22DA               	movlw	low(035h)
  8238  002D50  0E35               	movwf	indf2
  8239  002D52  6EDF               	line	154
  8240                           ;main.c: 154: } else {
  8241                           	goto	l1859
  8242  002D54  EFB6  F016         	
  8243                           l104:
  8244  002D58                     	line	155
  8245                           	
  8246                           l1857:
  8247  002D58                     ;main.c: 155: buff[4] = '0';
  8248                           	lfsr	2,04h
  8249  002D58  EE20 F004          	movf	((c:convertDataToString@buff)),c,w
  8250  002D5C  5009               	addwf	fsr2l
  8251  002D5E  26D9               	movf	((c:convertDataToString@buff+1)),c,w
  8252  002D60  500A               	addwfc	fsr2h
  8253  002D62  22DA               	movlw	low(030h)
  8254  002D64  0E30               	movwf	indf2
  8255  002D66  6EDF               	goto	l1859
  8256  002D68  EFB6  F016         	line	156
  8257                           	
  8258                           l105:
  8259  002D6C                     	line	159
  8260                           	
  8261                           l1859:
  8262  002D6C                     ;main.c: 156: };main.c: 159: if(data < 0) {
  8263                           	btfsc	((c:convertDataToString@data+1)),c,7
  8264  002D6C  BE0C               	goto	u1190
  8265  002D6E  EFBD  F016         	goto	u1191
  8266  002D72  EFBB  F016         
  8267                           u1191:
  8268  002D76                     	goto	l1865
  8269  002D76  EFC9  F016         u1190:
  8270  002D7A                     	line	160
  8271                           	
  8272                           l1861:
  8273  002D7A                     ;main.c: 160: buff[0] = '-';
  8274                           	movff	(c:convertDataToString@buff),fsr2l
  8275  002D7A  C009  FFD9         	movff	(c:convertDataToString@buff+1),fsr2h
  8276  002D7E  C00A  FFDA         	movlw	low(02Dh)
  8277  002D82  0E2D               	movwf	indf2
  8278  002D84  6EDF               	line	161
  8279                           	
  8280                           l1863:
  8281  002D86                     ;main.c: 161: data = -data;
  8282                           	negf	((c:convertDataToString@data)),c
  8283  002D86  6C0B               	comf	((c:convertDataToString@data+1)),c
  8284  002D88  1E0C               	btfsc	status,0
  8285  002D8A  B0D8               	incf	((c:convertDataToString@data+1)),c
  8286  002D8C  2A0C               	line	162
  8287                           ;main.c: 162: } else {
  8288                           	goto	l1867
  8289  002D8E  EFD1  F016         	
  8290                           l106:
  8291  002D92                     	line	163
  8292                           	
  8293                           l1865:
  8294  002D92                     ;main.c: 163: buff[0] = ' ';
  8295                           	movff	(c:convertDataToString@buff),fsr2l
  8296  002D92  C009  FFD9         	movff	(c:convertDataToString@buff+1),fsr2h
  8297  002D96  C00A  FFDA         	movlw	low(020h)
  8298  002D9A  0E20               	movwf	indf2
  8299  002D9C  6EDF               	goto	l1867
  8300  002D9E  EFD1  F016         	line	164
  8301                           	
  8302                           l107:
  8303  002DA2                     	line	167
  8304                           	
  8305                           l1867:
  8306  002DA2                     ;main.c: 164: };main.c: 167: data = data >> 2;
  8307                           	movff	(c:convertDataToString@data),??_convertDataToString+0+0
  8308  002DA2  C00B  F00D         	movff	(c:convertDataToString@data+1),??_convertDataToString+0+0+1
  8309  002DA6  C00C  F00E         	rlcf	(??_convertDataToString+0+1),c,w
  8310  002DAA  340E               	rrcf	(??_convertDataToString+0+1),c
  8311  002DAC  320E               	rrcf	(??_convertDataToString+0+0),c
  8312  002DAE  320D               	rlcf	(??_convertDataToString+0+1),c,w
  8313  002DB0  340E               	rrcf	(??_convertDataToString+0+1),c
  8314  002DB2  320E               	rrcf	(??_convertDataToString+0+0),c
  8315  002DB4  320D               	movff	??_convertDataToString+0+0,(c:convertDataToString@data)
  8316  002DB6  C00D  F00B         	movff	??_convertDataToString+0+1,(c:convertDataToString@data+1)
  8317  002DBA  C00E  F00C         	line	170
  8318                           	
  8319                           l1869:
  8320  002DBE                     ;main.c: 170: int units = (data & 0b11111);
  8321                           	movlw	01Fh
  8322  002DBE  0E1F               	andwf	((c:convertDataToString@data)),c,w
  8323  002DC0  140B               	movwf	((c:convertDataToString@units)),c
  8324  002DC2  6E0F               	clrf	1+((c:convertDataToString@units)),c
  8325  002DC4  6A10               	line	172
  8326                           	
  8327                           l1871:
  8328  002DC6                     ;main.c: 172: if(units > 9) {
  8329                           	btfsc	((c:convertDataToString@units+1)),c,7
  8330  002DC6  BE10               	goto	u1201
  8331  002DC8  EFEF  F016         	movf	((c:convertDataToString@units+1)),c,w
  8332  002DCC  5010               	bnz	u1200
  8333  002DCE  E109               	movlw	10
  8334  002DD0  0E0A               	subwf	 ((c:convertDataToString@units)),c,w
  8335  002DD2  5C0F               	btfss	status,0
  8336  002DD4  A0D8               	goto	u1201
  8337  002DD6  EFEF  F016         	goto	u1200
  8338  002DDA  EFF1  F016         
  8339                           u1201:
  8340  002DDE                     	goto	l1877
  8341  002DDE  EF11  F017         u1200:
  8342  002DE2                     	line	173
  8343                           	
  8344                           l1873:
  8345  002DE2                     ;main.c: 173: buff[1] = '1';
  8346                           	lfsr	2,01h
  8347  002DE2  EE20 F001          	movf	((c:convertDataToString@buff)),c,w
  8348  002DE6  5009               	addwf	fsr2l
  8349  002DE8  26D9               	movf	((c:convertDataToString@buff+1)),c,w
  8350  002DEA  500A               	addwfc	fsr2h
  8351  002DEC  22DA               	movlw	low(031h)
  8352  002DEE  0E31               	movwf	indf2
  8353  002DF0  6EDF               	line	174
  8354                           ;main.c: 174: while(units > 9)
  8355                           	goto	l109
  8356  002DF2  EFFF  F016         	
  8357                           l110:
  8358  002DF6                     	line	175
  8359                           	
  8360                           l1875:
  8361  002DF6                     ;main.c: 175: units -= 10;
  8362                           	movlw	low(-10)
  8363  002DF6  0EF6               	addwf	((c:convertDataToString@units)),c
  8364  002DF8  260F               	movlw	high(-10)
  8365  002DFA  0EFF               	addwfc	((c:convertDataToString@units+1)),c
  8366  002DFC  2210               	
  8367                           l109:
  8368  002DFE                     	line	174
  8369                           	btfsc	((c:convertDataToString@units+1)),c,7
  8370  002DFE  BE10               	goto	u1210
  8371  002E00  EF0D  F017         	movf	((c:convertDataToString@units+1)),c,w
  8372  002E04  5010               	bnz	u1211
  8373  002E06  E107               	movlw	10
  8374  002E08  0E0A               	subwf	 ((c:convertDataToString@units)),c,w
  8375  002E0A  5C0F               	btfsc	status,0
  8376  002E0C  B0D8               	goto	u1211
  8377  002E0E  EF0B  F017         	goto	u1210
  8378  002E12  EF0D  F017         
  8379                           u1211:
  8380  002E16                     	goto	l1875
  8381  002E16  EFFB  F016         u1210:
  8382  002E1A                     	goto	l112
  8383  002E1A  EF19  F017         	
  8384                           l111:
  8385  002E1E                     	line	176
  8386                           ;main.c: 176: } else {
  8387                           	goto	l112
  8388  002E1E  EF19  F017         	
  8389                           l108:
  8390  002E22                     	line	177
  8391                           	
  8392                           l1877:
  8393  002E22                     ;main.c: 177: buff[1] = ' ';
  8394                           	lfsr	2,01h
  8395  002E22  EE20 F001          	movf	((c:convertDataToString@buff)),c,w
  8396  002E26  5009               	addwf	fsr2l
  8397  002E28  26D9               	movf	((c:convertDataToString@buff+1)),c,w
  8398  002E2A  500A               	addwfc	fsr2h
  8399  002E2C  22DA               	movlw	low(020h)
  8400  002E2E  0E20               	movwf	indf2
  8401  002E30  6EDF               	line	178
  8402                           	
  8403                           l112:
  8404  002E32                     	line	181
  8405                           ;main.c: 178: };main.c: 181: buff[2] = units + 48;
  8406                           	lfsr	2,02h
  8407  002E32  EE20 F002          	movf	((c:convertDataToString@buff)),c,w
  8408  002E36  5009               	addwf	fsr2l
  8409  002E38  26D9               	movf	((c:convertDataToString@buff+1)),c,w
  8410  002E3A  500A               	addwfc	fsr2h
  8411  002E3C  22DA               	movf	((c:convertDataToString@units)),c,w
  8412  002E3E  500F               	addlw	low(030h)
  8413  002E40  0F30               	movwf	indf2,c
  8414  002E42  6EDF               
  8415                           	line	184
  8416                           	
  8417                           l1879:
  8418  002E44                     ;main.c: 184: int tens = (int)(data / 10);
  8419                           	movff	(c:convertDataToString@data),(c:___awdiv@dividend)
  8420  002E44  C00B  F001         	movff	(c:convertDataToString@data+1),(c:___awdiv@dividend+1)
  8421  002E48  C00C  F002         	movlw	high(0Ah)
  8422  002E4C  0E00               	movwf	((c:___awdiv@divisor+1)),c
  8423  002E4E  6E04               	movlw	low(0Ah)
  8424  002E50  0E0A               	movwf	((c:___awdiv@divisor)),c
  8425  002E52  6E03               	call	___awdiv	;wreg free
  8426  002E54  EC45  F013         	movff	0+?___awdiv,(c:convertDataToString@tens)
  8427  002E58  C001  F011         	movff	1+?___awdiv,(c:convertDataToString@tens+1)
  8428  002E5C  C002  F012         	line	186
  8429                           	
  8430                           l1881:
  8431  002E60                     ;main.c: 186: if(tens > 9) {
  8432                           	btfsc	((c:convertDataToString@tens+1)),c,7
  8433  002E60  BE12               	goto	u1221
  8434  002E62  EF3C  F017         	movf	((c:convertDataToString@tens+1)),c,w
  8435  002E66  5012               	bnz	u1220
  8436  002E68  E109               	movlw	10
  8437  002E6A  0E0A               	subwf	 ((c:convertDataToString@tens)),c,w
  8438  002E6C  5C11               	btfss	status,0
  8439  002E6E  A0D8               	goto	u1221
  8440  002E70  EF3C  F017         	goto	u1220
  8441  002E74  EF3E  F017         
  8442                           u1221:
  8443  002E78                     	goto	l1887
  8444  002E78  EF5C  F017         u1220:
  8445  002E7C                     	line	187
  8446                           	
  8447                           l1883:
  8448  002E7C                     ;main.c: 187: buff[0] = '1';
  8449                           	movff	(c:convertDataToString@buff),fsr2l
  8450  002E7C  C009  FFD9         	movff	(c:convertDataToString@buff+1),fsr2h
  8451  002E80  C00A  FFDA         	movlw	low(031h)
  8452  002E84  0E31               	movwf	indf2
  8453  002E86  6EDF               	line	188
  8454                           ;main.c: 188: while(tens > 9)
  8455                           	goto	l114
  8456  002E88  EF4A  F017         	
  8457                           l115:
  8458  002E8C                     	line	189
  8459                           	
  8460                           l1885:
  8461  002E8C                     ;main.c: 189: tens -= 10;
  8462                           	movlw	low(-10)
  8463  002E8C  0EF6               	addwf	((c:convertDataToString@tens)),c
  8464  002E8E  2611               	movlw	high(-10)
  8465  002E90  0EFF               	addwfc	((c:convertDataToString@tens+1)),c
  8466  002E92  2212               	
  8467                           l114:
  8468  002E94                     	line	188
  8469                           	btfsc	((c:convertDataToString@tens+1)),c,7
  8470  002E94  BE12               	goto	u1230
  8471  002E96  EF58  F017         	movf	((c:convertDataToString@tens+1)),c,w
  8472  002E9A  5012               	bnz	u1231
  8473  002E9C  E107               	movlw	10
  8474  002E9E  0E0A               	subwf	 ((c:convertDataToString@tens)),c,w
  8475  002EA0  5C11               	btfsc	status,0
  8476  002EA2  B0D8               	goto	u1231
  8477  002EA4  EF56  F017         	goto	u1230
  8478  002EA8  EF58  F017         
  8479                           u1231:
  8480  002EAC                     	goto	l1885
  8481  002EAC  EF46  F017         u1230:
  8482  002EB0                     	goto	l1887
  8483  002EB0  EF5C  F017         	
  8484                           l116:
  8485  002EB4                     	goto	l1887
  8486  002EB4  EF5C  F017         	line	190
  8487                           	
  8488                           l113:
  8489  002EB8                     	line	193
  8490                           	
  8491                           l1887:
  8492  002EB8                     ;main.c: 190: };main.c: 193: buff[1] = tens + 48;
  8493                           	lfsr	2,01h
  8494  002EB8  EE20 F001          	movf	((c:convertDataToString@buff)),c,w
  8495  002EBC  5009               	addwf	fsr2l
  8496  002EBE  26D9               	movf	((c:convertDataToString@buff+1)),c,w
  8497  002EC0  500A               	addwfc	fsr2h
  8498  002EC2  22DA               	movf	((c:convertDataToString@tens)),c,w
  8499  002EC4  5011               	addlw	low(030h)
  8500  002EC6  0F30               	movwf	indf2,c
  8501  002EC8  6EDF               
  8502                           	line	196
  8503                           ;main.c: 196: buff[5] = '\0';
  8504                           	lfsr	2,05h
  8505  002ECA  EE20 F005          	movf	((c:convertDataToString@buff)),c,w
  8506  002ECE  5009               	addwf	fsr2l
  8507  002ED0  26D9               	movf	((c:convertDataToString@buff+1)),c,w
  8508  002ED2  500A               	addwfc	fsr2h
  8509  002ED4  22DA               	movlw	low(0)
  8510  002ED6  0E00               	movwf	indf2
  8511  002ED8  6EDF               	line	197
  8512                           	
  8513                           l117:
  8514  002EDA                     	return	;funcret
  8515  002EDA  0012               	opt stack 0
  8516                           GLOBAL	__end_of_convertDataToString
  8517                           	__end_of_convertDataToString:
  8518  002EDC                     	signat	_convertDataToString,8313
  8519                           	global	___lwtoft
  8520                           
  8521 ;; *************** function ___lwtoft *****************
  8522 ;; Defined at:
  8523 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwtoft.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  c               2    8[COMRAM] unsigned int 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  3    8[COMRAM] float 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2, status,0, cstack
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  8537 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8540 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8541 ;;Total ram usage:        3 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; Hardware stack levels required when called:    1
  8544 ;; This function calls:
  8545 ;;		___ftpack
  8546 ;; This function is called by:
  8547 ;;		_drawOverlay
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           psect	text25,class=CODE,space=0,reloc=2,group=1
  8551                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwtoft.c"
  8552                           	line	28
  8553                           global __ptext25
  8554                           __ptext25:
  8555  002064                     psect	text25
  8556                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwtoft.c"
  8557                           	line	28
  8558                           	global	__size_of___lwtoft
  8559                           	__size_of___lwtoft	equ	__end_of___lwtoft-___lwtoft
  8560  0000                     	
  8561                           ___lwtoft:
  8562  002064                     ;incstack = 0
  8563                           	opt	stack 27
  8564                           	line	30
  8565                           	
  8566                           l1985:
  8567  002064                     	movff	(c:___lwtoft@c),(c:___ftpack@arg)
  8568  002064  C009  F001         	movff	(c:___lwtoft@c+1),(c:___ftpack@arg+1)
  8569  002068  C00A  F002         	clrf	((c:___ftpack@arg+2)),c
  8570  00206C  6A03               	movlw	low(08Eh)
  8571  00206E  0E8E               	movwf	((c:___ftpack@exp)),c
  8572  002070  6E04               	movlw	low(0)
  8573  002072  0E00               	movwf	((c:___ftpack@sign)),c
  8574  002074  6E05               	call	___ftpack	;wreg free
  8575  002076  EC37  F015         	movff	0+?___ftpack,(c:?___lwtoft)
  8576  00207A  C001  F009         	movff	1+?___ftpack,(c:?___lwtoft+1)
  8577  00207E  C002  F00A         	movff	2+?___ftpack,(c:?___lwtoft+2)
  8578  002082  C003  F00B         	goto	l805
  8579  002086  EF45  F010         	
  8580                           l1987:
  8581  00208A                     	line	31
  8582                           	
  8583                           l805:
  8584  00208A                     	return	;funcret
  8585  00208A  0012               	opt stack 0
  8586                           GLOBAL	__end_of___lwtoft
  8587                           	__end_of___lwtoft:
  8588  00208C                     	signat	___lwtoft,4219
  8589                           	global	___ftdiv
  8590                           
  8591 ;; *************** function ___ftdiv *****************
  8592 ;; Defined at:
  8593 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ftdiv.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;  f1              3   11[COMRAM] float 
  8596 ;;  f2              3   14[COMRAM] float 
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;  f3              3   21[COMRAM] float 
  8599 ;;  sign            1   25[COMRAM] unsigned char 
  8600 ;;  exp             1   24[COMRAM] unsigned char 
  8601 ;;  cntr            1   20[COMRAM] unsigned char 
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  3   11[COMRAM] float 
  8604 ;; Registers used:
  8605 ;;		wreg, status,2, status,0, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  8611 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8612 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8613 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8614 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8615 ;;Total ram usage:       15 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    1
  8618 ;; This function calls:
  8619 ;;		___ftpack
  8620 ;; This function is called by:
  8621 ;;		_drawOverlay
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           psect	text26,class=CODE,space=0,reloc=2,group=1
  8625                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ftdiv.c"
  8626                           	line	54
  8627                           global __ptext26
  8628                           __ptext26:
  8629  002950                     psect	text26
  8630                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ftdiv.c"
  8631                           	line	54
  8632                           	global	__size_of___ftdiv
  8633                           	__size_of___ftdiv	equ	__end_of___ftdiv-___ftdiv
  8634  0000                     	
  8635                           ___ftdiv:
  8636  002950                     ;incstack = 0
  8637                           	opt	stack 27
  8638                           	line	63
  8639                           	
  8640                           l1939:
  8641  002950                     	movff	(c:___ftdiv@f1+2),??___ftdiv+0+0
  8642  002950  C00E  F012         	clrf	(??___ftdiv+0+0+1)&0ffh,c
  8643  002954  6A13               	clrf	(??___ftdiv+0+0+2)&0ffh,c
  8644  002956  6A14               	rlcf	((c:___ftdiv@f1+1)),c,w
  8645  002958  340D               	rlcf	(??___ftdiv+0+0)&0ffh,c
  8646  00295A  3612               	bnc	u1281
  8647  00295C  E301               	bsf	(??___ftdiv+0+0+1)&0ffh,c,0
  8648  00295E  8013               u1281:
  8649  002960                     	movf	(??___ftdiv+0+0),c,w
  8650  002960  5012               	movwf	((c:___ftdiv@exp)),c
  8651  002962  6E19               	movf	((c:___ftdiv@exp)),c,w
  8652  002964  5019               	btfss	status,2
  8653  002966  A4D8               	goto	u1291
  8654  002968  EFB8  F014         	goto	u1290
  8655  00296C  EFBA  F014         u1291:
  8656  002970                     	goto	l1945
  8657  002970  EFC4  F014         u1290:
  8658  002974                     	line	64
  8659                           	
  8660                           l1941:
  8661  002974                     	movlw	low(float24(0.0000000000000000))
  8662  002974  0E00               	movwf	((c:?___ftdiv)),c
  8663  002976  6E0C               	movlw	high(float24(0.0000000000000000))
  8664  002978  0E00               	movwf	((c:?___ftdiv+1)),c
  8665  00297A  6E0D               	movlw	low highword(float24(0.0000000000000000))
  8666  00297C  0E00               	movwf	((c:?___ftdiv+2)),c
  8667  00297E  6E0E               
  8668                           	goto	l642
  8669  002980  EF36  F015         	
  8670                           l1943:
  8671  002984                     	goto	l642
  8672  002984  EF36  F015         	
  8673                           l641:
  8674  002988                     	line	65
  8675                           	
  8676                           l1945:
  8677  002988                     	movff	(c:___ftdiv@f2+2),??___ftdiv+0+0
  8678  002988  C011  F012         	clrf	(??___ftdiv+0+0+1)&0ffh,c
  8679  00298C  6A13               	clrf	(??___ftdiv+0+0+2)&0ffh,c
  8680  00298E  6A14               	rlcf	((c:___ftdiv@f2+1)),c,w
  8681  002990  3410               	rlcf	(??___ftdiv+0+0)&0ffh,c
  8682  002992  3612               	bnc	u1301
  8683  002994  E301               	bsf	(??___ftdiv+0+0+1)&0ffh,c,0
  8684  002996  8013               u1301:
  8685  002998                     	movf	(??___ftdiv+0+0),c,w
  8686  002998  5012               	movwf	((c:___ftdiv@sign)),c
  8687  00299A  6E1A               	movf	((c:___ftdiv@sign)),c,w
  8688  00299C  501A               	btfss	status,2
  8689  00299E  A4D8               	goto	u1311
  8690  0029A0  EFD4  F014         	goto	u1310
  8691  0029A4  EFD6  F014         u1311:
  8692  0029A8                     	goto	l1951
  8693  0029A8  EFE0  F014         u1310:
  8694  0029AC                     	line	66
  8695                           	
  8696                           l1947:
  8697  0029AC                     	movlw	low(float24(0.0000000000000000))
  8698  0029AC  0E00               	movwf	((c:?___ftdiv)),c
  8699  0029AE  6E0C               	movlw	high(float24(0.0000000000000000))
  8700  0029B0  0E00               	movwf	((c:?___ftdiv+1)),c
  8701  0029B2  6E0D               	movlw	low highword(float24(0.0000000000000000))
  8702  0029B4  0E00               	movwf	((c:?___ftdiv+2)),c
  8703  0029B6  6E0E               
  8704                           	goto	l642
  8705  0029B8  EF36  F015         	
  8706                           l1949:
  8707  0029BC                     	goto	l642
  8708  0029BC  EF36  F015         	
  8709                           l643:
  8710  0029C0                     	line	67
  8711                           	
  8712                           l1951:
  8713  0029C0                     	movlw	low(0)
  8714  0029C0  0E00               	movwf	((c:___ftdiv@f3)),c
  8715  0029C2  6E16               	movlw	high(0)
  8716  0029C4  0E00               	movwf	((c:___ftdiv@f3+1)),c
  8717  0029C6  6E17               	movlw	low highword(0)
  8718  0029C8  0E00               	movwf	((c:___ftdiv@f3+2)),c
  8719  0029CA  6E18               
  8720                           	line	68
  8721                           	
  8722                           l1953:
  8723  0029CC                     	movf	((c:___ftdiv@sign)),c,w
  8724  0029CC  501A               	addlw	low(089h)
  8725  0029CE  0F89               	subwf	((c:___ftdiv@exp)),c
  8726  0029D0  5E19               	line	69
  8727                           	
  8728                           l1955:
  8729  0029D2                     	movff	0+2+(c:___ftdiv@f1),(c:___ftdiv@sign)
  8730  0029D2  C00E  F01A         	line	70
  8731                           	
  8732                           l1957:
  8733  0029D6                     	movf	(0+2+(c:___ftdiv@f2)),c,w
  8734  0029D6  5011               	xorwf	((c:___ftdiv@sign)),c
  8735  0029D8  1A1A               	line	71
  8736                           	
  8737                           l1959:
  8738  0029DA                     	movlw	(080h)&0ffh
  8739  0029DA  0E80               	andwf	((c:___ftdiv@sign)),c
  8740  0029DC  161A               	line	72
  8741                           	
  8742                           l1961:
  8743  0029DE                     	bsf	(0+(15/8)+(c:___ftdiv@f1)),c,(15)&7
  8744  0029DE  8E0D               	line	73
  8745                           	
  8746                           l1963:
  8747  0029E0                     	movlw	low(0FFFFh)
  8748  0029E0  0EFF               	andwf	((c:___ftdiv@f1)),c
  8749  0029E2  160C               	movlw	high(0FFFFh)
  8750  0029E4  0EFF               	andwf	((c:___ftdiv@f1+1)),c
  8751  0029E6  160D               	movlw	low highword(0FFFFh)
  8752  0029E8  0E00               	andwf	((c:___ftdiv@f1+2)),c
  8753  0029EA  160E               
  8754                           	line	74
  8755                           	
  8756                           l1965:
  8757  0029EC                     	bsf	(0+(15/8)+(c:___ftdiv@f2)),c,(15)&7
  8758  0029EC  8E10               	line	75
  8759                           	
  8760                           l1967:
  8761  0029EE                     	movlw	low(0FFFFh)
  8762  0029EE  0EFF               	andwf	((c:___ftdiv@f2)),c
  8763  0029F0  160F               	movlw	high(0FFFFh)
  8764  0029F2  0EFF               	andwf	((c:___ftdiv@f2+1)),c
  8765  0029F4  1610               	movlw	low highword(0FFFFh)
  8766  0029F6  0E00               	andwf	((c:___ftdiv@f2+2)),c
  8767  0029F8  1611               
  8768                           	line	76
  8769                           	
  8770                           l1969:
  8771  0029FA                     	movlw	low(018h)
  8772  0029FA  0E18               	movwf	((c:___ftdiv@cntr)),c
  8773  0029FC  6E15               	goto	l1971
  8774  0029FE  EF01  F015         	line	77
  8775                           	
  8776                           l644:
  8777  002A02                     	line	78
  8778                           	
  8779                           l1971:
  8780  002A02                     	bcf	status,0
  8781  002A02  90D8               	rlcf	((c:___ftdiv@f3)),c
  8782  002A04  3616               	rlcf	((c:___ftdiv@f3+1)),c
  8783  002A06  3617               	rlcf	((c:___ftdiv@f3+2)),c
  8784  002A08  3618               	line	79
  8785                           	
  8786                           l1973:
  8787  002A0A                     		movf	((c:___ftdiv@f2)),c,w
  8788  002A0A  500F               	subwf	((c:___ftdiv@f1)),c,w
  8789  002A0C  5C0C               	movf	((c:___ftdiv@f2+1)),c,w
  8790  002A0E  5010               	subwfb	((c:___ftdiv@f1+1)),c,w
  8791  002A10  580D               	movf	((c:___ftdiv@f2+2)),c,w
  8792  002A12  5011               	subwfb	((c:___ftdiv@f1+2)),c,w
  8793  002A14  580E               	btfss	status,0
  8794  002A16  A0D8               	goto	u1321
  8795  002A18  EF10  F015         	goto	u1320
  8796  002A1C  EF12  F015         
  8797                           u1321:
  8798  002A20                     	goto	l645
  8799  002A20  EF19  F015         u1320:
  8800  002A24                     	line	80
  8801                           	
  8802                           l1975:
  8803  002A24                     	movf	((c:___ftdiv@f2)),c,w
  8804  002A24  500F               	subwf	((c:___ftdiv@f1)),c
  8805  002A26  5E0C               	movf	((c:___ftdiv@f2+1)),c,w
  8806  002A28  5010               	subwfb	((c:___ftdiv@f1+1)),c
  8807  002A2A  5A0D               	movf	((c:___ftdiv@f2+2)),c,w
  8808  002A2C  5011               	subwfb	((c:___ftdiv@f1+2)),c
  8809  002A2E  5A0E               
  8810                           	line	81
  8811                           	
  8812                           l1977:
  8813  002A30                     	bsf	(0+(0/8)+(c:___ftdiv@f3)),c,(0)&7
  8814  002A30  8016               	line	82
  8815                           	
  8816                           l645:
  8817  002A32                     	line	83
  8818                           	bcf	status,0
  8819  002A32  90D8               	rlcf	((c:___ftdiv@f1)),c
  8820  002A34  360C               	rlcf	((c:___ftdiv@f1+1)),c
  8821  002A36  360D               	rlcf	((c:___ftdiv@f1+2)),c
  8822  002A38  360E               	line	84
  8823                           	
  8824                           l1979:
  8825  002A3A                     	decfsz	((c:___ftdiv@cntr)),c
  8826  002A3A  2E15               	
  8827                           	goto	l1971
  8828  002A3C  EF01  F015         	goto	l1981
  8829  002A40  EF22  F015         	
  8830                           l646:
  8831  002A44                     	line	85
  8832                           	
  8833                           l1981:
  8834  002A44                     	movff	(c:___ftdiv@f3),(c:___ftpack@arg)
  8835  002A44  C016  F001         	movff	(c:___ftdiv@f3+1),(c:___ftpack@arg+1)
  8836  002A48  C017  F002         	movff	(c:___ftdiv@f3+2),(c:___ftpack@arg+2)
  8837  002A4C  C018  F003         	movff	(c:___ftdiv@exp),(c:___ftpack@exp)
  8838  002A50  C019  F004         	movff	(c:___ftdiv@sign),(c:___ftpack@sign)
  8839  002A54  C01A  F005         	call	___ftpack	;wreg free
  8840  002A58  EC37  F015         	movff	0+?___ftpack,(c:?___ftdiv)
  8841  002A5C  C001  F00C         	movff	1+?___ftpack,(c:?___ftdiv+1)
  8842  002A60  C002  F00D         	movff	2+?___ftpack,(c:?___ftdiv+2)
  8843  002A64  C003  F00E         	goto	l642
  8844  002A68  EF36  F015         	
  8845                           l1983:
  8846  002A6C                     	line	86
  8847                           	
  8848                           l642:
  8849  002A6C                     	return	;funcret
  8850  002A6C  0012               	opt stack 0
  8851                           GLOBAL	__end_of___ftdiv
  8852                           	__end_of___ftdiv:
  8853  002A6E                     	signat	___ftdiv,8315
  8854                           	global	___ftpack
  8855                           
  8856 ;; *************** function ___ftpack *****************
  8857 ;; Defined at:
  8858 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\float.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;  arg             3    0[COMRAM] unsigned um
  8861 ;;  exp             1    3[COMRAM] unsigned char 
  8862 ;;  sign            1    4[COMRAM] unsigned char 
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;		None
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  3    0[COMRAM] float 
  8867 ;; Registers used:
  8868 ;;		wreg, status,2, status,0
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  8874 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8876 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8877 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  8878 ;;Total ram usage:        8 bytes
  8879 ;; Hardware stack levels used:    1
  8880 ;; This function calls:
  8881 ;;		Nothing
  8882 ;; This function is called by:
  8883 ;;		___ftdiv
  8884 ;;		___lwtoft
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           psect	text27,class=CODE,space=0,reloc=2,group=1
  8888                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\float.c"
  8889                           	line	62
  8890                           global __ptext27
  8891                           __ptext27:
  8892  002A6E                     psect	text27
  8893                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\float.c"
  8894                           	line	62
  8895                           	global	__size_of___ftpack
  8896                           	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  8897  0000                     	
  8898                           ___ftpack:
  8899  002A6E                     ;incstack = 0
  8900                           	opt	stack 27
  8901                           	line	64
  8902                           	
  8903                           l1771:
  8904  002A6E                     	movf	((c:___ftpack@exp)),c,w
  8905  002A6E  5004               	btfsc	status,2
  8906  002A70  B4D8               	goto	u1041
  8907  002A72  EF3D  F015         	goto	u1040
  8908  002A76  EF3F  F015         u1041:
  8909  002A7A                     	goto	l1775
  8910  002A7A  EF4B  F015         u1040:
  8911  002A7E                     	
  8912                           l1773:
  8913  002A7E                     	movf	((c:___ftpack@arg)),c,w
  8914  002A7E  5001               iorwf	((c:___ftpack@arg+1)),c,w
  8915  002A80  1002               iorwf	((c:___ftpack@arg+2)),c,w
  8916  002A82  1003               	btfss	status,2
  8917  002A84  A4D8               	goto	u1051
  8918  002A86  EF47  F015         	goto	u1050
  8919  002A8A  EF49  F015         
  8920                           u1051:
  8921  002A8E                     	goto	l1781
  8922  002A8E  EF5E  F015         u1050:
  8923  002A92                     	goto	l1775
  8924  002A92  EF4B  F015         	
  8925                           l575:
  8926  002A96                     	line	65
  8927                           	
  8928                           l1775:
  8929  002A96                     	movlw	low(float24(0.0000000000000000))
  8930  002A96  0E00               	movwf	((c:?___ftpack)),c
  8931  002A98  6E01               	movlw	high(float24(0.0000000000000000))
  8932  002A9A  0E00               	movwf	((c:?___ftpack+1)),c
  8933  002A9C  6E02               	movlw	low highword(float24(0.0000000000000000))
  8934  002A9E  0E00               	movwf	((c:?___ftpack+2)),c
  8935  002AA0  6E03               
  8936                           	goto	l576
  8937  002AA2  EFD2  F015         	
  8938                           l1777:
  8939  002AA6                     	goto	l576
  8940  002AA6  EFD2  F015         	
  8941                           l573:
  8942  002AAA                     	line	66
  8943                           	goto	l1781
  8944  002AAA  EF5E  F015         	
  8945                           l578:
  8946  002AAE                     	line	67
  8947                           	
  8948                           l1779:
  8949  002AAE                     	incf	((c:___ftpack@exp)),c
  8950  002AAE  2A04               	line	68
  8951                           	bcf	status,0
  8952  002AB0  90D8               	rrcf	((c:___ftpack@arg+2)),c
  8953  002AB2  3203               	rrcf	((c:___ftpack@arg+1)),c
  8954  002AB4  3202               	rrcf	((c:___ftpack@arg)),c
  8955  002AB6  3201               	goto	l1781
  8956  002AB8  EF5E  F015         	line	69
  8957                           	
  8958                           l577:
  8959  002ABC                     	line	66
  8960                           	
  8961                           l1781:
  8962  002ABC                     	movlw	low(0FE0000h)
  8963  002ABC  0E00               	andwf	((c:___ftpack@arg)),c,w
  8964  002ABE  1401               	movwf	(??___ftpack+0+0)&0ffh,c
  8965  002AC0  6E06               	movlw	0
  8966  002AC2  0E00               	andwf	((c:___ftpack@arg+1)),c,w
  8967  002AC4  1402               	movwf	1+(??___ftpack+0+0)&0ffh,c
  8968  002AC6  6E07               	
  8969                           	movlw	0FEh
  8970  002AC8  0EFE               	andwf	((c:___ftpack@arg+2)),c,w
  8971  002ACA  1403               	movwf	2+(??___ftpack+0+0)&0ffh,c
  8972  002ACC  6E08               
  8973                           	movf	(??___ftpack+0+0),c,w
  8974  002ACE  5006               iorwf	(??___ftpack+0+1),c,w
  8975  002AD0  1007               iorwf	(??___ftpack+0+2),c,w
  8976  002AD2  1008               	btfss	status,2
  8977  002AD4  A4D8               	goto	u1061
  8978  002AD6  EF6F  F015         	goto	u1060
  8979  002ADA  EF71  F015         
  8980                           u1061:
  8981  002ADE                     	goto	l1779
  8982  002ADE  EF57  F015         u1060:
  8983  002AE2                     	goto	l1787
  8984  002AE2  EF82  F015         	
  8985                           l579:
  8986  002AE6                     	line	70
  8987                           	goto	l1787
  8988  002AE6  EF82  F015         	
  8989                           l581:
  8990  002AEA                     	line	71
  8991                           	
  8992                           l1783:
  8993  002AEA                     	incf	((c:___ftpack@exp)),c
  8994  002AEA  2A04               	line	72
  8995                           	
  8996                           l1785:
  8997  002AEC                     	movlw	low(01h)
  8998  002AEC  0E01               	addwf	((c:___ftpack@arg)),c
  8999  002AEE  2601               	movlw	high(01h)
  9000  002AF0  0E00               	addwfc	((c:___ftpack@arg+1)),c
  9001  002AF2  2202               	movlw	low highword(01h)
  9002  002AF4  0E00               	addwfc	((c:___ftpack@arg+2)),c
  9003  002AF6  2203               
  9004                           	line	73
  9005                           	bcf	status,0
  9006  002AF8  90D8               	rrcf	((c:___ftpack@arg+2)),c
  9007  002AFA  3203               	rrcf	((c:___ftpack@arg+1)),c
  9008  002AFC  3202               	rrcf	((c:___ftpack@arg)),c
  9009  002AFE  3201               	goto	l1787
  9010  002B00  EF82  F015         	line	74
  9011                           	
  9012                           l580:
  9013  002B04                     	line	70
  9014                           	
  9015                           l1787:
  9016  002B04                     	movlw	low(0FF0000h)
  9017  002B04  0E00               	andwf	((c:___ftpack@arg)),c,w
  9018  002B06  1401               	movwf	(??___ftpack+0+0)&0ffh,c
  9019  002B08  6E06               	movlw	0
  9020  002B0A  0E00               	andwf	((c:___ftpack@arg+1)),c,w
  9021  002B0C  1402               	movwf	1+(??___ftpack+0+0)&0ffh,c
  9022  002B0E  6E07               	
  9023                           	movlw	0FFh
  9024  002B10  0EFF               	andwf	((c:___ftpack@arg+2)),c,w
  9025  002B12  1403               	movwf	2+(??___ftpack+0+0)&0ffh,c
  9026  002B14  6E08               
  9027                           	movf	(??___ftpack+0+0),c,w
  9028  002B16  5006               iorwf	(??___ftpack+0+1),c,w
  9029  002B18  1007               iorwf	(??___ftpack+0+2),c,w
  9030  002B1A  1008               	btfss	status,2
  9031  002B1C  A4D8               	goto	u1071
  9032  002B1E  EF93  F015         	goto	u1070
  9033  002B22  EF95  F015         
  9034                           u1071:
  9035  002B26                     	goto	l1783
  9036  002B26  EF75  F015         u1070:
  9037  002B2A                     	goto	l1791
  9038  002B2A  EFA0  F015         	
  9039                           l582:
  9040  002B2E                     	line	75
  9041                           	goto	l1791
  9042  002B2E  EFA0  F015         	
  9043                           l584:
  9044  002B32                     	line	76
  9045                           	
  9046                           l1789:
  9047  002B32                     	decf	((c:___ftpack@exp)),c
  9048  002B32  0604               	line	77
  9049                           	bcf	status,0
  9050  002B34  90D8               	rlcf	((c:___ftpack@arg)),c
  9051  002B36  3601               	rlcf	((c:___ftpack@arg+1)),c
  9052  002B38  3602               	rlcf	((c:___ftpack@arg+2)),c
  9053  002B3A  3603               	goto	l1791
  9054  002B3C  EFA0  F015         	line	78
  9055                           	
  9056                           l583:
  9057  002B40                     	line	75
  9058                           	
  9059                           l1791:
  9060  002B40                     	
  9061                           	btfsc	((c:___ftpack@arg+1)),c,(15)&7
  9062  002B40  BE02               	goto	u1081
  9063  002B42  EFA5  F015         	goto	u1080
  9064  002B46  EFA7  F015         u1081:
  9065  002B4A                     	goto	l587
  9066  002B4A  EFB1  F015         u1080:
  9067  002B4E                     	
  9068                           l1793:
  9069  002B4E                     		movlw	02h-0
  9070  002B4E  0E02               	cpfslt	((c:___ftpack@exp)),c
  9071  002B50  6004               	goto	u1091
  9072  002B52  EFAD  F015         	goto	u1090
  9073  002B56  EFAF  F015         
  9074                           u1091:
  9075  002B5A                     	goto	l1789
  9076  002B5A  EF99  F015         u1090:
  9077  002B5E                     	goto	l587
  9078  002B5E  EFB1  F015         	
  9079                           l586:
  9080  002B62                     	
  9081                           l587:
  9082  002B62                     	line	79
  9083                           	
  9084                           	btfsc	((c:___ftpack@exp)),c,(0)&7
  9085  002B62  B004               	goto	u1101
  9086  002B64  EFB6  F015         	goto	u1100
  9087  002B68  EFB8  F015         u1101:
  9088  002B6C                     	goto	l1797
  9089  002B6C  EFBB  F015         u1100:
  9090  002B70                     	line	80
  9091                           	
  9092                           l1795:
  9093  002B70                     	bcf	(0+(15/8)+(c:___ftpack@arg)),c,(15)&7
  9094  002B70  9E02               	goto	l1797
  9095  002B72  EFBB  F015         	
  9096                           l588:
  9097  002B76                     	line	81
  9098                           	
  9099                           l1797:
  9100  002B76                     	bcf status,0
  9101  002B76  90D8               	rrcf	((c:___ftpack@exp)),c
  9102  002B78  3204               
  9103                           	line	82
  9104                           	movf	((c:___ftpack@exp)),c,w
  9105  002B7A  5004               	iorwf	((c:___ftpack@arg+2)),c
  9106  002B7C  1203               
  9107                           	line	83
  9108                           	
  9109                           l1799:
  9110  002B7E                     	movf	((c:___ftpack@sign)),c,w
  9111  002B7E  5005               	btfsc	status,2
  9112  002B80  B4D8               	goto	u1111
  9113  002B82  EFC5  F015         	goto	u1110
  9114  002B86  EFC7  F015         u1111:
  9115  002B8A                     	goto	l1803
  9116  002B8A  EFCA  F015         u1110:
  9117  002B8E                     	line	84
  9118                           	
  9119                           l1801:
  9120  002B8E                     	bsf	(0+(23/8)+(c:___ftpack@arg)),c,(23)&7
  9121  002B8E  8E03               	goto	l1803
  9122  002B90  EFCA  F015         	
  9123                           l589:
  9124  002B94                     	line	85
  9125                           	
  9126                           l1803:
  9127  002B94                     	movff	(c:___ftpack@arg),(c:?___ftpack)
  9128  002B94  C001  F001         	movff	(c:___ftpack@arg+1),(c:?___ftpack+1)
  9129  002B98  C002  F002         	movff	(c:___ftpack@arg+2),(c:?___ftpack+2)
  9130  002B9C  C003  F003         	goto	l576
  9131  002BA0  EFD2  F015         	
  9132                           l1805:
  9133  002BA4                     	line	86
  9134                           	
  9135                           l576:
  9136  002BA4                     	return	;funcret
  9137  002BA4  0012               	opt stack 0
  9138                           GLOBAL	__end_of___ftpack
  9139                           	__end_of___ftpack:
  9140  002BA6                     	signat	___ftpack,12411
  9141                           	global	_dataToColour
  9142                           
  9143 ;; *************** function _dataToColour *****************
  9144 ;; Defined at:
  9145 ;;		line 241 in file "main.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;  data            2   11[COMRAM] int 
  9148 ;;  temperature_    2   13[COMRAM] int 
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;  colour_temp     2   20[COMRAM] unsigned int 
  9151 ;;  green           1   19[COMRAM] unsigned char 
  9152 ;;  red             1   18[COMRAM] unsigned char 
  9153 ;;  blue            1   17[COMRAM] unsigned char 
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  2   11[COMRAM] unsigned int 
  9156 ;; Registers used:
  9157 ;;		wreg, status,2, status,0, cstack
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  9163 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  9164 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  9165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  9166 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  9167 ;;Total ram usage:       11 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:    1
  9170 ;; This function calls:
  9171 ;;		_get_colour
  9172 ;; This function is called by:
  9173 ;;		_drawBuffersToDisplay
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           psect	text28,class=CODE,space=0,reloc=2,group=0
  9177                           	file	"main.c"
  9178                           	line	241
  9179                           global __ptext28
  9180                           __ptext28:
  9181  0025DA                     psect	text28
  9182                           	file	"main.c"
  9183                           	line	241
  9184                           	global	__size_of_dataToColour
  9185                           	__size_of_dataToColour	equ	__end_of_dataToColour-_dataToColour
  9186  0000                     	
  9187                           _dataToColour:
  9188  0025DA                     ;incstack = 0
  9189                           	opt	stack 28
  9190                           	line	244
  9191                           	
  9192                           l2015:
  9193  0025DA                     ;main.c: 244: unsigned int colour_temp = (data & 0x7FF);
  9194                           	movlw	0FFh
  9195  0025DA  0EFF               	andwf	((c:dataToColour@data)),c,w
  9196  0025DC  140C               	movwf	((c:dataToColour@colour_temp)),c
  9197  0025DE  6E15               	movlw	07h
  9198  0025E0  0E07               	andwf	((c:dataToColour@data+1)),c,w
  9199  0025E2  140D               	movwf	1+((c:dataToColour@colour_temp)),c
  9200  0025E4  6E16               	line	245
  9201                           	
  9202                           l2017:
  9203  0025E6                     ;main.c: 245: unsigned char red = 0;
  9204                           	movlw	low(0)
  9205  0025E6  0E00               	movwf	((c:dataToColour@red)),c
  9206  0025E8  6E13               	line	246
  9207                           	
  9208                           l2019:
  9209  0025EA                     ;main.c: 246: unsigned char green = 0;
  9210                           	movlw	low(0)
  9211  0025EA  0E00               	movwf	((c:dataToColour@green)),c
  9212  0025EC  6E14               	line	247
  9213                           	
  9214                           l2021:
  9215  0025EE                     ;main.c: 247: unsigned char blue = 0;
  9216                           	movlw	low(0)
  9217  0025EE  0E00               	movwf	((c:dataToColour@blue)),c
  9218  0025F0  6E12               	line	249
  9219                           	
  9220                           l2023:
  9221  0025F2                     ;main.c: 249: if(data & 0x800)
  9222                           	
  9223                           	btfss	((c:dataToColour@data+1)),c,(11)&7
  9224  0025F2  A60D               	goto	u1341
  9225  0025F4  EFFE  F012         	goto	u1340
  9226  0025F8  EF00  F013         u1341:
  9227  0025FC                     	goto	l124
  9228  0025FC  EF03  F013         u1340:
  9229  002600                     	line	250
  9230                           	
  9231                           l2025:
  9232  002600                     ;main.c: 250: blue = colour_temp * 2;
  9233                           	movf	((c:dataToColour@colour_temp)),c,w
  9234  002600  5015               	addwf	((c:dataToColour@colour_temp)),c,w
  9235  002602  2415               	movwf	((c:dataToColour@blue)),c
  9236  002604  6E12               	
  9237                           l124:
  9238  002606                     	line	251
  9239                           ;main.c: 251: if(colour_temp < temperature_range)
  9240                           		movf	((c:dataToColour@temperature_range)),c,w
  9241  002606  500E               	subwf	((c:dataToColour@colour_temp)),c,w
  9242  002608  5C15               	movf	((c:dataToColour@temperature_range+1)),c,w
  9243  00260A  500F               	subwfb	((c:dataToColour@colour_temp+1)),c,w
  9244  00260C  5816               	btfsc	status,0
  9245  00260E  B0D8               	goto	u1351
  9246  002610  EF0C  F013         	goto	u1350
  9247  002614  EF0E  F013         
  9248                           u1351:
  9249  002618                     	goto	l125
  9250  002618  EF11  F013         u1350:
  9251  00261C                     	line	252
  9252                           	
  9253                           l2027:
  9254  00261C                     ;main.c: 252: green = colour_temp*2;
  9255                           	movf	((c:dataToColour@colour_temp)),c,w
  9256  00261C  5015               	addwf	((c:dataToColour@colour_temp)),c,w
  9257  00261E  2415               	movwf	((c:dataToColour@green)),c
  9258  002620  6E14               	
  9259                           l125:
  9260  002622                     	line	253
  9261                           ;main.c: 253: if(colour_temp >= temperature_range) {
  9262                           		movf	((c:dataToColour@temperature_range)),c,w
  9263  002622  500E               	subwf	((c:dataToColour@colour_temp)),c,w
  9264  002624  5C15               	movf	((c:dataToColour@temperature_range+1)),c,w
  9265  002626  500F               	subwfb	((c:dataToColour@colour_temp+1)),c,w
  9266  002628  5816               	btfss	status,0
  9267  00262A  A0D8               	goto	u1361
  9268  00262C  EF1A  F013         	goto	u1360
  9269  002630  EF1C  F013         
  9270                           u1361:
  9271  002634                     	goto	l126
  9272  002634  EF22  F013         u1360:
  9273  002638                     	line	254
  9274                           	
  9275                           l2029:
  9276  002638                     ;main.c: 254: red = colour_temp*2;
  9277                           	movf	((c:dataToColour@colour_temp)),c,w
  9278  002638  5015               	addwf	((c:dataToColour@colour_temp)),c,w
  9279  00263A  2415               	movwf	((c:dataToColour@red)),c
  9280  00263C  6E13               	line	255
  9281                           ;main.c: 255: green = colour_temp*2;
  9282                           	movf	((c:dataToColour@colour_temp)),c,w
  9283  00263E  5015               	addwf	((c:dataToColour@colour_temp)),c,w
  9284  002640  2415               	movwf	((c:dataToColour@green)),c
  9285  002642  6E14               	line	256
  9286                           	
  9287                           l126:
  9288  002644                     	line	257
  9289                           ;main.c: 256: };main.c: 257: if((colour_temp * 2) > 0xFF) {
  9290                           	movff	(c:dataToColour@colour_temp),??_dataToColour+0+0
  9291  002644  C015  F010         	movff	(c:dataToColour@colour_temp+1),??_dataToColour+0+0+1
  9292  002648  C016  F011         	bcf	status,0
  9293  00264C  90D8               	rlcf	(??_dataToColour+0+0),c,f
  9294  00264E  3610               	rlcf	(??_dataToColour+0+1),c,f
  9295  002650  3611               		decf	(??_dataToColour+0+1),c,w
  9296  002652  0411               	btfss	status,0
  9297  002654  A0D8               	goto	u1371
  9298  002656  EF2F  F013         	goto	u1370
  9299  00265A  EF31  F013         
  9300                           u1371:
  9301  00265E                     	goto	l2035
  9302  00265E  EF37  F013         u1370:
  9303  002662                     	line	258
  9304                           	
  9305                           l2031:
  9306  002662                     ;main.c: 258: red = colour_temp;
  9307                           	movff	(c:dataToColour@colour_temp),(c:dataToColour@red)
  9308  002662  C015  F013         	line	259
  9309                           	
  9310                           l2033:
  9311  002666                     ;main.c: 259: green = 0;
  9312                           	movlw	low(0)
  9313  002666  0E00               	movwf	((c:dataToColour@green)),c
  9314  002668  6E14               	goto	l2035
  9315  00266A  EF37  F013         	line	260
  9316                           	
  9317                           l127:
  9318  00266E                     	line	263
  9319                           	
  9320                           l2035:
  9321  00266E                     ;main.c: 260: };main.c: 263: return get_colour(red, green, blue);
  9322                           	movff	(c:dataToColour@green),(c:get_colour@green)
  9323  00266E  C014  F001         	movff	(c:dataToColour@blue),(c:get_colour@blue)
  9324  002672  C012  F002         	movf	((c:dataToColour@red)),c,w
  9325  002676  5013               	
  9326                           	call	_get_colour
  9327  002678  EC36  F011         	movff	0+?_get_colour,(c:?_dataToColour)
  9328  00267C  C001  F00C         	movff	1+?_get_colour,(c:?_dataToColour+1)
  9329  002680  C002  F00D         	goto	l128
  9330  002684  EF44  F013         	
  9331                           l2037:
  9332  002688                     	line	264
  9333                           	
  9334                           l128:
  9335  002688                     	return	;funcret
  9336  002688  0012               	opt stack 0
  9337                           GLOBAL	__end_of_dataToColour
  9338                           	__end_of_dataToColour:
  9339  00268A                     	signat	_dataToColour,8314
  9340                           	global	_get_colour
  9341                           
  9342 ;; *************** function _get_colour *****************
  9343 ;; Defined at:
  9344 ;;		line 294 in file "ST7735.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  red             1    wreg     unsigned char 
  9347 ;;  green           1    0[COMRAM] unsigned char 
  9348 ;;  blue            1    1[COMRAM] unsigned char 
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;  red             1   10[COMRAM] unsigned char 
  9351 ;;  colour          2    8[COMRAM] unsigned int 
  9352 ;; Return value:  Size  Location     Type
  9353 ;;                  2    0[COMRAM] unsigned int 
  9354 ;; Registers used:
  9355 ;;		wreg, status,2, status,0
  9356 ;; Tracked objects:
  9357 ;;		On entry : 0/0
  9358 ;;		On exit  : 0/0
  9359 ;;		Unchanged: 0/0
  9360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  9361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  9362 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  9363 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  9364 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  9365 ;;Total ram usage:       11 bytes
  9366 ;; Hardware stack levels used:    1
  9367 ;; This function calls:
  9368 ;;		Nothing
  9369 ;; This function is called by:
  9370 ;;		_dataToColour
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           psect	text29,class=CODE,space=0,reloc=2,group=0
  9374                           	file	"ST7735.c"
  9375                           	line	294
  9376                           global __ptext29
  9377                           __ptext29:
  9378  00226C                     psect	text29
  9379                           	file	"ST7735.c"
  9380                           	line	294
  9381                           	global	__size_of_get_colour
  9382                           	__size_of_get_colour	equ	__end_of_get_colour-_get_colour
  9383  0000                     	
  9384                           _get_colour:
  9385  00226C                     ;incstack = 0
  9386                           	opt	stack 28
  9387                           ;get_colour@red stored from wreg
  9388                           	movwf	((c:get_colour@red)),c
  9389  00226C  6E0B               	line	295
  9390                           	
  9391                           l1917:
  9392  00226E                     ;ST7735.c: 295: unsigned int colour = ((red & 0xF8) << 8) | ((green & 0xFC) << 3) | (blu
                                 e >> 3);
  9393                           	movf	((c:get_colour@green)),c,w
  9394  00226E  5001               	andlw	low(0FCh)
  9395  002270  0BFC               	movwf	(??_get_colour+0+0)&0ffh,c
  9396  002272  6E03               	clrf	(??_get_colour+0+0+1)&0ffh,c
  9397  002274  6A04               
  9398                           	bcf	status,0
  9399  002276  90D8               	rlcf	(??_get_colour+0+0),c
  9400  002278  3603               	rlcf	(??_get_colour+0+1),c
  9401  00227A  3604               	bcf	status,0
  9402  00227C  90D8               	rlcf	(??_get_colour+0+0),c
  9403  00227E  3603               	rlcf	(??_get_colour+0+1),c
  9404  002280  3604               	bcf	status,0
  9405  002282  90D8               	rlcf	(??_get_colour+0+0),c
  9406  002284  3603               	rlcf	(??_get_colour+0+1),c
  9407  002286  3604               	movff	(c:get_colour@red),??_get_colour+2+0
  9408  002288  C00B  F005         	movlw	0F8h
  9409  00228C  0EF8               	andwf	(??_get_colour+2+0),c
  9410  00228E  1605               	movf	(??_get_colour+2+0),c,w
  9411  002290  5005               	movwf	(??_get_colour+3+0+1)&0ffh,c
  9412  002292  6E07               	clrf	(??_get_colour+3+0)&0ffh,c
  9413  002294  6A06               	movf	(??_get_colour+0+0),c,w
  9414  002296  5003               	iorwf	(??_get_colour+3+0),c
  9415  002298  1206               	movf	(??_get_colour+0+1),c,w
  9416  00229A  5004               	iorwf	(??_get_colour+3+1),c
  9417  00229C  1207               	movff	(c:get_colour@blue),??_get_colour+5+0
  9418  00229E  C002  F008         	bcf	status,0
  9419  0022A2  90D8               	rrcf	(??_get_colour+5+0),c
  9420  0022A4  3208               	bcf	status,0
  9421  0022A6  90D8               	rrcf	(??_get_colour+5+0),c
  9422  0022A8  3208               	bcf	status,0
  9423  0022AA  90D8               	rrcf	(??_get_colour+5+0),c
  9424  0022AC  3208               
  9425                           	movf	(??_get_colour+5+0),c,w
  9426  0022AE  5008               	iorwf	(??_get_colour+3+0),c,w
  9427  0022B0  1006               	movwf	((c:get_colour@colour)),c
  9428  0022B2  6E09               	movf	(??_get_colour+3+1),c,w
  9429  0022B4  5007               	movwf	1+((c:get_colour@colour)),c
  9430  0022B6  6E0A               	line	296
  9431                           	
  9432                           l1919:
  9433  0022B8                     ;ST7735.c: 296: return colour;
  9434                           	movff	(c:get_colour@colour),(c:?_get_colour)
  9435  0022B8  C009  F001         	movff	(c:get_colour@colour+1),(c:?_get_colour+1)
  9436  0022BC  C00A  F002         	goto	l267
  9437  0022C0  EF62  F011         	
  9438                           l1921:
  9439  0022C4                     	line	297
  9440                           	
  9441                           l267:
  9442  0022C4                     	return	;funcret
  9443  0022C4  0012               	opt stack 0
  9444                           GLOBAL	__end_of_get_colour
  9445                           	__end_of_get_colour:
  9446  0022C6                     	signat	_get_colour,12410
  9447                           	global	_calculateInterpolatedPixels
  9448                           
  9449 ;; *************** function _calculateInterpolatedPixels *****************
  9450 ;; Defined at:
  9451 ;;		line 351 in file "main.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;  main_buffer     2    8[COMRAM] PTR int 
  9454 ;;		 -> ir_buffer(128), 
  9455 ;;  y_interpolat    2   10[COMRAM] PTR int 
  9456 ;;		 -> y_interpolated_pixels(128), 
  9457 ;;  x_interpolat    2   12[COMRAM] PTR int 
  9458 ;;		 -> x_interpolated_pixels(128), 
  9459 ;;  xy_interpola    2   14[COMRAM] PTR int 
  9460 ;;		 -> xy_interpolated_pixels(128), 
  9461 ;; Auto vars:     Size  Location     Type
  9462 ;;  y               2   30[COMRAM] int 
  9463 ;;  x               2   28[COMRAM] int 
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  1    wreg      void 
  9466 ;; Registers used:
  9467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
  9473 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  9474 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  9475 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  9476 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
  9477 ;;Total ram usage:       24 bytes
  9478 ;; Hardware stack levels used:    1
  9479 ;; Hardware stack levels required when called:    1
  9480 ;; This function calls:
  9481 ;;		___awdiv
  9482 ;; This function is called by:
  9483 ;;		_main
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           psect	text30,class=CODE,space=0,reloc=2,group=0
  9487                           	file	"main.c"
  9488                           	line	351
  9489                           global __ptext30
  9490                           __ptext30:
  9491  0033FC                     psect	text30
  9492                           	file	"main.c"
  9493                           	line	351
  9494                           	global	__size_of_calculateInterpolatedPixels
  9495                           	__size_of_calculateInterpolatedPixels	equ	__end_of_calculateInterpolatedPixels-_calcula
                                 teInterpolatedPixels
  9496  0000                     	
  9497                           _calculateInterpolatedPixels:
  9498  0033FC                     ;incstack = 0
  9499                           	opt	stack 29
  9500                           	line	354
  9501                           	
  9502                           l2175:
  9503  0033FC                     ;main.c: 354: for(int x = 0; x < 8; x++) {
  9504                           	movlw	high(0)
  9505  0033FC  0E00               	movwf	((c:calculateInterpolatedPixels@x+1)),c
  9506  0033FE  6E1E               	movlw	low(0)
  9507  003400  0E00               	movwf	((c:calculateInterpolatedPixels@x)),c
  9508  003402  6E1D               	
  9509                           l2177:
  9510  003404                     	btfsc	((c:calculateInterpolatedPixels@x+1)),c,7
  9511  003404  BE1E               	goto	u1521
  9512  003406  EF0E  F01A         	movf	((c:calculateInterpolatedPixels@x+1)),c,w
  9513  00340A  501E               	bnz	u1520
  9514  00340C  E109               	movlw	8
  9515  00340E  0E08               	subwf	 ((c:calculateInterpolatedPixels@x)),c,w
  9516  003410  5C1D               	btfss	status,0
  9517  003412  A0D8               	goto	u1521
  9518  003414  EF0E  F01A         	goto	u1520
  9519  003418  EF10  F01A         
  9520                           u1521:
  9521  00341C                     	goto	l2181
  9522  00341C  EF14  F01A         u1520:
  9523  003420                     	goto	l154
  9524  003420  EFD0  F01B         	
  9525                           l2179:
  9526  003424                     	goto	l154
  9527  003424  EFD0  F01B         	
  9528                           l147:
  9529  003428                     	line	355
  9530                           	
  9531                           l2181:
  9532  003428                     ;main.c: 355: for(int y = 0; y < 8; y++) {
  9533                           	movlw	high(0)
  9534  003428  0E00               	movwf	((c:calculateInterpolatedPixels@y+1)),c
  9535  00342A  6E20               	movlw	low(0)
  9536  00342C  0E00               	movwf	((c:calculateInterpolatedPixels@y)),c
  9537  00342E  6E1F               	
  9538                           l2183:
  9539  003430                     	btfsc	((c:calculateInterpolatedPixels@y+1)),c,7
  9540  003430  BE20               	goto	u1531
  9541  003432  EF24  F01A         	movf	((c:calculateInterpolatedPixels@y+1)),c,w
  9542  003436  5020               	bnz	u1530
  9543  003438  E109               	movlw	8
  9544  00343A  0E08               	subwf	 ((c:calculateInterpolatedPixels@y)),c,w
  9545  00343C  5C1F               	btfss	status,0
  9546  00343E  A0D8               	goto	u1531
  9547  003440  EF24  F01A         	goto	u1530
  9548  003444  EF26  F01A         
  9549                           u1531:
  9550  003448                     	goto	l2187
  9551  003448  EF2A  F01A         u1530:
  9552  00344C                     	goto	l2205
  9553  00344C  EFBE  F01B         	
  9554                           l2185:
  9555  003450                     	goto	l2205
  9556  003450  EFBE  F01B         	
  9557                           l149:
  9558  003454                     	line	357
  9559                           	
  9560                           l2187:
  9561  003454                     ;main.c: 357: if(y>0)
  9562                           	btfsc	((c:calculateInterpolatedPixels@y+1)),c,7
  9563  003454  BE20               	goto	u1541
  9564  003456  EF35  F01A         	movf	((c:calculateInterpolatedPixels@y+1)),c,w
  9565  00345A  5020               	bnz	u1540
  9566  00345C  E108               	decf	((c:calculateInterpolatedPixels@y)),c,w
  9567  00345E  041F               	btfss	status,0
  9568  003460  A0D8               	goto	u1541
  9569  003462  EF35  F01A         	goto	u1540
  9570  003466  EF37  F01A         
  9571                           u1541:
  9572  00346A                     	goto	l2191
  9573  00346A  EFA7  F01A         u1540:
  9574  00346E                     	line	358
  9575                           	
  9576                           l2189:
  9577  00346E                     ;main.c: 358: y_interpolated_buffer[(x * 8) + y] = (int)((main_buffer[(x * 8) + y-1] + m
                                 ain_buffer[(x * 8) + y]) / 2);
  9578                           	movff	(c:calculateInterpolatedPixels@x),??_calculateInterpolatedPixels+0+0
  9579  00346E  C01D  F011         	movff	(c:calculateInterpolatedPixels@x+1),??_calculateInterpolatedPixels+0+0+1
  9580  003472  C01E  F012         	bcf	status,0
  9581  003476  90D8               	rlcf	(??_calculateInterpolatedPixels+0+0),c
  9582  003478  3611               	rlcf	(??_calculateInterpolatedPixels+0+1),c
  9583  00347A  3612               	bcf	status,0
  9584  00347C  90D8               	rlcf	(??_calculateInterpolatedPixels+0+0),c
  9585  00347E  3611               	rlcf	(??_calculateInterpolatedPixels+0+1),c
  9586  003480  3612               	bcf	status,0
  9587  003482  90D8               	rlcf	(??_calculateInterpolatedPixels+0+0),c
  9588  003484  3611               	rlcf	(??_calculateInterpolatedPixels+0+1),c
  9589  003486  3612               	movf	((c:calculateInterpolatedPixels@y)),c,w
  9590  003488  501F               	addwf	(??_calculateInterpolatedPixels+0+0),c
  9591  00348A  2611               	movf	((c:calculateInterpolatedPixels@y+1)),c,w
  9592  00348C  5020               	addwfc	(??_calculateInterpolatedPixels+0+1),c
  9593  00348E  2212               	bcf	status,0
  9594  003490  90D8               	rlcf	(??_calculateInterpolatedPixels+0+0),c,f
  9595  003492  3611               	rlcf	(??_calculateInterpolatedPixels+0+1),c,f
  9596  003494  3612               	movf	(??_calculateInterpolatedPixels+0+0),c,w
  9597  003496  5011               	addwf	((c:calculateInterpolatedPixels@main_buffer)),c,w
  9598  003498  2409               	movwf	c:fsr2l
  9599  00349A  6ED9               	movf	(??_calculateInterpolatedPixels+0+1),c,w
  9600  00349C  5012               	addwfc	((c:calculateInterpolatedPixels@main_buffer+1)),c,w
  9601  00349E  200A               	movwf	1+c:fsr2l
  9602  0034A0  6EDA               	movff	postinc2,??_calculateInterpolatedPixels+2+0
  9603  0034A2  CFDE F013          	movff	postdec2,??_calculateInterpolatedPixels+2+0+1
  9604  0034A6  CFDD F014          	movlw	low(-2)
  9605  0034AA  0EFE               	movwf	(??_calculateInterpolatedPixels+4+0)&0ffh,c
  9606  0034AC  6E15               	movlw	high(-2)
  9607  0034AE  0EFF               	movwf	1+(??_calculateInterpolatedPixels+4+0)&0ffh,c
  9608  0034B0  6E16               	movff	(c:calculateInterpolatedPixels@x),??_calculateInterpolatedPixels+6+0
  9609  0034B2  C01D  F017         	movff	(c:calculateInterpolatedPixels@x+1),??_calculateInterpolatedPixels+6+0+1
  9610  0034B6  C01E  F018         	bcf	status,0
  9611  0034BA  90D8               	rlcf	(??_calculateInterpolatedPixels+6+0),c
  9612  0034BC  3617               	rlcf	(??_calculateInterpolatedPixels+6+1),c
  9613  0034BE  3618               	bcf	status,0
  9614  0034C0  90D8               	rlcf	(??_calculateInterpolatedPixels+6+0),c
  9615  0034C2  3617               	rlcf	(??_calculateInterpolatedPixels+6+1),c
  9616  0034C4  3618               	bcf	status,0
  9617  0034C6  90D8               	rlcf	(??_calculateInterpolatedPixels+6+0),c
  9618  0034C8  3617               	rlcf	(??_calculateInterpolatedPixels+6+1),c
  9619  0034CA  3618               	movf	((c:calculateInterpolatedPixels@y)),c,w
  9620  0034CC  501F               	addwf	(??_calculateInterpolatedPixels+6+0),c
  9621  0034CE  2617               	movf	((c:calculateInterpolatedPixels@y+1)),c,w
  9622  0034D0  5020               	addwfc	(??_calculateInterpolatedPixels+6+1),c
  9623  0034D2  2218               	bcf	status,0
  9624  0034D4  90D8               	rlcf	(??_calculateInterpolatedPixels+6+0),c,f
  9625  0034D6  3617               	rlcf	(??_calculateInterpolatedPixels+6+1),c,f
  9626  0034D8  3618               	movf	(??_calculateInterpolatedPixels+4+0),c,w
  9627  0034DA  5015               	addwf	(??_calculateInterpolatedPixels+6+0),c
  9628  0034DC  2617               	movf	(??_calculateInterpolatedPixels+4+1),c,w
  9629  0034DE  5016               	addwfc	(??_calculateInterpolatedPixels+6+1),c
  9630  0034E0  2218               	movf	(??_calculateInterpolatedPixels+6+0),c,w
  9631  0034E2  5017               	addwf	((c:calculateInterpolatedPixels@main_buffer)),c,w
  9632  0034E4  2409               	movwf	c:fsr2l
  9633  0034E6  6ED9               	movf	(??_calculateInterpolatedPixels+6+1),c,w
  9634  0034E8  5018               	addwfc	((c:calculateInterpolatedPixels@main_buffer+1)),c,w
  9635  0034EA  200A               	movwf	1+c:fsr2l
  9636  0034EC  6EDA               	movff	postinc2,??_calculateInterpolatedPixels+8+0
  9637  0034EE  CFDE F019          	movff	postdec2,??_calculateInterpolatedPixels+8+0+1
  9638  0034F2  CFDD F01A          	movf	(??_calculateInterpolatedPixels+2+0),c,w
  9639  0034F6  5013               	addwf	(??_calculateInterpolatedPixels+8+0),c,w
  9640  0034F8  2419               	movwf	((c:___awdiv@dividend)),c
  9641  0034FA  6E01               	movf	(??_calculateInterpolatedPixels+2+1),c,w
  9642  0034FC  5014               	addwfc	(??_calculateInterpolatedPixels+8+1),c,w
  9643  0034FE  201A               	movwf	1+((c:___awdiv@dividend)),c
  9644  003500  6E02               	movlw	high(02h)
  9645  003502  0E00               	movwf	((c:___awdiv@divisor+1)),c
  9646  003504  6E04               	movlw	low(02h)
  9647  003506  0E02               	movwf	((c:___awdiv@divisor)),c
  9648  003508  6E03               	call	___awdiv	;wreg free
  9649  00350A  EC45  F013         	movff	(c:calculateInterpolatedPixels@x),??_calculateInterpolatedPixels+10+0
  9650  00350E  C01D  F01B         	movff	(c:calculateInterpolatedPixels@x+1),??_calculateInterpolatedPixels+10+0+1
  9651  003512  C01E  F01C         	bcf	status,0
  9652  003516  90D8               	rlcf	(??_calculateInterpolatedPixels+10+0),c
  9653  003518  361B               	rlcf	(??_calculateInterpolatedPixels+10+1),c
  9654  00351A  361C               	bcf	status,0
  9655  00351C  90D8               	rlcf	(??_calculateInterpolatedPixels+10+0),c
  9656  00351E  361B               	rlcf	(??_calculateInterpolatedPixels+10+1),c
  9657  003520  361C               	bcf	status,0
  9658  003522  90D8               	rlcf	(??_calculateInterpolatedPixels+10+0),c
  9659  003524  361B               	rlcf	(??_calculateInterpolatedPixels+10+1),c
  9660  003526  361C               	movf	((c:calculateInterpolatedPixels@y)),c,w
  9661  003528  501F               	addwf	(??_calculateInterpolatedPixels+10+0),c
  9662  00352A  261B               	movf	((c:calculateInterpolatedPixels@y+1)),c,w
  9663  00352C  5020               	addwfc	(??_calculateInterpolatedPixels+10+1),c
  9664  00352E  221C               	bcf	status,0
  9665  003530  90D8               	rlcf	(??_calculateInterpolatedPixels+10+0),c,f
  9666  003532  361B               	rlcf	(??_calculateInterpolatedPixels+10+1),c,f
  9667  003534  361C               	movf	(??_calculateInterpolatedPixels+10+0),c,w
  9668  003536  501B               	addwf	((c:calculateInterpolatedPixels@y_interpolated_buffer)),c,w
  9669  003538  240B               	movwf	c:fsr2l
  9670  00353A  6ED9               	movf	(??_calculateInterpolatedPixels+10+1),c,w
  9671  00353C  501C               	addwfc	((c:calculateInterpolatedPixels@y_interpolated_buffer+1)),c,w
  9672  00353E  200C               	movwf	1+c:fsr2l
  9673  003540  6EDA               	movff	0+?___awdiv,postinc2
  9674  003542  C001  FFDE         	movff	1+?___awdiv,postdec2
  9675  003546  C002  FFDD         
  9676                           	goto	l2191
  9677  00354A  EFA7  F01A         	
  9678                           l151:
  9679  00354E                     	line	360
  9680                           	
  9681                           l2191:
  9682  00354E                     ;main.c: 360: if(x>0)
  9683                           	btfsc	((c:calculateInterpolatedPixels@x+1)),c,7
  9684  00354E  BE1E               	goto	u1551
  9685  003550  EFB2  F01A         	movf	((c:calculateInterpolatedPixels@x+1)),c,w
  9686  003554  501E               	bnz	u1550
  9687  003556  E108               	decf	((c:calculateInterpolatedPixels@x)),c,w
  9688  003558  041D               	btfss	status,0
  9689  00355A  A0D8               	goto	u1551
  9690  00355C  EFB2  F01A         	goto	u1550
  9691  003560  EFB4  F01A         
  9692                           u1551:
  9693  003564                     	goto	l2195
  9694  003564  EF24  F01B         u1550:
  9695  003568                     	line	361
  9696                           	
  9697                           l2193:
  9698  003568                     ;main.c: 361: x_interpolated_buffer[(x * 8) + y] = (int)((main_buffer[((x-1) * 8) + y] +
                                  main_buffer[(x * 8) + y]) / 2);
  9699                           	movff	(c:calculateInterpolatedPixels@x),??_calculateInterpolatedPixels+0+0
  9700  003568  C01D  F011         	movff	(c:calculateInterpolatedPixels@x+1),??_calculateInterpolatedPixels+0+0+1
  9701  00356C  C01E  F012         	bcf	status,0
  9702  003570  90D8               	rlcf	(??_calculateInterpolatedPixels+0+0),c
  9703  003572  3611               	rlcf	(??_calculateInterpolatedPixels+0+1),c
  9704  003574  3612               	bcf	status,0
  9705  003576  90D8               	rlcf	(??_calculateInterpolatedPixels+0+0),c
  9706  003578  3611               	rlcf	(??_calculateInterpolatedPixels+0+1),c
  9707  00357A  3612               	bcf	status,0
  9708  00357C  90D8               	rlcf	(??_calculateInterpolatedPixels+0+0),c
  9709  00357E  3611               	rlcf	(??_calculateInterpolatedPixels+0+1),c
  9710  003580  3612               	movf	((c:calculateInterpolatedPixels@y)),c,w
  9711  003582  501F               	addwf	(??_calculateInterpolatedPixels+0+0),c
  9712  003584  2611               	movf	((c:calculateInterpolatedPixels@y+1)),c,w
  9713  003586  5020               	addwfc	(??_calculateInterpolatedPixels+0+1),c
  9714  003588  2212               	bcf	status,0
  9715  00358A  90D8               	rlcf	(??_calculateInterpolatedPixels+0+0),c,f
  9716  00358C  3611               	rlcf	(??_calculateInterpolatedPixels+0+1),c,f
  9717  00358E  3612               	movf	(??_calculateInterpolatedPixels+0+0),c,w
  9718  003590  5011               	addwf	((c:calculateInterpolatedPixels@main_buffer)),c,w
  9719  003592  2409               	movwf	c:fsr2l
  9720  003594  6ED9               	movf	(??_calculateInterpolatedPixels+0+1),c,w
  9721  003596  5012               	addwfc	((c:calculateInterpolatedPixels@main_buffer+1)),c,w
  9722  003598  200A               	movwf	1+c:fsr2l
  9723  00359A  6EDA               	movff	postinc2,??_calculateInterpolatedPixels+2+0
  9724  00359C  CFDE F013          	movff	postdec2,??_calculateInterpolatedPixels+2+0+1
  9725  0035A0  CFDD F014          	movlw	low(-16)
  9726  0035A4  0EF0               	movwf	(??_calculateInterpolatedPixels+4+0)&0ffh,c
  9727  0035A6  6E15               	movlw	high(-16)
  9728  0035A8  0EFF               	movwf	1+(??_calculateInterpolatedPixels+4+0)&0ffh,c
  9729  0035AA  6E16               	movff	(c:calculateInterpolatedPixels@x),??_calculateInterpolatedPixels+6+0
  9730  0035AC  C01D  F017         	movff	(c:calculateInterpolatedPixels@x+1),??_calculateInterpolatedPixels+6+0+1
  9731  0035B0  C01E  F018         	bcf	status,0
  9732  0035B4  90D8               	rlcf	(??_calculateInterpolatedPixels+6+0),c
  9733  0035B6  3617               	rlcf	(??_calculateInterpolatedPixels+6+1),c
  9734  0035B8  3618               	bcf	status,0
  9735  0035BA  90D8               	rlcf	(??_calculateInterpolatedPixels+6+0),c
  9736  0035BC  3617               	rlcf	(??_calculateInterpolatedPixels+6+1),c
  9737  0035BE  3618               	bcf	status,0
  9738  0035C0  90D8               	rlcf	(??_calculateInterpolatedPixels+6+0),c
  9739  0035C2  3617               	rlcf	(??_calculateInterpolatedPixels+6+1),c
  9740  0035C4  3618               	movf	((c:calculateInterpolatedPixels@y)),c,w
  9741  0035C6  501F               	addwf	(??_calculateInterpolatedPixels+6+0),c
  9742  0035C8  2617               	movf	((c:calculateInterpolatedPixels@y+1)),c,w
  9743  0035CA  5020               	addwfc	(??_calculateInterpolatedPixels+6+1),c
  9744  0035CC  2218               	bcf	status,0
  9745  0035CE  90D8               	rlcf	(??_calculateInterpolatedPixels+6+0),c,f
  9746  0035D0  3617               	rlcf	(??_calculateInterpolatedPixels+6+1),c,f
  9747  0035D2  3618               	movf	(??_calculateInterpolatedPixels+4+0),c,w
  9748  0035D4  5015               	addwf	(??_calculateInterpolatedPixels+6+0),c
  9749  0035D6  2617               	movf	(??_calculateInterpolatedPixels+4+1),c,w
  9750  0035D8  5016               	addwfc	(??_calculateInterpolatedPixels+6+1),c
  9751  0035DA  2218               	movf	(??_calculateInterpolatedPixels+6+0),c,w
  9752  0035DC  5017               	addwf	((c:calculateInterpolatedPixels@main_buffer)),c,w
  9753  0035DE  2409               	movwf	c:fsr2l
  9754  0035E0  6ED9               	movf	(??_calculateInterpolatedPixels+6+1),c,w
  9755  0035E2  5018               	addwfc	((c:calculateInterpolatedPixels@main_buffer+1)),c,w
  9756  0035E4  200A               	movwf	1+c:fsr2l
  9757  0035E6  6EDA               	movff	postinc2,??_calculateInterpolatedPixels+8+0
  9758  0035E8  CFDE F019          	movff	postdec2,??_calculateInterpolatedPixels+8+0+1
  9759  0035EC  CFDD F01A          	movf	(??_calculateInterpolatedPixels+2+0),c,w
  9760  0035F0  5013               	addwf	(??_calculateInterpolatedPixels+8+0),c,w
  9761  0035F2  2419               	movwf	((c:___awdiv@dividend)),c
  9762  0035F4  6E01               	movf	(??_calculateInterpolatedPixels+2+1),c,w
  9763  0035F6  5014               	addwfc	(??_calculateInterpolatedPixels+8+1),c,w
  9764  0035F8  201A               	movwf	1+((c:___awdiv@dividend)),c
  9765  0035FA  6E02               	movlw	high(02h)
  9766  0035FC  0E00               	movwf	((c:___awdiv@divisor+1)),c
  9767  0035FE  6E04               	movlw	low(02h)
  9768  003600  0E02               	movwf	((c:___awdiv@divisor)),c
  9769  003602  6E03               	call	___awdiv	;wreg free
  9770  003604  EC45  F013         	movff	(c:calculateInterpolatedPixels@x),??_calculateInterpolatedPixels+10+0
  9771  003608  C01D  F01B         	movff	(c:calculateInterpolatedPixels@x+1),??_calculateInterpolatedPixels+10+0+1
  9772  00360C  C01E  F01C         	bcf	status,0
  9773  003610  90D8               	rlcf	(??_calculateInterpolatedPixels+10+0),c
  9774  003612  361B               	rlcf	(??_calculateInterpolatedPixels+10+1),c
  9775  003614  361C               	bcf	status,0
  9776  003616  90D8               	rlcf	(??_calculateInterpolatedPixels+10+0),c
  9777  003618  361B               	rlcf	(??_calculateInterpolatedPixels+10+1),c
  9778  00361A  361C               	bcf	status,0
  9779  00361C  90D8               	rlcf	(??_calculateInterpolatedPixels+10+0),c
  9780  00361E  361B               	rlcf	(??_calculateInterpolatedPixels+10+1),c
  9781  003620  361C               	movf	((c:calculateInterpolatedPixels@y)),c,w
  9782  003622  501F               	addwf	(??_calculateInterpolatedPixels+10+0),c
  9783  003624  261B               	movf	((c:calculateInterpolatedPixels@y+1)),c,w
  9784  003626  5020               	addwfc	(??_calculateInterpolatedPixels+10+1),c
  9785  003628  221C               	bcf	status,0
  9786  00362A  90D8               	rlcf	(??_calculateInterpolatedPixels+10+0),c,f
  9787  00362C  361B               	rlcf	(??_calculateInterpolatedPixels+10+1),c,f
  9788  00362E  361C               	movf	(??_calculateInterpolatedPixels+10+0),c,w
  9789  003630  501B               	addwf	((c:calculateInterpolatedPixels@x_interpolated_buffer)),c,w
  9790  003632  240D               	movwf	c:fsr2l
  9791  003634  6ED9               	movf	(??_calculateInterpolatedPixels+10+1),c,w
  9792  003636  501C               	addwfc	((c:calculateInterpolatedPixels@x_interpolated_buffer+1)),c,w
  9793  003638  200E               	movwf	1+c:fsr2l
  9794  00363A  6EDA               	movff	0+?___awdiv,postinc2
  9795  00363C  C001  FFDE         	movff	1+?___awdiv,postdec2
  9796  003640  C002  FFDD         
  9797                           	goto	l2195
  9798  003644  EF24  F01B         	
  9799                           l152:
  9800  003648                     	line	362
  9801                           	
  9802                           l2195:
  9803  003648                     ;main.c: 362: if((x < 8) && (y < 8)) {
  9804                           	btfsc	((c:calculateInterpolatedPixels@x+1)),c,7
  9805  003648  BE1E               	goto	u1560
  9806  00364A  EF32  F01B         	movf	((c:calculateInterpolatedPixels@x+1)),c,w
  9807  00364E  501E               	bnz	u1561
  9808  003650  E107               	movlw	8
  9809  003652  0E08               	subwf	 ((c:calculateInterpolatedPixels@x)),c,w
  9810  003654  5C1D               	btfsc	status,0
  9811  003656  B0D8               	goto	u1561
  9812  003658  EF30  F01B         	goto	u1560
  9813  00365C  EF32  F01B         
  9814                           u1561:
  9815  003660                     	goto	l2201
  9816  003660  EFAC  F01B         u1560:
  9817  003664                     	
  9818                           l2197:
  9819  003664                     	btfsc	((c:calculateInterpolatedPixels@y+1)),c,7
  9820  003664  BE20               	goto	u1570
  9821  003666  EF40  F01B         	movf	((c:calculateInterpolatedPixels@y+1)),c,w
  9822  00366A  5020               	bnz	u1571
  9823  00366C  E107               	movlw	8
  9824  00366E  0E08               	subwf	 ((c:calculateInterpolatedPixels@y)),c,w
  9825  003670  5C1F               	btfsc	status,0
  9826  003672  B0D8               	goto	u1571
  9827  003674  EF3E  F01B         	goto	u1570
  9828  003678  EF40  F01B         
  9829                           u1571:
  9830  00367C                     	goto	l2201
  9831  00367C  EFAC  F01B         u1570:
  9832  003680                     	line	363
  9833                           	
  9834                           l2199:
  9835  003680                     ;main.c: 363: xy_interpolated_buffer[(x * 8) + y] = (int)((main_buffer[(x * 8) + y] + ma
                                 in_buffer[((x+1) * 8) + y + 1]) / 2);
  9836                           	movff	(c:calculateInterpolatedPixels@x),??_calculateInterpolatedPixels+0+0
  9837  003680  C01D  F011         	movff	(c:calculateInterpolatedPixels@x+1),??_calculateInterpolatedPixels+0+0+1
  9838  003684  C01E  F012         	bcf	status,0
  9839  003688  90D8               	rlcf	(??_calculateInterpolatedPixels+0+0),c
  9840  00368A  3611               	rlcf	(??_calculateInterpolatedPixels+0+1),c
  9841  00368C  3612               	bcf	status,0
  9842  00368E  90D8               	rlcf	(??_calculateInterpolatedPixels+0+0),c
  9843  003690  3611               	rlcf	(??_calculateInterpolatedPixels+0+1),c
  9844  003692  3612               	bcf	status,0
  9845  003694  90D8               	rlcf	(??_calculateInterpolatedPixels+0+0),c
  9846  003696  3611               	rlcf	(??_calculateInterpolatedPixels+0+1),c
  9847  003698  3612               	movf	((c:calculateInterpolatedPixels@y)),c,w
  9848  00369A  501F               	addwf	(??_calculateInterpolatedPixels+0+0),c
  9849  00369C  2611               	movf	((c:calculateInterpolatedPixels@y+1)),c,w
  9850  00369E  5020               	addwfc	(??_calculateInterpolatedPixels+0+1),c
  9851  0036A0  2212               	bcf	status,0
  9852  0036A2  90D8               	rlcf	(??_calculateInterpolatedPixels+0+0),c,f
  9853  0036A4  3611               	rlcf	(??_calculateInterpolatedPixels+0+1),c,f
  9854  0036A6  3612               	movlw	012h
  9855  0036A8  0E12               	addwf	(??_calculateInterpolatedPixels+0+0),c
  9856  0036AA  2611               	movlw	0
  9857  0036AC  0E00               	addwfc	(??_calculateInterpolatedPixels+0+1),c
  9858  0036AE  2212               	movf	(??_calculateInterpolatedPixels+0+0),c,w
  9859  0036B0  5011               	addwf	((c:calculateInterpolatedPixels@main_buffer)),c,w
  9860  0036B2  2409               	movwf	c:fsr2l
  9861  0036B4  6ED9               	movf	(??_calculateInterpolatedPixels+0+1),c,w
  9862  0036B6  5012               	addwfc	((c:calculateInterpolatedPixels@main_buffer+1)),c,w
  9863  0036B8  200A               	movwf	1+c:fsr2l
  9864  0036BA  6EDA               	movff	postinc2,??_calculateInterpolatedPixels+2+0
  9865  0036BC  CFDE F013          	movff	postdec2,??_calculateInterpolatedPixels+2+0+1
  9866  0036C0  CFDD F014          	movff	(c:calculateInterpolatedPixels@x),??_calculateInterpolatedPixels+4+0
  9867  0036C4  C01D  F015         	movff	(c:calculateInterpolatedPixels@x+1),??_calculateInterpolatedPixels+4+0+1
  9868  0036C8  C01E  F016         	bcf	status,0
  9869  0036CC  90D8               	rlcf	(??_calculateInterpolatedPixels+4+0),c
  9870  0036CE  3615               	rlcf	(??_calculateInterpolatedPixels+4+1),c
  9871  0036D0  3616               	bcf	status,0
  9872  0036D2  90D8               	rlcf	(??_calculateInterpolatedPixels+4+0),c
  9873  0036D4  3615               	rlcf	(??_calculateInterpolatedPixels+4+1),c
  9874  0036D6  3616               	bcf	status,0
  9875  0036D8  90D8               	rlcf	(??_calculateInterpolatedPixels+4+0),c
  9876  0036DA  3615               	rlcf	(??_calculateInterpolatedPixels+4+1),c
  9877  0036DC  3616               	movf	((c:calculateInterpolatedPixels@y)),c,w
  9878  0036DE  501F               	addwf	(??_calculateInterpolatedPixels+4+0),c
  9879  0036E0  2615               	movf	((c:calculateInterpolatedPixels@y+1)),c,w
  9880  0036E2  5020               	addwfc	(??_calculateInterpolatedPixels+4+1),c
  9881  0036E4  2216               	bcf	status,0
  9882  0036E6  90D8               	rlcf	(??_calculateInterpolatedPixels+4+0),c,f
  9883  0036E8  3615               	rlcf	(??_calculateInterpolatedPixels+4+1),c,f
  9884  0036EA  3616               	movf	(??_calculateInterpolatedPixels+4+0),c,w
  9885  0036EC  5015               	addwf	((c:calculateInterpolatedPixels@main_buffer)),c,w
  9886  0036EE  2409               	movwf	c:fsr2l
  9887  0036F0  6ED9               	movf	(??_calculateInterpolatedPixels+4+1),c,w
  9888  0036F2  5016               	addwfc	((c:calculateInterpolatedPixels@main_buffer+1)),c,w
  9889  0036F4  200A               	movwf	1+c:fsr2l
  9890  0036F6  6EDA               	movff	postinc2,??_calculateInterpolatedPixels+6+0
  9891  0036F8  CFDE F017          	movff	postdec2,??_calculateInterpolatedPixels+6+0+1
  9892  0036FC  CFDD F018          	movf	(??_calculateInterpolatedPixels+2+0),c,w
  9893  003700  5013               	addwf	(??_calculateInterpolatedPixels+6+0),c,w
  9894  003702  2417               	movwf	((c:___awdiv@dividend)),c
  9895  003704  6E01               	movf	(??_calculateInterpolatedPixels+2+1),c,w
  9896  003706  5014               	addwfc	(??_calculateInterpolatedPixels+6+1),c,w
  9897  003708  2018               	movwf	1+((c:___awdiv@dividend)),c
  9898  00370A  6E02               	movlw	high(02h)
  9899  00370C  0E00               	movwf	((c:___awdiv@divisor+1)),c
  9900  00370E  6E04               	movlw	low(02h)
  9901  003710  0E02               	movwf	((c:___awdiv@divisor)),c
  9902  003712  6E03               	call	___awdiv	;wreg free
  9903  003714  EC45  F013         	movff	(c:calculateInterpolatedPixels@x),??_calculateInterpolatedPixels+8+0
  9904  003718  C01D  F019         	movff	(c:calculateInterpolatedPixels@x+1),??_calculateInterpolatedPixels+8+0+1
  9905  00371C  C01E  F01A         	bcf	status,0
  9906  003720  90D8               	rlcf	(??_calculateInterpolatedPixels+8+0),c
  9907  003722  3619               	rlcf	(??_calculateInterpolatedPixels+8+1),c
  9908  003724  361A               	bcf	status,0
  9909  003726  90D8               	rlcf	(??_calculateInterpolatedPixels+8+0),c
  9910  003728  3619               	rlcf	(??_calculateInterpolatedPixels+8+1),c
  9911  00372A  361A               	bcf	status,0
  9912  00372C  90D8               	rlcf	(??_calculateInterpolatedPixels+8+0),c
  9913  00372E  3619               	rlcf	(??_calculateInterpolatedPixels+8+1),c
  9914  003730  361A               	movf	((c:calculateInterpolatedPixels@y)),c,w
  9915  003732  501F               	addwf	(??_calculateInterpolatedPixels+8+0),c
  9916  003734  2619               	movf	((c:calculateInterpolatedPixels@y+1)),c,w
  9917  003736  5020               	addwfc	(??_calculateInterpolatedPixels+8+1),c
  9918  003738  221A               	bcf	status,0
  9919  00373A  90D8               	rlcf	(??_calculateInterpolatedPixels+8+0),c,f
  9920  00373C  3619               	rlcf	(??_calculateInterpolatedPixels+8+1),c,f
  9921  00373E  361A               	movf	(??_calculateInterpolatedPixels+8+0),c,w
  9922  003740  5019               	addwf	((c:calculateInterpolatedPixels@xy_interpolated_buffer)),c,w
  9923  003742  240F               	movwf	c:fsr2l
  9924  003744  6ED9               	movf	(??_calculateInterpolatedPixels+8+1),c,w
  9925  003746  501A               	addwfc	((c:calculateInterpolatedPixels@xy_interpolated_buffer+1)),c,w
  9926  003748  2010               	movwf	1+c:fsr2l
  9927  00374A  6EDA               	movff	0+?___awdiv,postinc2
  9928  00374C  C001  FFDE         	movff	1+?___awdiv,postdec2
  9929  003750  C002  FFDD         
  9930                           	goto	l2201
  9931  003754  EFAC  F01B         	line	364
  9932                           	
  9933                           l153:
  9934  003758                     	line	355
  9935                           	
  9936                           l2201:
  9937  003758                     	infsnz	((c:calculateInterpolatedPixels@y)),c
  9938  003758  4A1F               	incf	((c:calculateInterpolatedPixels@y+1)),c
  9939  00375A  2A20               	
  9940                           l2203:
  9941  00375C                     	btfsc	((c:calculateInterpolatedPixels@y+1)),c,7
  9942  00375C  BE20               	goto	u1581
  9943  00375E  EFBA  F01B         	movf	((c:calculateInterpolatedPixels@y+1)),c,w
  9944  003762  5020               	bnz	u1580
  9945  003764  E109               	movlw	8
  9946  003766  0E08               	subwf	 ((c:calculateInterpolatedPixels@y)),c,w
  9947  003768  5C1F               	btfss	status,0
  9948  00376A  A0D8               	goto	u1581
  9949  00376C  EFBA  F01B         	goto	u1580
  9950  003770  EFBC  F01B         
  9951                           u1581:
  9952  003774                     	goto	l2187
  9953  003774  EF2A  F01A         u1580:
  9954  003778                     	goto	l2205
  9955  003778  EFBE  F01B         	
  9956                           l150:
  9957  00377C                     	line	354
  9958                           	
  9959                           l2205:
  9960  00377C                     	infsnz	((c:calculateInterpolatedPixels@x)),c
  9961  00377C  4A1D               	incf	((c:calculateInterpolatedPixels@x+1)),c
  9962  00377E  2A1E               	
  9963                           l2207:
  9964  003780                     	btfsc	((c:calculateInterpolatedPixels@x+1)),c,7
  9965  003780  BE1E               	goto	u1591
  9966  003782  EFCC  F01B         	movf	((c:calculateInterpolatedPixels@x+1)),c,w
  9967  003786  501E               	bnz	u1590
  9968  003788  E109               	movlw	8
  9969  00378A  0E08               	subwf	 ((c:calculateInterpolatedPixels@x)),c,w
  9970  00378C  5C1D               	btfss	status,0
  9971  00378E  A0D8               	goto	u1591
  9972  003790  EFCC  F01B         	goto	u1590
  9973  003794  EFCE  F01B         
  9974                           u1591:
  9975  003798                     	goto	l2181
  9976  003798  EF14  F01A         u1590:
  9977  00379C                     	goto	l154
  9978  00379C  EFD0  F01B         	
  9979                           l148:
  9980  0037A0                     	line	367
  9981                           	
  9982                           l154:
  9983  0037A0                     	return	;funcret
  9984  0037A0  0012               	opt stack 0
  9985                           GLOBAL	__end_of_calculateInterpolatedPixels
  9986                           	__end_of_calculateInterpolatedPixels:
  9987  0037A2                     	signat	_calculateInterpolatedPixels,16505
  9988                           	global	___awdiv
  9989                           
  9990 ;; *************** function ___awdiv *****************
  9991 ;; Defined at:
  9992 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  9993 ;; Parameters:    Size  Location     Type
  9994 ;;  dividend        2    0[COMRAM] int 
  9995 ;;  divisor         2    2[COMRAM] int 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  quotient        2    6[COMRAM] int 
  9998 ;;  sign            1    5[COMRAM] unsigned char 
  9999 ;;  counter         1    4[COMRAM] unsigned char 
 10000 ;; Return value:  Size  Location     Type
 10001 ;;                  2    0[COMRAM] int 
 10002 ;; Registers used:
 10003 ;;		wreg, status,2, status,0
 10004 ;; Tracked objects:
 10005 ;;		On entry : 0/0
 10006 ;;		On exit  : 0/0
 10007 ;;		Unchanged: 0/0
 10008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
 10009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10010 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10012 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10013 ;;Total ram usage:        8 bytes
 10014 ;; Hardware stack levels used:    1
 10015 ;; This function calls:
 10016 ;;		Nothing
 10017 ;; This function is called by:
 10018 ;;		_convertDataToString
 10019 ;;		_drawOverlay
 10020 ;;		_calculateInterpolatedPixels
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           psect	text31,class=CODE,space=0,reloc=2,group=1
 10024                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 10025                           	line	7
 10026                           global __ptext31
 10027                           __ptext31:
 10028  00268A                     psect	text31
 10029                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 10030                           	line	7
 10031                           	global	__size_of___awdiv
 10032                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 10033  0000                     	
 10034                           ___awdiv:
 10035  00268A                     ;incstack = 0
 10036                           	opt	stack 27
 10037                           	line	13
 10038                           	
 10039                           l1807:
 10040  00268A                     	movlw	low(0)
 10041  00268A  0E00               	movwf	((c:___awdiv@sign)),c
 10042  00268C  6E06               	line	14
 10043                           	
 10044                           l1809:
 10045  00268E                     	btfsc	((c:___awdiv@divisor+1)),c,7
 10046  00268E  BE04               	goto	u1120
 10047  002690  EF4E  F013         	goto	u1121
 10048  002694  EF4C  F013         
 10049                           u1121:
 10050  002698                     	goto	l1815
 10051  002698  EF56  F013         u1120:
 10052  00269C                     	line	15
 10053                           	
 10054                           l1811:
 10055  00269C                     	negf	((c:___awdiv@divisor)),c
 10056  00269C  6C03               	comf	((c:___awdiv@divisor+1)),c
 10057  00269E  1E04               	btfsc	status,0
 10058  0026A0  B0D8               	incf	((c:___awdiv@divisor+1)),c
 10059  0026A2  2A04               	line	16
 10060                           	
 10061                           l1813:
 10062  0026A4                     	movlw	low(01h)
 10063  0026A4  0E01               	movwf	((c:___awdiv@sign)),c
 10064  0026A6  6E06               	goto	l1815
 10065  0026A8  EF56  F013         	line	17
 10066                           	
 10067                           l525:
 10068  0026AC                     	line	18
 10069                           	
 10070                           l1815:
 10071  0026AC                     	btfsc	((c:___awdiv@dividend+1)),c,7
 10072  0026AC  BE02               	goto	u1130
 10073  0026AE  EF5D  F013         	goto	u1131
 10074  0026B2  EF5B  F013         
 10075                           u1131:
 10076  0026B6                     	goto	l1821
 10077  0026B6  EF65  F013         u1130:
 10078  0026BA                     	line	19
 10079                           	
 10080                           l1817:
 10081  0026BA                     	negf	((c:___awdiv@dividend)),c
 10082  0026BA  6C01               	comf	((c:___awdiv@dividend+1)),c
 10083  0026BC  1E02               	btfsc	status,0
 10084  0026BE  B0D8               	incf	((c:___awdiv@dividend+1)),c
 10085  0026C0  2A02               	line	20
 10086                           	
 10087                           l1819:
 10088  0026C2                     	movlw	(01h)&0ffh
 10089  0026C2  0E01               	xorwf	((c:___awdiv@sign)),c
 10090  0026C4  1A06               	goto	l1821
 10091  0026C6  EF65  F013         	line	21
 10092                           	
 10093                           l526:
 10094  0026CA                     	line	22
 10095                           	
 10096                           l1821:
 10097  0026CA                     	movlw	high(0)
 10098  0026CA  0E00               	movwf	((c:___awdiv@quotient+1)),c
 10099  0026CC  6E08               	movlw	low(0)
 10100  0026CE  0E00               	movwf	((c:___awdiv@quotient)),c
 10101  0026D0  6E07               	line	23
 10102                           	
 10103                           l1823:
 10104  0026D2                     	movf	((c:___awdiv@divisor)),c,w
 10105  0026D2  5003               iorwf	((c:___awdiv@divisor+1)),c,w
 10106  0026D4  1004               	btfsc	status,2
 10107  0026D6  B4D8               	goto	u1141
 10108  0026D8  EF70  F013         	goto	u1140
 10109  0026DC  EF72  F013         
 10110                           u1141:
 10111  0026E0                     	goto	l1843
 10112  0026E0  EFA6  F013         u1140:
 10113  0026E4                     	line	24
 10114                           	
 10115                           l1825:
 10116  0026E4                     	movlw	low(01h)
 10117  0026E4  0E01               	movwf	((c:___awdiv@counter)),c
 10118  0026E6  6E05               	line	25
 10119                           	goto	l1829
 10120  0026E8  EF7C  F013         	
 10121                           l529:
 10122  0026EC                     	line	26
 10123                           	
 10124                           l1827:
 10125  0026EC                     	bcf	status,0
 10126  0026EC  90D8               	rlcf	((c:___awdiv@divisor)),c
 10127  0026EE  3603               	rlcf	((c:___awdiv@divisor+1)),c
 10128  0026F0  3604               	line	27
 10129                           	incf	((c:___awdiv@counter)),c
 10130  0026F2  2A05               	goto	l1829
 10131  0026F4  EF7C  F013         	line	28
 10132                           	
 10133                           l528:
 10134  0026F8                     	line	25
 10135                           	
 10136                           l1829:
 10137  0026F8                     	
 10138                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
 10139  0026F8  AE04               	goto	u1151
 10140  0026FA  EF81  F013         	goto	u1150
 10141  0026FE  EF83  F013         u1151:
 10142  002702                     	goto	l1827
 10143  002702  EF76  F013         u1150:
 10144  002706                     	goto	l1831
 10145  002706  EF87  F013         	
 10146                           l530:
 10147  00270A                     	goto	l1831
 10148  00270A  EF87  F013         	line	29
 10149                           	
 10150                           l531:
 10151  00270E                     	line	30
 10152                           	
 10153                           l1831:
 10154  00270E                     	bcf	status,0
 10155  00270E  90D8               	rlcf	((c:___awdiv@quotient)),c
 10156  002710  3607               	rlcf	((c:___awdiv@quotient+1)),c
 10157  002712  3608               	line	31
 10158                           	
 10159                           l1833:
 10160  002714                     		movf	((c:___awdiv@divisor)),c,w
 10161  002714  5003               	subwf	((c:___awdiv@dividend)),c,w
 10162  002716  5C01               	movf	((c:___awdiv@divisor+1)),c,w
 10163  002718  5004               	subwfb	((c:___awdiv@dividend+1)),c,w
 10164  00271A  5802               	btfss	status,0
 10165  00271C  A0D8               	goto	u1161
 10166  00271E  EF93  F013         	goto	u1160
 10167  002722  EF95  F013         
 10168                           u1161:
 10169  002726                     	goto	l1839
 10170  002726  EF9C  F013         u1160:
 10171  00272A                     	line	32
 10172                           	
 10173                           l1835:
 10174  00272A                     	movf	((c:___awdiv@divisor)),c,w
 10175  00272A  5003               	subwf	((c:___awdiv@dividend)),c
 10176  00272C  5E01               	movf	((c:___awdiv@divisor+1)),c,w
 10177  00272E  5004               	subwfb	((c:___awdiv@dividend+1)),c
 10178  002730  5A02               
 10179                           	line	33
 10180                           	
 10181                           l1837:
 10182  002732                     	bsf	(0+(0/8)+(c:___awdiv@quotient)),c,(0)&7
 10183  002732  8007               	goto	l1839
 10184  002734  EF9C  F013         	line	34
 10185                           	
 10186                           l532:
 10187  002738                     	line	35
 10188                           	
 10189                           l1839:
 10190  002738                     	bcf	status,0
 10191  002738  90D8               	rrcf	((c:___awdiv@divisor+1)),c
 10192  00273A  3204               	rrcf	((c:___awdiv@divisor)),c
 10193  00273C  3203               	line	36
 10194                           	
 10195                           l1841:
 10196  00273E                     	decfsz	((c:___awdiv@counter)),c
 10197  00273E  2E05               	
 10198                           	goto	l1831
 10199  002740  EF87  F013         	goto	l1843
 10200  002744  EFA6  F013         	
 10201                           l533:
 10202  002748                     	goto	l1843
 10203  002748  EFA6  F013         	line	37
 10204                           	
 10205                           l527:
 10206  00274C                     	line	38
 10207                           	
 10208                           l1843:
 10209  00274C                     	movf	((c:___awdiv@sign)),c,w
 10210  00274C  5006               	btfsc	status,2
 10211  00274E  B4D8               	goto	u1171
 10212  002750  EFAC  F013         	goto	u1170
 10213  002754  EFAE  F013         u1171:
 10214  002758                     	goto	l1847
 10215  002758  EFB4  F013         u1170:
 10216  00275C                     	line	39
 10217                           	
 10218                           l1845:
 10219  00275C                     	negf	((c:___awdiv@quotient)),c
 10220  00275C  6C07               	comf	((c:___awdiv@quotient+1)),c
 10221  00275E  1E08               	btfsc	status,0
 10222  002760  B0D8               	incf	((c:___awdiv@quotient+1)),c
 10223  002762  2A08               	goto	l1847
 10224  002764  EFB4  F013         	
 10225                           l534:
 10226  002768                     	line	40
 10227                           	
 10228                           l1847:
 10229  002768                     	movff	(c:___awdiv@quotient),(c:?___awdiv)
 10230  002768  C007  F001         	movff	(c:___awdiv@quotient+1),(c:?___awdiv+1)
 10231  00276C  C008  F002         	goto	l535
 10232  002770  EFBA  F013         	
 10233                           l1849:
 10234  002774                     	line	41
 10235                           	
 10236                           l535:
 10237  002774                     	return	;funcret
 10238  002774  0012               	opt stack 0
 10239                           GLOBAL	__end_of___awdiv
 10240                           	__end_of___awdiv:
 10241  002776                     	signat	___awdiv,8314
 10242                           	global	_AMGInit
 10243                           
 10244 ;; *************** function _AMGInit *****************
 10245 ;; Defined at:
 10246 ;;		line 85 in file "AMG88xx.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;		None
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;		None
 10251 ;; Return value:  Size  Location     Type
 10252 ;;                  1    wreg      void 
 10253 ;; Registers used:
 10254 ;;		wreg, status,2, status,0, cstack
 10255 ;; Tracked objects:
 10256 ;;		On entry : 0/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
 10260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10264 ;;Total ram usage:        0 bytes
 10265 ;; Hardware stack levels used:    1
 10266 ;; Hardware stack levels required when called:    2
 10267 ;; This function calls:
 10268 ;;		_i2c_send_data
 10269 ;; This function is called by:
 10270 ;;		_main
 10271 ;; This function uses a non-reentrant model
 10272 ;;
 10273                           psect	text32,class=CODE,space=0,reloc=2,group=0
 10274                           	file	"AMG88xx.c"
 10275                           	line	85
 10276                           global __ptext32
 10277                           __ptext32:
 10278  0020B6                     psect	text32
 10279                           	file	"AMG88xx.c"
 10280                           	line	85
 10281                           	global	__size_of_AMGInit
 10282                           	__size_of_AMGInit	equ	__end_of_AMGInit-_AMGInit
 10283  0000                     	
 10284                           _AMGInit:
 10285  0020B6                     ;incstack = 0
 10286                           	opt	stack 28
 10287                           	line	87
 10288                           	
 10289                           l2215:
 10290  0020B6                     ;AMG88xx.c: 87: i2c_send_data(0xD2, 0x00, 0x00);
 10291                           	movlw	low(0)
 10292  0020B6  0E00               	movwf	((c:i2c_send_data@reg)),c
 10293  0020B8  6E02               	movlw	low(0)
 10294  0020BA  0E00               	movwf	((c:i2c_send_data@data)),c
 10295  0020BC  6E03               	movlw	(0D2h)&0ffh
 10296  0020BE  0ED2               	
 10297                           	call	_i2c_send_data
 10298  0020C0  EC1E  F010         	line	89
 10299                           ;AMG88xx.c: 89: i2c_send_data(0xD2, 0x01, 0x3F);
 10300                           	movlw	low(01h)
 10301  0020C4  0E01               	movwf	((c:i2c_send_data@reg)),c
 10302  0020C6  6E02               	movlw	low(03Fh)
 10303  0020C8  0E3F               	movwf	((c:i2c_send_data@data)),c
 10304  0020CA  6E03               	movlw	(0D2h)&0ffh
 10305  0020CC  0ED2               	
 10306                           	call	_i2c_send_data
 10307  0020CE  EC1E  F010         	line	91
 10308                           ;AMG88xx.c: 91: i2c_send_data(0xD2, 0x02, 0x00);
 10309                           	movlw	low(02h)
 10310  0020D2  0E02               	movwf	((c:i2c_send_data@reg)),c
 10311  0020D4  6E02               	movlw	low(0)
 10312  0020D6  0E00               	movwf	((c:i2c_send_data@data)),c
 10313  0020D8  6E03               	movlw	(0D2h)&0ffh
 10314  0020DA  0ED2               	
 10315                           	call	_i2c_send_data
 10316  0020DC  EC1E  F010         	line	94
 10317                           	
 10318                           l301:
 10319  0020E0                     	return	;funcret
 10320  0020E0  0012               	opt stack 0
 10321                           GLOBAL	__end_of_AMGInit
 10322                           	__end_of_AMGInit:
 10323  0020E2                     	signat	_AMGInit,89
 10324                           	global	_i2c_send_data
 10325                           
 10326 ;; *************** function _i2c_send_data *****************
 10327 ;; Defined at:
 10328 ;;		line 22 in file "AMG88xx.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;  address         1    wreg     unsigned char 
 10331 ;;  reg             1    1[COMRAM] unsigned char 
 10332 ;;  data            1    2[COMRAM] unsigned char 
 10333 ;; Auto vars:     Size  Location     Type
 10334 ;;  address         1    3[COMRAM] unsigned char 
 10335 ;; Return value:  Size  Location     Type
 10336 ;;                  1    wreg      void 
 10337 ;; Registers used:
 10338 ;;		wreg, status,2, status,0, cstack
 10339 ;; Tracked objects:
 10340 ;;		On entry : 0/0
 10341 ;;		On exit  : 0/0
 10342 ;;		Unchanged: 0/0
 10343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
 10344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10347 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10348 ;;Total ram usage:        3 bytes
 10349 ;; Hardware stack levels used:    1
 10350 ;; Hardware stack levels required when called:    1
 10351 ;; This function calls:
 10352 ;;		_i2c_master_wait
 10353 ;; This function is called by:
 10354 ;;		_AMGInit
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           psect	text33,class=CODE,space=0,reloc=2,group=0
 10358                           	line	22
 10359                           global __ptext33
 10360                           __ptext33:
 10361  00203C                     psect	text33
 10362                           	file	"AMG88xx.c"
 10363                           	line	22
 10364                           	global	__size_of_i2c_send_data
 10365                           	__size_of_i2c_send_data	equ	__end_of_i2c_send_data-_i2c_send_data
 10366  0000                     	
 10367                           _i2c_send_data:
 10368  00203C                     ;incstack = 0
 10369                           	opt	stack 28
 10370                           ;i2c_send_data@address stored from wreg
 10371                           	movwf	((c:i2c_send_data@address)),c
 10372  00203C  6E04               	line	23
 10373                           	
 10374                           l2063:
 10375  00203E                     ;AMG88xx.c: 23: SSP1CON2 = 0b00000001;
 10376                           	movlw	low(01h)
 10377  00203E  0E01               	movwf	((c:4037)),c	;volatile
 10378  002040  6EC5               	line	24
 10379                           	
 10380                           l2065:
 10381  002042                     ;AMG88xx.c: 24: i2c_master_wait();
 10382                           	call	_i2c_master_wait	;wreg free
 10383  002042  EC71  F010         	line	25
 10384                           	
 10385                           l2067:
 10386  002046                     ;AMG88xx.c: 25: SSP1BUF = address;
 10387                           	movff	(c:i2c_send_data@address),(c:4041)	;volatile
 10388  002046  C004  FFC9         	line	26
 10389                           	
 10390                           l2069:
 10391  00204A                     ;AMG88xx.c: 26: i2c_master_wait();
 10392                           	call	_i2c_master_wait	;wreg free
 10393  00204A  EC71  F010         	line	27
 10394                           	
 10395                           l2071:
 10396  00204E                     ;AMG88xx.c: 27: SSP1BUF = reg;
 10397                           	movff	(c:i2c_send_data@reg),(c:4041)	;volatile
 10398  00204E  C002  FFC9         	line	28
 10399                           	
 10400                           l2073:
 10401  002052                     ;AMG88xx.c: 28: i2c_master_wait();
 10402                           	call	_i2c_master_wait	;wreg free
 10403  002052  EC71  F010         	line	29
 10404                           	
 10405                           l2075:
 10406  002056                     ;AMG88xx.c: 29: SSP1BUF = data;
 10407                           	movff	(c:i2c_send_data@data),(c:4041)	;volatile
 10408  002056  C003  FFC9         	line	30
 10409                           	
 10410                           l2077:
 10411  00205A                     ;AMG88xx.c: 30: i2c_master_wait();
 10412                           	call	_i2c_master_wait	;wreg free
 10413  00205A  EC71  F010         	line	31
 10414                           	
 10415                           l2079:
 10416  00205E                     ;AMG88xx.c: 31: SSP1CON2 = 0b00000100;
 10417                           	movlw	low(04h)
 10418  00205E  0E04               	movwf	((c:4037)),c	;volatile
 10419  002060  6EC5               	line	32
 10420                           	
 10421                           l280:
 10422  002062                     	return	;funcret
 10423  002062  0012               	opt stack 0
 10424                           GLOBAL	__end_of_i2c_send_data
 10425                           	__end_of_i2c_send_data:
 10426  002064                     	signat	_i2c_send_data,12409
 10427                           	global	_i2c_master_wait
 10428                           
 10429 ;; *************** function _i2c_master_wait *****************
 10430 ;; Defined at:
 10431 ;;		line 78 in file "AMG88xx.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;		None
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;		None
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1    wreg      void 
 10438 ;; Registers used:
 10439 ;;		wreg, status,2, status,0
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/0
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14
 10445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0
 10449 ;;Total ram usage:        1 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; This function calls:
 10452 ;;		Nothing
 10453 ;; This function is called by:
 10454 ;;		_i2c_send_data
 10455 ;;		_i2c_send_request
 10456 ;;		_i2c_receive_data
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           psect	text34,class=CODE,space=0,reloc=2,group=0
 10460                           	line	78
 10461                           global __ptext34
 10462                           __ptext34:
 10463  0020E2                     psect	text34
 10464                           	file	"AMG88xx.c"
 10465                           	line	78
 10466                           	global	__size_of_i2c_master_wait
 10467                           	__size_of_i2c_master_wait	equ	__end_of_i2c_master_wait-_i2c_master_wait
 10468  0000                     	
 10469                           _i2c_master_wait:
 10470  0020E2                     ;incstack = 0
 10471                           	opt	stack 27
 10472                           	line	79
 10473                           	
 10474                           l1757:
 10475  0020E2                     ;AMG88xx.c: 79: while((SSP1STAT & 0b00000100) || (SSP1CON2 & 0b00011111));
 10476                           	goto	l295
 10477  0020E2  EF73  F010         	
 10478                           l296:
 10479  0020E6                     	
 10480                           l295:
 10481  0020E6                     	
 10482                           	btfsc	((c:4039)),c,(2)&7	;volatile
 10483  0020E6  B4C7               	goto	u1001
 10484  0020E8  EF78  F010         	goto	u1000
 10485  0020EC  EF7A  F010         u1001:
 10486  0020F0                     	goto	l295
 10487  0020F0  EF73  F010         u1000:
 10488  0020F4                     	
 10489                           l1759:
 10490  0020F4                     	movff	(c:4037),??_i2c_master_wait+0+0	;volatile
 10491  0020F4  CFC5 F001          	movlw	01Fh
 10492  0020F8  0E1F               	andwf	(??_i2c_master_wait+0+0),c
 10493  0020FA  1601               	btfss	status,2
 10494  0020FC  A4D8               	goto	u1011
 10495  0020FE  EF83  F010         	goto	u1010
 10496  002102  EF85  F010         u1011:
 10497  002106                     	goto	l295
 10498  002106  EF73  F010         u1010:
 10499  00210A                     	goto	l298
 10500  00210A  EF87  F010         	
 10501                           l297:
 10502  00210E                     	line	80
 10503                           	
 10504                           l298:
 10505  00210E                     	return	;funcret
 10506  00210E  0012               	opt stack 0
 10507                           GLOBAL	__end_of_i2c_master_wait
 10508                           	__end_of_i2c_master_wait:
 10509  002110                     	signat	_i2c_master_wait,89
 10510                           psect	mediumconst
 10511                           	db 0	; dummy byte at the end
 10512  003FF6  00                 	global	__mediumconst
 10513                           	GLOBAL	__activetblptr
 10514                           __activetblptr	EQU	2
 10515  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
 10516                           	PSECT	rparam,class=COMRAM,space=1,noexec
 10517                           	GLOBAL	__Lrparam
 10518                           	FNCONF	rparam,??,?
 10519                           	GLOBAL	___rparam_used
 10520                           	___rparam_used EQU 1
 10521  0000                     	GLOBAL	___param_bank
 10522                           	___param_bank EQU 0
 10523  0000                     GLOBAL	__Lparam, __Hparam
 10524                           GLOBAL	__Lrparam, __Hrparam
 10525                           __Lparam	EQU	__Lrparam
 10526  0000                     __Hparam	EQU	__Hrparam
 10527  0000                     	end


Data Sizes:
    Strings     0
    Constant    499
    Data        0
    BSS         524
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     26      38
    BANK1           256      0     256
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    draw_string@str	PTR unsigned char  size(2) Largest target is 6
		 -> drawOverlay@temperature_buffer(COMRAM[6]), 

    calculateInterpolatedPixels@xy_interpolated_buffer	PTR int  size(2) Largest target is 128
		 -> xy_interpolated_pixels(BANK2[128]), 

    calculateInterpolatedPixels@x_interpolated_buffer	PTR int  size(2) Largest target is 128
		 -> x_interpolated_pixels(BANK2[128]), 

    calculateInterpolatedPixels@main_buffer	PTR int  size(2) Largest target is 128
		 -> ir_buffer(BANK1[128]), 

    calculateInterpolatedPixels@y_interpolated_buffer	PTR int  size(2) Largest target is 128
		 -> y_interpolated_pixels(BANK1[128]), 

    drawBuffersToDisplay@diagonal_buffer	PTR int  size(2) Largest target is 128
		 -> xy_interpolated_pixels(BANK2[128]), 

    drawBuffersToDisplay@vertical_buffer	PTR int  size(2) Largest target is 128
		 -> x_interpolated_pixels(BANK2[128]), 

    drawBuffersToDisplay@horizontal_buffer	PTR int  size(2) Largest target is 128
		 -> y_interpolated_pixels(BANK1[128]), 

    drawBuffersToDisplay@main_buffer	PTR int  size(2) Largest target is 128
		 -> ir_buffer(BANK1[128]), 

    getIRData@buffer	PTR int  size(2) Largest target is 128
		 -> ir_buffer(BANK1[128]), 

    convertDataToString@buff	PTR unsigned char  size(2) Largest target is 6
		 -> drawOverlay@temperature_buffer(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_drawBuffersToDisplay
    _lcd_init->_delay_ms
    _lcd_init_command_list->_delay_ms
    _delay_ms->___lmul
    _getIRData->_i2c_receive_data
    _i2c_receive_data->_i2c_send_request
    _i2c_send_request->_i2c_master_wait
    _drawBuffersToDisplay->_drawOverlay
    _drawOverlay->_draw_string
    _draw_v_line->_draw_pixel
    _draw_string->_draw_char
    _draw_char->_fill_rectangle
    _fill_rectangle->_dataToColour
    _draw_h_line->_draw_pixel
    _draw_pixel->_set_draw_window
    _set_draw_window->_lcd_write_command
    _set_draw_window->_lcd_write_data
    _lcd_write_data->_spi_write
    _lcd_write_command->_spi_write
    _convertDataToString->___awdiv
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft
    _dataToColour->_get_colour
    _calculateInterpolatedPixels->___awdiv
    _AMGInit->_i2c_send_data
    _i2c_send_data->_i2c_master_wait

Critical Paths under _main in BANK0

    _main->_drawBuffersToDisplay

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   55316
                            _AMGInit
        _calculateInterpolatedPixels
                           _delay_ms
               _drawBuffersToDisplay
                     _fill_rectangle
                          _getIRData
                            _initADC
                            _initI2C
                            _initSPI
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    2314
                           _delay_ms
              _lcd_init_command_list
 ---------------------------------------------------------------------------------
 (2) _lcd_init_command_list                                0     0      0    1291
                           _delay_ms
                  _lcd_write_command
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             8     4      4    1023
                                             12 COMRAM     8     4      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _initSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getIRData                                           16    14      2     753
                                              8 COMRAM    16    14      2
                   _i2c_receive_data
 ---------------------------------------------------------------------------------
 (2) _i2c_receive_data                                     5     4      1     361
                                              3 COMRAM     5     4      1
                    _i2c_master_wait
                   _i2c_send_request
 ---------------------------------------------------------------------------------
 (3) _i2c_send_request                                     2     1      1     120
                                              1 COMRAM     2     1      1
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (1) _drawBuffersToDisplay                                30    22      8   43560
                                             90 COMRAM     4     4      0
                                              0 BANK0     26    18      8
                             ___wmul
                       _dataToColour
                        _drawOverlay
                     _fill_rectangle
 ---------------------------------------------------------------------------------
 (2) _drawOverlay                                         24    18      6   33663
                                             66 COMRAM    24    18      6
                            ___awdiv
                            ___ftdiv
                           ___lwtoft
                             ___wmul
                _convertDataToString
                        _draw_h_line
                        _draw_string
                        _draw_v_line
 ---------------------------------------------------------------------------------
 (3) _draw_v_line                                         11     6      5    2276
                                             14 COMRAM    11     6      5
                            ___awdiv (ARG)
                         _draw_pixel
 ---------------------------------------------------------------------------------
 (3) _draw_string                                         13     7      6   13875
                                             53 COMRAM    13     7      6
                             ___wmul
                          _draw_char
 ---------------------------------------------------------------------------------
 (4) _draw_char                                           13     8      5    9952
                                             40 COMRAM    13     8      5
                             ___wmul
                         _draw_pixel
                     _fill_rectangle
 ---------------------------------------------------------------------------------
 (1) _fill_rectangle                                      18     8     10    3942
                                             22 COMRAM    18     8     10
                             ___wmul (ARG)
                       _dataToColour (ARG)
                    _set_draw_window
                          _spi_write
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3351
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _draw_h_line                                         11     6      5    2276
                                             14 COMRAM    11     6      5
                            ___awdiv (ARG)
                         _draw_pixel
 ---------------------------------------------------------------------------------
 (4) _draw_pixel                                           4     1      3    1534
                                             10 COMRAM     4     1      3
                     _lcd_write_data
                    _set_draw_window
 ---------------------------------------------------------------------------------
 (2) _set_draw_window                                      4     1      3     812
                                              6 COMRAM     4     1      3
                  _lcd_write_command
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (3) _lcd_write_data                                       1     1      0     134
                                              5 COMRAM     1     1      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write_command                                    1     1      0     134
                                              5 COMRAM     1     1      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (4) _spi_write                                            5     5      0     112
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _convertDataToString                                 10     6      4    2788
                                              8 COMRAM    10     6      4
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2864
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3324
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2766
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _dataToColour                                        11     7      4    1189
                                             11 COMRAM    11     7      4
                         _get_colour
 ---------------------------------------------------------------------------------
 (3) _get_colour                                          11     9      2     241
                                              0 COMRAM    11     9      2
 ---------------------------------------------------------------------------------
 (1) _calculateInterpolatedPixels                         24    16      8    3202
                                              8 COMRAM    24    16      8
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    2124
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _AMGInit                                              0     0      0     522
                      _i2c_send_data
 ---------------------------------------------------------------------------------
 (2) _i2c_send_data                                        3     1      2     522
                                              1 COMRAM     3     1      2
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_master_wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AMGInit
     _i2c_send_data
       _i2c_master_wait
   _calculateInterpolatedPixels
     ___awdiv
   _delay_ms
     ___lmul
   _drawBuffersToDisplay
     ___wmul
     _dataToColour
       _get_colour
     _drawOverlay
       ___awdiv
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       ___wmul
       _convertDataToString
         ___awdiv
       _draw_h_line
         ___awdiv (ARG)
         _draw_pixel (ARG)
           _lcd_write_data
             _spi_write
           _set_draw_window
             _lcd_write_command
               _spi_write
             _lcd_write_data
               _spi_write
       _draw_string
         ___wmul
         _draw_char
           ___wmul
           _draw_pixel
             _lcd_write_data
               _spi_write
             _set_draw_window
               _lcd_write_command
                 _spi_write
               _lcd_write_data
                 _spi_write
           _fill_rectangle
             ___wmul (ARG)
             _dataToColour (ARG)
               _get_colour
             _set_draw_window (ARG)
               _lcd_write_command
                 _spi_write
               _lcd_write_data
                 _spi_write
             _spi_write (ARG)
       _draw_v_line
         ___awdiv (ARG)
         _draw_pixel (ARG)
           _lcd_write_data
             _spi_write
           _set_draw_window
             _lcd_write_command
               _spi_write
             _lcd_write_data
               _spi_write
     _fill_rectangle
       ___wmul (ARG)
       _dataToColour (ARG)
         _get_colour
       _set_draw_window (ARG)
         _lcd_write_command
           _spi_write
         _lcd_write_data
           _spi_write
       _spi_write (ARG)
   _fill_rectangle
     ___wmul (ARG)
     _dataToColour (ARG)
       _get_colour
     _set_draw_window (ARG)
       _lcd_write_command
         _spi_write
       _lcd_write_data
         _spi_write
     _spi_write (ARG)
   _getIRData
     _i2c_receive_data
       _i2c_master_wait
       _i2c_send_request
         _i2c_master_wait
   _initADC
   _initI2C
   _initSPI
   _lcd_init
     _delay_ms
       ___lmul
     _lcd_init_command_list
       _delay_ms
         ___lmul
       _lcd_write_command
         _spi_write
       _lcd_write_data
         _spi_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0     100      10      100.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0     100       8      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      26       5       23.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     284       6        0.0%
DATA                 0      0     284       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jan 31 15:32:41 2019

                                     ?_drawOverlay 0043                               __end_of_dataToColour 268A  
                                     ?_draw_h_line 000F                            __end_of_set_draw_window 21CC  
                                               l95 203A                                                 l98 1FD4  
                                     ___awdiv@sign 0006                                ___wmul@multiplicand 0003  
                                 fill_rectangle@x1 0017                                   fill_rectangle@x2 001B  
                                 fill_rectangle@y1 0019                                   fill_rectangle@y2 001D  
                                     ?_draw_v_line 000F                                                l101 1FB0  
                                              l110 2DF6                                                l111 2E1E  
                                              l112 2E32                                                l104 2D58  
                                              l200 1FA0                                                l120 3130  
                                              l113 2EB8                                                l105 2D6C  
                                              l121 33FA                                                l114 2E94  
                                              l106 2D92                                                l115 2E8C  
                                              l107 2DA2                                                l203 1FC2  
                                              l131 2BD2                                                l124 2606  
                                              l116 2EB4                                                l108 2E22  
                                              l140 3832                                                l132 2D24  
                                              l301 20E0                                                l125 2622  
                                              l117 2EDA                                                l109 2DFE  
                                              l141 3DC0                                                l133 2BFE  
                                              l221 24A6                                                l150 377C  
                                              l126 2644                                                l230 221A  
                                              l142 3D62                                                l134 2D00  
                                              l206 2302                                                l151 354E  
                                              l127 266E                                                l143 3D9C  
                                              l135 2D24                                                l207 22FE  
                                              l152 3648                                                l128 2688  
                                              l224 2014                                                l304 20B4  
                                              l240 285E                                                l144 3E00  
                                              l208 2332                                                l160 2944  
                                              l153 3758                                                l241 280E  
                                              l233 2242                                                l313 2348  
                                              l209 2332                                                l161 2948  
                                              l154 37A0                                                l242 283E  
                                              l250 30A2                                                l234 2228  
                                              l138 3806                                                l314 236A  
                                              l218 2146                                                l162 2948  
                                              l147 3428                                                l227 21F2  
                                              l243 2860                                                l251 2F78  
                                              l235 226A                                                l139 3DE4  
                                              l315 2394                                                l163 2948  
                                              l148 37A0                                                l228 21D8  
                                              l252 2FAE                                                l236 226A  
                                              l316 23A4                                                l164 294C  
                                              l149 3454                                                l229 221A  
                                              l253 2FCA                                                l261 2510  
                                              l165 294C                                                l190 256E  
                                              l246 21CA                                                l254 308C  
                                              l262 24C2                                                l191 2540  
                                              l239 27D0                                                l255 3072  
                                              l263 2530                                                l159 28EA  
                                              l280 2062                                                l192 253C  
                                              l256 3002                                                l264 2530  
                                              l193 256A                                                l257 306E  
                                              l249 2F32                                                l530 270A  
                                              l194 25D8                                                l258 30A2  
                                              l290 23DA                                                l531 270E  
                                              l267 22C4                                                l195 258C  
                                              l283 1FF2                                                l291 2408  
                                              l532 2738                                                l196 25D4  
                                              l292 241E                                                l533 2748  
                                              l525 26AC                                                l197 25D8  
                                              l534 2768                                                l526 26CA  
                                              l286 23BE                                                l295 20E6  
                                              l535 2774                                                l527 274C  
                                              l287 23BE                                                l296 20E6  
                                              l528 26F8                                                l288 23CC  
                                              l297 210E                                                l529 26EC  
                                              l641 2988                                                l289 23DE  
                                              l298 210E                                                l642 2A6C  
                                              l643 29C0                                                l580 2B04  
                                              l644 2A02                                                l581 2AEA  
                                              l573 2AAA                                                l645 2A32  
                                              l805 208A                                                l582 2B2E  
                                              l646 2A44                                                l583 2B40  
                                              l575 2A96                                                l584 2B32  
                                              l576 2BA4                                                l577 2ABC  
                                              l586 2B62                                                l578 2AAE  
                                              l587 2B62                                                l579 2AE6  
                                              l588 2B76                                                l589 2B94  
                                              _RC0 007C10                                                _RC1 007C11  
                                              _RC2 007C12                                                _RC4 007C14  
                                              _RC6 007C16                                       ?_draw_string 0036  
                                              u810 2552                                                u811 254C  
                                              u820 2554                                                u900 2806  
                                              u901 2802                                                u830 2566  
                                              u910 283A                                                u831 2562  
                                              u911 2836                                                u840 2584  
                                              u920 285E                                                u841 2580  
                                              u921 285A                                                u930 2F2A  
                                              u931 2F26                                                u860 25B8  
                                              u940 2F42                                                u861 25B2  
                                              u941 2F3E                                                u854 25A0  
                                              u950 2FC2                                                u855 259C  
                                              u951 2FBE                                                u880 25D0  
                                              u960 2FD8                                                u881 25CC  
                                              u961 2FD4                                                u890 27C8  
                                              u970 2FE8                                                u875 25BA  
                                              u891 27C4                                                u971 2FE4  
                                              u980 3088                                                u981 3084  
                                              u990 309E                                                u991 309A  
                                              wreg 000FE8                                    __end_of_AMGInit 20E2  
                          ??_lcd_init_command_list 0015                                       ___ftdiv@cntr 0015  
                                     ___ftdiv@sign 001A                                               l2001 3144  
                                             l2011 32DE                                               l2003 316E  
                                             l2021 25EE                                               l2013 3370  
                                             l2005 3198                                               l2101 2BCE  
                                             l2031 2662                                               l2023 25F2  
                                             l2015 25DA                                               l2007 31C2  
                                             l2111 2C32                                               l2103 2BD2  
                                             l2201 3758                                               l2033 2666  
                                             l2025 2600                                               l2017 25E6  
                                             l2009 3254                                               l2041 23B6  
                                             l2113 2C54                                               l2121 2D00  
                                             l2105 2BDA                                               l2203 375C  
                                             l2035 266E                                               l2027 261C  
                                             l2019 25EA                                               l2131 37DA  
                                             l2051 240C                                               l2043 23D0  
                                             l2123 2D04                                               l2115 2C90  
                                             l2107 2BFA                                               l2211 2118  
                                             l2205 377C                                               l2037 2688  
                                             l2029 2638                                               l2141 382E  
                                             l2133 37E2                                               l2125 37A2  
                                             l2053 2410                                               l2045 23D4  
                                             l2117 2CDC                                               l2109 2BFE  
                                             l2061 2420                                               l2213 212C  
                                             l2221 286C                                               l2071 204E  
                                             l2063 203E                                               l2215 20B6  
                                             l2207 3780                                               l2151 3A26  
                                             l2143 3832                                               l2135 3802  
                                             l2127 37CC                                               l2055 2414  
                                             l2047 23DE                                               l2039 23A8  
                                             l2119 2CE0                                               l2231 288E  
                                             l2223 286E                                               l2073 2052  
                                             l2065 2042                                               l2161 3D62  
                                             l2153 3B22                                               l2145 3922  
                                             l2137 3806                                               l2129 37D4  
                                             l2057 2418                                               l2049 2408  
                                             l2081 2016                                               l2209 2110  
                                             l2241 28E4                                               l2233 2892  
                                             l2225 2872                                               l2217 2862  
                                             l2075 2056                                               l2067 2046  
                                             l2171 3DC4                                               l2163 3D80  
                                             l2155 3C1E                                               l2147 392C  
                                             l2139 380E                                               l2059 241E  
                                             l2091 1FC8                                               l2083 2020  
                                             l2243 28EA                                               l2235 2896  
                                             l2227 2876                                               l2219 286A  
                                             l2077 205A                                               l2069 204A  
                                             l2181 3428                                               l1701 280A  
                                             l2165 3D9C                                               l2157 3D26  
                                             l2149 3936                                               l2173 3DE4  
                                             l2093 1FA2                                               l2085 202C  
                                             l2245 28F6                                               l2237 2898  
                                             l2229 287A                                               l2079 205E  
                                             l2191 354E                                               l2183 3430  
                                             l2175 33FC                                               l1711 2844  
                                             l1703 280E                                               l2167 3DA0  
                                             l2159 3D46                                               l2095 1FAA  
                                             l2087 2038                                               l2247 291A  
                                             l2239 28AC                                               l2193 3568  
                                             l2185 3450                                               l2177 3404  
                                             l1801 2B8E                                               l1713 1FF6  
                                             l1705 281A                                               l1721 2EDE  
                                             l2169 3DC0                                               l2097 2BA6  
                                             l2089 1FC4                                               l1811 269C  
                                             l2195 3648                                               l2187 3454  
                                             l2179 3424                                               l1803 2B94  
                                             l1651 2534                                               l1715 208C  
                                             l1707 2820                                               l1731 2F42  
                                             l1723 2F16                                               l2099 2BAE  
                                             l1821 26CA                                               l1813 26A4  
                                             l2197 3664                                               l2189 346E  
                                             l1805 2BA4                                               l1661 258E  
                                             l1653 2540                                               l1901 21CE  
                                             l1717 20A8                                               l1709 283E  
                                             l1741 2FD8                                               l1733 2F78  
                                             l1725 2F1A                                               l1831 270E  
                                             l1823 26D2                                               l1815 26AC  
                                             l1807 268A                                               l2199 3680  
                                             l1663 25BA                                               l1655 256E  
                                             l1671 1F98                                               l1903 21D8  
                                             l1719 20B4                                               l1751 3078  
                                             l1743 2FE8                                               l1735 2FAE  
                                             l1727 2F2E                                               l1911 2228  
                                             l1841 273E                                               l1833 2714  
                                             l1825 26E4                                               l1817 26BA  
                                             l1809 268E                                               l1921 22C4  
                                             l1665 25BC                                               l1657 2576  
                                             l1681 1FC0                                               l1673 1F9E  
                                             l1905 21EA                                               l1745 3002  
                                             l1753 308C                                               l1737 2FB2  
                                             l1729 2F32                                               l1913 223A  
                                             l1761 2334                                               l1835 272A  
                                             l1827 26EC                                               l1843 274C  
                                             l1819 26C2                                               l1771 2A6E  
                                             l1851 2D26                                               l1667 25C2  
                                             l1659 2588                                               l1675 1FB4  
                                             l1683 2188                                               l1907 21F2  
                                             l1691 2790                                               l1755 308E  
                                             l1747 3072                                               l1739 2FC6  
                                             l1915 2242                                               l1931 1FE0  
                                             l1763 2348                                               l1923 22C6  
                                             l1757 20E2                                               l1845 275C  
                                             l1837 2732                                               l1829 26F8  
                                             l1917 226E                                               l1781 2ABC  
                                             l1773 2A7E                                               l1941 2974  
                                             l1861 2D7A                                               l1853 2D36  
                                             l1677 1FB8                                               l1669 1F96  
                                             l1693 2792                                               l1685 2776  
                                             l1749 3074                                               l1909 221E  
                                             l1933 1FE4                                               l1765 2356  
                                             l1925 2302                                               l1759 20F4  
                                             l1847 2768                                               l1839 2738  
                                             l1919 22B8                                               l1791 2B40  
                                             l1783 2AEA                                               l1775 2A96  
                                             l1951 29C0                                               l1943 2984  
                                             l1871 2DC6                                               l1863 2D86  
                                             l1855 2D44                                               l1679 1FBE  
                                             l1695 27AE                                               l1687 277A  
                                             l1935 1FEA                                               l1927 1FD8  
                                             l1767 236A                                               l1849 2774  
                                             l1793 2B4E                                               l1785 2AEC  
                                             l1777 2AA6                                               l1961 29DE  
                                             l1953 29CC                                               l1945 2988  
                                             l1881 2E60                                               l1873 2DE2  
                                             l1865 2D92                                               l1857 2D58  
                                             l1697 27CC                                               l1689 277E  
                                             l1937 1FEE                                               l1929 1FDC  
                                             l1769 2374                                               l1795 2B70  
                                             l1787 2B04                                               l1779 2AAE  
                                             l1971 2A02                                               l1963 29E0  
                                             l1955 29D2                                               l1947 29AC  
                                             l1939 2950                                               l1883 2E7C  
                                             l1875 2DF6                                               l1867 2DA2  
                                             l1859 2D6C                                               l1699 27D0  
                                             l1891 24B6                                               l1797 2B76  
                                             l1789 2B32                                               l1981 2A44  
                                             l1973 2A0A                                               l1965 29EC  
                                             l1957 29D6                                               l1949 29BC  
                                             l1885 2E8C                                               l1877 2E22  
                                             l1869 2DBE                                               l1893 24C2  
                                             l1799 2B7E                                               l1983 2A6C  
                                             l1975 2A24                                               l1967 29EE  
                                             l1959 29DA                                               l1887 2EB8  
                                             l1879 2E44                                               l1895 24E2  
                                             l1991 30BA                                               l1977 2A30  
                                             l1969 29FA                                               l1985 2064  
                                             l1897 2508                                               l1889 24AA  
                                             l1993 3102                                               l1979 2A3A  
                                             l1987 208A                                               l1899 2510  
                                             l1995 3108                                               l1997 3120  
                                             l1989 30A4                                               l1999 3130  
                                             u1000 20F4                                               u1001 20F0  
                                             u1010 210A                                               u1011 2106  
                                             u1100 2B70                                               u1020 2356  
                                             u1101 2B6C                                               u1021 2352  
                                             u1110 2B8E                                               u1030 2394  
                                             u1111 2B8A                                               u1031 2390  
                                             u1120 269C                                               u1040 2A7E  
                                             u1200 2DE2                                               u1121 2698  
                                             u1041 2A7A                                               u1201 2DDE  
                                             u1130 26BA                                               u1050 2A92  
                                             u1210 2E1A                                               u1131 26B6  
                                             u1051 2A8E                                               u1211 2E16  
                                             u1140 26E4                                               u1060 2AE2  
                                             u1220 2E7C                                               u1141 26E0  
                                             u1061 2ADE                                               u1301 2998  
                                             u1221 2E78                                               u1150 2706  
                                             u1070 2B2A                                               u1310 29AC  
                                             u1230 2EB0                                               u1151 2702  
                                             u1071 2B26                                               u1311 29A8  
                                             u1231 2EAC                                               u1160 272A  
                                             u1080 2B4E                                               u1320 2A24  
                                             u1240 252C                                               u1400 23F2  
                                             u1161 2726                                               u1081 2B4A  
                                             u1321 2A20                                               u1241 2528  
                                             u1170 275C                                               u1090 2B5E  
                                             u1250 2216                                               u1330 3120  
                                             u1410 2404                                               u1171 2758  
                                             u1091 2B5A                                               u1251 2212  
                                             u1331 311C                                               u1411 2400  
                                             u1340 2600                                               u1180 2D44  
                                             u1260 2266                                               u1500 3DBC  
                                             u1420 2BCA                                               u1341 25FC  
                                             u1181 2D40                                               u1261 2262  
                                             u1501 3DB8                                               u1421 2BC6  
                                             u1350 261C                                               u1190 2D7A  
                                             u1510 3DE0                                               u1430 2BF6  
                                             u1270 232E                                               u1351 2618  
                                             u1191 2D76                                               u1511 3DDC  
                                             u1431 2BF2                                               u1271 232A  
                                             u1520 3420                                               u1360 2638  
                                             u1440 2CFC                                               u1521 341C  
                                             u1361 2634                                               u1281 2960  
                                             u1441 2CF8                                               u1530 344C  
                                             u1370 2662                                               u1290 2974  
                                             u1450 2D20                                               u1531 3448  
                                             u1371 265E                                               u1291 2970  
                                             u1451 2D1C                                               u1540 346E  
                                             u1460 37FE                                               u1380 23CC  
                                             u1541 346A                                               u1461 37FA  
                                             u1381 23C8                                               u1550 3568  
                                             u1470 382A                                               u1390 23F0  
                                             u1551 3564                                               u1471 3826  
                                             u1391 23EA                                               u1560 3664  
                                             u1480 3D46                                               u1561 3660  
                                             u1481 3D42                                               u1570 3680  
                                             u1490 3D80                                               u1571 367C  
                                             u1491 3D7C                                               u1580 3778  
                                             u1581 3774                                               u1590 379C  
                                             u1591 3798                                               _RCEN 007E2B  
                                             _Font 3E03                             __end_of_lcd_write_data 1FA2  
                                             _addr 3FF5                                               _main 2862  
                                     ___ftpack@arg 0001                           fill_rectangle@colour_low 0024  
                                     ___ftpack@exp 0004                                               fsr1h 000FE2  
                                             fsr2h 000FDA                                               indf2 000FDF  
                                             fsr1l 000FE1                                               fsr2l 000FD9  
                                             prodh 000FF4                                               prodl 000FF3  
                                             start 0000                                       ___param_bank 000000  
                                    _i2c_send_data 203C                                        draw_pixel@x 000E  
                                      draw_pixel@y 000B                                  ?_i2c_send_request 0002  
                                    __CFG_PLLDIV$4 000000                                 ??_i2c_send_request 0003  
                             i2c_send_data@address 0004                                       drawOverlay@x 0043  
                                     drawOverlay@y 0045                                              ?_main 0001  
                                  __end_of___awdiv 2776                                    __end_of___ftdiv 2A6E  
                                  ___awdiv@divisor 0003                                      get_colour@red 000B  
                                  ___awdiv@counter 0005                                              _RPOR0 000EC6  
                                            _RPOR1 000EC7                                     delay_ms@cycles 0011  
                                   delay_ms@millis 000D                                              _Font2 3F02  
                              ___lmul@multiplicand 0005                                    __end_of_initI2C 1FD6  
                                  __end_of_initADC 1FB2                                    __end_of_initSPI 203C  
                                    ___ftpack@sign 0005                                              tablat 000FF5  
                                     draw_h_line@x 0018                       __size_of_convertDataToString 01B6  
             __size_of_calculateInterpolatedPixels 03A6                                    ?_lcd_write_data 0001  
                                            status 000FD8                                     ?_i2c_send_data 0002  
                                __end_of_BG_COLOUR 3FF4                                    __initialization 2148  
                                     __end_of_Font 3F02                         __size_of_lcd_write_command 0012  
calculateInterpolatedPixels@xy_interpolated_buffer 000F                                       __end_of_addr 3FF6  
                                     __end_of_main 2950                                       draw_v_line@y 0018  
                                 ?_set_draw_window 0007              drawBuffersToDisplay@temperature_range 006E  
                                           ??_main 005F                                          ??_AMGInit 0005  
                                    __activetblptr 000002                             _xy_interpolated_pixels 0200  
                                     draw_string@x 0040                                       draw_string@y 0036  
                                           _ADCON0 000FC2                                             _ADCON1 000FC1  
                                           _ADRESH 000FC4                                             _ADRESL 000FC3  
                                           _EECON2 000FA7                                   ___awdiv@dividend 0001  
                                 __end_of___ftpack 2BA6                                     get_colour@blue 0002  
                                           _IOLOCK 0077F8                                     __CFG_WDTEN$OFF 000000  
                                 __end_of___lwtoft 208C                                             _OSCCON 000FD3  
                                           _TRISA0 007C90                                             _TRISA1 007C91  
                                           _TRISC0 007CA0                                             _TRISC1 007CA1  
                                           _TRISC2 007CA2                                             _TRISB4 007C9C  
                                           _TRISB5 007C9D                              __size_of_dataToColour 00B0  
                                 __end_of_delay_ms 2334                                     __CFG_XINST$OFF 000000  
                                 __end_of_lcd_init 2148                                             ___lmul 2334  
                                 __end_of_box_size 3FF0                                             ___wmul 208C  
                                        ??___awdiv 0005                                     __CFG_STVREN$ON 000000  
                          i2c_send_request@address 0003                                          ??___ftdiv 0012  
                                  _i2c_master_wait 20E2                                  draw_string@colour 0037  
                                    draw_char@line 0032                                      draw_char@size 002D  
                             __size_of_drawOverlay 0358                                             clear_0 2150  
                                           clear_1 2164                                             clear_2 2176  
                                 ___awdiv@quotient 0007                               __size_of_draw_h_line 0050  
                                        ??_initI2C 0001                                          ??_initADC 0001  
                                        ??_initSPI 0001                                      draw_h_line@x1 0017  
                                    draw_h_line@x2 0010                                      draw_h_line@y1 000F  
                                    draw_h_line@y2 0011                               __size_of_draw_v_line 0050  
                                     __mediumconst 3E02                              drawBuffersToDisplay@h 0072  
                            drawBuffersToDisplay@v 0074                              drawBuffersToDisplay@x 0076  
                            drawBuffersToDisplay@y 0078                               __size_of_draw_string 008A  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8                                   ??_fill_rectangle 0021  
                                     _dataToColour 25DA                                         __accesstop 0060  
                          __end_of__initialization 217C                                      spi_write@data 0003  
                             fill_rectangle@colour 001F                                   i2c_send_data@reg 0002  
              drawBuffersToDisplay@vertical_buffer 0064                                    ??_i2c_send_data 0004  
                                    ___rparam_used 000001                                         ___ftdiv@f1 000C  
                                       ___ftdiv@f2 000F                                         ___ftdiv@f3 0016  
 calculateInterpolatedPixels@x_interpolated_buffer 000D                          __size_of_i2c_receive_data 007A  
                                    __end_of_Font2 3FDE                                     __pcstackCOMRAM 0001  
                            _x_interpolated_pixels 0280                                 __size_of_getIRData 0180  
                                       ___lwtoft@c 0009                                      draw_v_line@x1 0017  
                                    draw_v_line@x2 0010                                      draw_v_line@y1 000F  
                                    draw_v_line@y2 0011                              draw_string@char_width 003C  
                    dataToColour@temperature_range 000E                                    draw_string@size 0039  
                               __size_of_draw_char 01C8                      __size_of_drawBuffersToDisplay 0660  
                            lcd_write_command@data 0006                     __size_of_lcd_init_command_list 0088  
                                       __pbssBANK0 007A                                         __pbssBANK1 0100  
                                       __pbssBANK2 0200                      __end_of_lcd_init_command_list 24A8  
           calculateInterpolatedPixels@main_buffer 0009                            __end_of_i2c_master_wait 2110  
                                 draw_pixel@colour 000C                        drawBuffersToDisplay@d_pixel 006C  
                      drawBuffersToDisplay@h_pixel 0068                                            ?___lmul 0001  
                                          ?___wmul 0001                                     ___lmul@product 0009  
                              _convertDataToString 2D26                        drawBuffersToDisplay@v_pixel 006A  
                                        ?___ftpack 0001                                            _AMGInit 20B6  
                                    _cursor_colour 3FEC                                      getIRData@data 000F  
                                        ?___lwtoft 0009                            i2c_receive_data@address 0008  
                               __CFG_OSC$INTOSCPLL 000000                                    get_colour@green 0001  
                                       _get_colour 226C                                          ?_delay_ms 000D  
                                          _OSCTUNE 000F9B                                 __size_of_spi_write 00A8  
                                          _SSP1ADD 000FC8                          __size_of_i2c_send_request 001E  
                                 ??_lcd_write_data 0006                                            _SSP1BUF 000FC9  
                                          _SSP2BUF 000F75                                   drawOverlay@h_pos 0057  
                                        ?_lcd_init 0001                                   drawOverlay@v_pos 0059  
                                       _draw_pixel 1FF4                                  __end_of_getIRData 2D26  
                             ?_convertDataToString 0009                                 lcd_write_data@data 0006  
                              i2c_send_request@reg 0002                                            __Hparam 0000  
                         convertDataToString@units 000F                                            __Lparam 0000  
                                __end_of_draw_char 30A4                                            ___awdiv 268A  
                                  __size_of___lmul 0072                                            ___ftdiv 2950  
                                  __size_of___wmul 002A              drawBuffersToDisplay@horizontal_buffer 0062  
              __end_of_calculateInterpolatedPixels 37A2                        _calculateInterpolatedPixels 33FC  
                                        _BG_COLOUR 3FF2                                            __pcinit 2148  
                                       ??___ftpack 0006                                            __ramtop 0F00  
                                          __ptext0 2862                                            __ptext1 2110  
                                          __ptext2 2420                                            __ptext3 22C6  
                                          __ptext4 2334                                            __ptext5 2016  
                                          __ptext6 1FC4                                            __ptext7 1FA2  
                                          __ptext8 2BA6                                            __ptext9 23A6  
                                       getIRData@x 0015                                         getIRData@y 0017  
                             i2c_receive_data@data 0007                                 draw_string@counter 0041  
                                       ??___lwtoft 000C                                    getIRData@buffer 0009  
                                          _initI2C 1FC4                                            _initADC 1FA2  
                                          _initSPI 2016                      ??_calculateInterpolatedPixels 0011  
                                       ??_delay_ms 0011                                         ??_lcd_init 0015  
                                  _start_pixel_reg 3FF4                               end_of_initialization 217C  
                            ??_convertDataToString 000D                                      __Lmediumconst 3E02  
                                 ?_i2c_master_wait 0001                                   _i2c_receive_data 23A6  
                                __end_of_spi_write 25DA                                            postdec1 000FE5  
                                          postdec2 000FDD                                            postinc0 000FEE  
                                          postinc2 000FDE                                  set_draw_window@x1 000A  
                                set_draw_window@x2 0008                                  set_draw_window@y1 0007  
                                set_draw_window@y2 0009                                   __CFG_CPUDIV$OSC1 000000  
                                      ?_get_colour 0001                           __size_of_set_draw_window 0046  
                                  fill_rectangle@x 0027                                    fill_rectangle@y 0025  
                                      ?_draw_pixel 000B                                  i2c_send_data@data 0003  
                                      ___ftdiv@exp 0019                                         draw_char@c 002A  
                                       draw_char@i 0035                                         draw_char@j 0034  
              drawBuffersToDisplay@diagonal_buffer 0066                                         draw_char@x 0033  
                                       draw_char@y 0029                                      ??_drawOverlay 0049  
                  drawBuffersToDisplay@main_buffer 0060                            drawOverlay@batt_voltage 004C  
                                    ??_draw_h_line 0014                                     __end_of___lmul 23A6  
                                   __end_of___wmul 20B6                                      ??_draw_v_line 0014  
                                    ??_draw_string 003C                            __end_of_start_pixel_reg 3FF5  
                              start_initialization 2148                       calculateInterpolatedPixels@x 001D  
                     calculateInterpolatedPixels@y 001F                                   _i2c_send_request 1FD6  
 calculateInterpolatedPixels@y_interpolated_buffer 000B                                  draw_v_line@colour 0012  
                            __end_of_i2c_send_data 2064                                __size_of_get_colour 005A  
                     __end_of_drawBuffersToDisplay 3E02                                           ??___lmul 0009  
                                         ??___wmul 0005                              _y_interpolated_pixels 0100  
                              __size_of_draw_pixel 0022                                           ?_AMGInit 0001  
                              __end_of_drawOverlay 33FC                                  __size_of___ftpack 0138  
                              __end_of_draw_h_line 221C                                  __size_of___lwtoft 0028  
                                    __pcstackBANK0 0060                                __end_of_draw_v_line 226C  
                              __end_of_draw_string 2532                                  __size_of_delay_ms 006E  
                              __end_of_colour_list 3FEC                                  draw_h_line@colour 0012  
                                ??_set_draw_window 000A                                  __size_of_lcd_init 0038  
                                   draw_string@str 003A                              _lcd_init_command_list 2420  
                                        _getIRData 2BA6                            __size_of_fill_rectangle 00EC  
                                    __pmediumconst 3E02                                           ?___awdiv 0001  
                    drawOverlay@temperature_buffer 004F                                           ?___ftdiv 000C  
                                  drawOverlay@data 0047                                          _draw_char 2EDC  
                                         ?_initI2C 0001                                           ?_initADC 0001  
                                         ?_initSPI 0001                            convertDataToString@data 000B  
                        fill_rectangle@colour_high 0023                            convertDataToString@buff 0009  
                          convertDataToString@tens 0011                           __end_of_i2c_receive_data 2420  
                                        _ir_buffer 0180                                          _max_pixel 0080  
                                   getIRData@dataH 0012                                     getIRData@dataL 0011  
                              i2c_receive_data@reg 0004                                          _min_pixel 007A  
                                   ___wmul@product 0005                             drawOverlay@ADC_reading 0055  
                                 get_colour@colour 0009                                         ?_getIRData 0009  
                          dataToColour@colour_temp 0015                                        _drawOverlay 30A4  
                                         _SSP1CON1 000FC6                                           _SSP1CON2 000FC5  
                                         _SSP2CON1 000F72                                           _SSP1STAT 000FC7  
                                         _SSP2STAT 000F73                                        _draw_h_line 21CC  
                                dataToColour@green 0014                                          _spi_write 2532  
                                       ?_draw_char 0029                                        _draw_v_line 221C  
                                ___wmul@multiplier 0001                                        _draw_string 24A8  
                                 __size_of_AMGInit 002C                                        _colour_list 3FDE  
                      __end_of_convertDataToString 2EDC                                       ??_get_colour 0003  
                                    ?_dataToColour 000C                               _drawBuffersToDisplay 37A2  
                                ___lmul@multiplier 0001                                       ??_draw_pixel 000E  
                                       spi_write@i 0004                             ?_lcd_init_command_list 0001  
                          __size_of_lcd_write_data 000E                                           __Hrparam 0000  
                                         __Lrparam 0000                           __end_of_i2c_send_request 1FF4  
                               __end_of_get_colour 22C6                                   __size_of___awdiv 00EC  
                                 __size_of___ftdiv 011E                           __size_of_i2c_master_wait 002E  
                                         ___ftpack 2A6E                                         ?_spi_write 0001  
                               __end_of_draw_pixel 2016                                draw_string@char_pos 003E  
                                         ___lwtoft 2064                                   __size_of_initI2C 0012  
                                 __size_of_initADC 0010                                   __size_of_initSPI 0026  
                                         _delay_ms 22C6                                __end_of_num_colours 3FF2  
                                   ??_dataToColour 0010                              ?_drawBuffersToDisplay 0060  
                                         __ptext10 1FD6                                           __ptext11 37A2  
                                         __ptext20 2186                                           __ptext12 30A4  
                                         __ptext21 1F94                                           __ptext13 221C  
                                         __ptext30 33FC                                           __ptext22 1FB2  
                                         __ptext14 24A8                                           __ptext31 268A  
                                         __ptext23 2532                                           __ptext15 2EDC  
                                         __ptext32 20B6                                           __ptext24 2D26  
                                         __ptext16 2776                                           __ptext33 203C  
                                         __ptext25 2064                                           __ptext17 208C  
                                         __ptext34 20E2                                           __ptext26 2950  
                                         __ptext18 21CC                                           __ptext27 2A6E  
                                         __ptext19 1FF4                                           __ptext28 25DA  
                                         __ptext29 226C                                    draw_char@colour 002B  
                                         _lcd_init 2110                                           _box_size 3FEE  
                         drawBuffersToDisplay@data 0070                                      __size_of_main 00EE  
                                   _fill_rectangle 2776                                        ??_getIRData 000B  
                              getIRData@this_pixel 0013                                   dataToColour@data 000C  
                                 dataToColour@blue 0012                              __end_of_cursor_colour 3FEE  
                                      ??_draw_char 002E                                    _set_draw_window 2186  
                           __end_of_fill_rectangle 2862                                    dataToColour@red 0013  
                                _lcd_write_command 1FB2                       ?_calculateInterpolatedPixels 0009  
                                      ??_spi_write 0001                                 ?_lcd_write_command 0001  
                                      _num_colours 3FF0                                  ??_i2c_master_wait 0001  
                           ??_drawBuffersToDisplay 005B                                ??_lcd_write_command 0006  
                                ?_i2c_receive_data 0004                             __size_of_i2c_send_data 0028  
                               ??_i2c_receive_data 0005                                    ?_fill_rectangle 0017  
                                   _lcd_write_data 1F94                          __end_of_lcd_write_command 1FC4  
